<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-godbus-dbus-2-0.3.git939230d.fc24">
  <packages>
    <package importpath="github.com/godbus/dbus/prop">
      <types>
        <type name="EmitType" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type type="struct" name="Prop">
          <field type="interface" name="Value"/>
          <field type="ident" def="bool" name="Writable"/>
          <field type="ident" def="EmitType" name="Emit"/>
          <field type="func" name="Callback">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Change"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="dbus"/>
                  <item value="Error"/>
                </type>
              </type>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="Change">
          <field type="pointer" name="Props">
            <type type="ident" def="Properties"/>
          </field>
          <field type="ident" def="string" name="Iface"/>
          <field type="ident" def="string" name="Name"/>
          <field type="interface" name="Value"/>
        </type>
        <type type="struct" name="Properties">
          <field type="map" name="m">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Prop"/>
              </valtype>
            </valtype>
          </field>
          <field type="selector" name="mut">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="pointer" name="conn">
            <type type="selector">
              <prefix value="dbus"/>
              <item value="Conn"/>
            </type>
          </field>
          <field type="selector" name="path">
            <prefix value="dbus"/>
            <item value="ObjectPath"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Conn"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="dbus"/>
              <item value="ObjectPath"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="pointer">
                  <type type="ident" def="Prop"/>
                </valtype>
              </valtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="dbus"/>
              <item value="Variant"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="selector">
                <prefix value="dbus"/>
                <item value="Variant"/>
              </valtype>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetMust">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Introspection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="introspect"/>
                <item value="Property"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="dbus"/>
              <item value="Variant"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="SetMust">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="EmitFalse"/>
        <name value="EmitTrue"/>
        <name value="EmitInvalidates"/>
        <name value="ErrIfaceNotFound"/>
        <name value="ErrPropNotFound"/>
        <name value="ErrReadOnly"/>
        <name value="ErrInvalidArg"/>
        <name value="IntrospectData"/>
        <name value="IntrospectDataString"/>
      </names>
    </package>
    <package importpath="github.com/godbus/dbus/introspect">
      <types>
        <type name="Introspectable" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Node">
          <field type="selector" name="XMLName">
            <prefix value="xml"/>
            <item value="Name"/>
          </field>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Interfaces">
            <elmtype type="ident" def="Interface"/>
          </field>
          <field type="slice" name="Children">
            <elmtype type="ident" def="Node"/>
          </field>
        </type>
        <type type="struct" name="Interface">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Methods">
            <elmtype type="ident" def="Method"/>
          </field>
          <field type="slice" name="Signals">
            <elmtype type="ident" def="Signal"/>
          </field>
          <field type="slice" name="Properties">
            <elmtype type="ident" def="Property"/>
          </field>
          <field type="slice" name="Annotations">
            <elmtype type="ident" def="Annotation"/>
          </field>
        </type>
        <type type="struct" name="Method">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="Arg"/>
          </field>
          <field type="slice" name="Annotations">
            <elmtype type="ident" def="Annotation"/>
          </field>
        </type>
        <type type="struct" name="Signal">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Args">
            <elmtype type="ident" def="Arg"/>
          </field>
          <field type="slice" name="Annotations">
            <elmtype type="ident" def="Annotation"/>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Access"/>
          <field type="slice" name="Annotations">
            <elmtype type="ident" def="Annotation"/>
          </field>
        </type>
        <type type="struct" name="Arg">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="Direction"/>
        </type>
        <type type="struct" name="Annotation">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Value"/>
        </type>
      </types>
      <functions>
        <function name="NewIntrospectable">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Introspectable"/>
          </resultsList>
        </function>
        <function name="Introspect">
          <recvList>
            <type type="ident" def="Introspectable"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Methods">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Method"/>
            </type>
          </resultsList>
        </function>
        <function name="Call">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="dbus"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="IntrospectData"/>
        <name value="IntrospectDeclarationString"/>
        <name value="IntrospectDataString"/>
      </names>
    </package>
    <package importpath="github.com/godbus/dbus">
      <types>
        <type type="struct" name="Variant">
          <field type="ident" def="Signature" name="sig"/>
          <field type="interface" name="value"/>
        </type>
        <type type="struct" name="Ucred">
          <field type="ident" def="int32" name="Pid"/>
          <field type="ident" def="uint32" name="Uid"/>
          <field type="ident" def="uint32" name="Gid"/>
        </type>
        <type type="struct" name="Signature">
          <field type="ident" def="string" name="str"/>
        </type>
        <type type="struct" name="SignatureError">
          <field type="ident" def="string" name="Sig"/>
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type name="Flags" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type name="Type" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type name="HeaderField" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type name="InvalidMessageError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Message">
          <field type="ident" def="Type" name=""/>
          <field type="ident" def="Flags" name=""/>
          <field type="map" name="Headers">
            <keytype type="ident" def="HeaderField"/>
            <valtype type="ident" def="Variant"/>
          </field>
          <field type="slice" name="Body">
            <elmtype type="interface"/>
          </field>
          <field type="ident" def="uint32" name="serial"/>
        </type>
        <type name="Sender" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="ReleaseNameReply" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type name="RequestNameFlags" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type name="RequestNameReply" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type name="FormatError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="InvalidTypeError">
          <field type="selector" name="Type">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
        </type>
        <type name="ObjectPath" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="UnixFD" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="UnixFDIndex" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type type="struct" name="Conn">
          <field type="ident" def="transport" name=""/>
          <field type="pointer" name="busObj">
            <type type="ident" def="Object"/>
          </field>
          <field type="ident" def="bool" name="unixFD"/>
          <field type="ident" def="string" name="uuid"/>
          <field type="slice" name="names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="namesLck">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="serialLck">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="uint32" name="nextSerial"/>
          <field type="map" name="serialUsed">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="map" name="calls">
            <keytype type="ident" def="uint32"/>
            <valtype type="pointer">
              <type type="ident" def="Call"/>
            </valtype>
          </field>
          <field type="selector" name="callsLck">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="handlers">
            <keytype type="ident" def="ObjectPath"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="interface"/>
            </valtype>
          </field>
          <field type="selector" name="handlersLck">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="channel" dir="3" name="out">
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </field>
          <field type="ident" def="bool" name="closed"/>
          <field type="selector" name="outLck">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="slice" name="signals">
            <elmtype type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Signal"/>
              </type>
            </elmtype>
          </field>
          <field type="selector" name="signalsLck">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="channel" dir="1" name="eavesdropped">
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </field>
          <field type="selector" name="eavesdroppedLck">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Body">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="Signal">
          <field type="ident" def="string" name="Sender"/>
          <field type="ident" def="ObjectPath" name="Path"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Body">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="Call">
          <field type="ident" def="string" name="Destination"/>
          <field type="ident" def="ObjectPath" name="Path"/>
          <field type="ident" def="string" name="Method"/>
          <field type="slice" name="Args">
            <elmtype type="interface"/>
          </field>
          <field type="channel" dir="3" name="Done">
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </field>
          <field type="ident" def="error" name="Err"/>
          <field type="slice" name="Body">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="Object">
          <field type="pointer" name="conn">
            <type type="ident" def="Conn"/>
          </field>
          <field type="ident" def="string" name="dest"/>
          <field type="ident" def="ObjectPath" name="path"/>
        </type>
        <type name="AuthStatus" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type name="Auth" type="interface">
          <method name="FirstData">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="AuthStatus"/>
            </resultsList>
          </method>
          <method name="HandleData">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="AuthStatus"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="ident" def="varTypeError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="sigSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Intersect">
          <recvList>
            <type type="ident" def="sigSet"/>
          </recvList>
          <paramsList>
            <type type="ident" def="sigSet"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Single">
          <recvList>
            <type type="ident" def="sigSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ToArray">
          <recvList>
            <type type="ident" def="sigSet"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList>
            <type type="ident" def="numNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="numNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList>
            <type type="ident" def="numNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="numNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList>
            <type type="ident" def="stringNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="stringNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList>
            <type type="ident" def="stringNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="stringNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="boolNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="boolNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList>
            <type type="ident" def="arrayNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="arrayNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList>
            <type type="ident" def="arrayNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="arrayNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="variantNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="variantNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList>
            <type type="ident" def="dictNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="dictNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList>
            <type type="ident" def="dictNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="dictNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Infer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="byteStringNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sigs">
          <recvList>
            <type type="ident" def="byteStringNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="sigSet"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="byteStringNode"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MakeVariant">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Variant"/>
          </resultsList>
        </function>
        <function name="ParseVariant">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Variant"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Signature">
          <recvList>
            <type type="ident" def="Variant"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Signature"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Variant"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="ident" def="Variant"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="SendNullByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnixCredentials">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Ucred"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="ParseUnixCredentials">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="syscall"/>
                <item value="SocketControlMessage"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ucred"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendNullByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="oobReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EnableUnixFDs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ReadMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SupportsUnixFDs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SendNullByte">
          <recvList>
            <type type="ident" def="genericTransport"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SupportsUnixFDs">
          <recvList>
            <type type="ident" def="genericTransport"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EnableUnixFDs">
          <recvList>
            <type type="ident" def="genericTransport"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ReadMessage">
          <recvList>
            <type type="ident" def="genericTransport"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendMessage">
          <recvList>
            <type type="ident" def="genericTransport"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendNullByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unixTransport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SignatureOf">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Signature"/>
          </resultsList>
        </function>
        <function name="SignatureOfType">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Signature"/>
          </resultsList>
        </function>
        <function name="ParseSignature">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Signature"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseSignatureMust">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Signature"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="Signature"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Single">
          <recvList>
            <type type="ident" def="Signature"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Signature"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="SignatureError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="InvalidMessageError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeMessage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="binary"/>
              <item value="ByteOrder"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Serial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Emit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ObjectPath"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Export">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="ObjectPath"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReleaseName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ReleaseNameReply"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RequestName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="RequestNameFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="RequestNameReply"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="encoder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="decoder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Signature"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="FormatError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="InvalidTypeError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Store">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="ObjectPath"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SessionBus">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SessionBusPrivate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SystemBus">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SystemBusPrivate">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BusObject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Eavesdrop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Message"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Hello">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Names">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Object">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="ObjectPath"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
            <type type="channel" dir="3">
              <type type="pointer">
                <type type="ident" def="Call"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </resultsList>
        </function>
        <function name="Signal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="ident" def="Signal"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SupportsUnixFDs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Store">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Call">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Flags"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </resultsList>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Variant"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Go">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Flags"/>
            <type type="channel" dir="3">
              <type type="pointer">
                <type type="ident" def="Call"/>
              </type>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Call"/>
            </type>
          </resultsList>
        </function>
        <function name="Destination">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Path">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ObjectPath"/>
          </resultsList>
        </function>
        <function name="AuthCookieSha1">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Auth"/>
          </resultsList>
        </function>
        <function name="FirstData">
          <recvList>
            <type type="ident" def="authCookieSha1"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="AuthStatus"/>
          </resultsList>
        </function>
        <function name="HandleData">
          <recvList>
            <type type="ident" def="authCookieSha1"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="AuthStatus"/>
          </resultsList>
        </function>
        <function name="AuthExternal">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Auth"/>
          </resultsList>
        </function>
        <function name="FirstData">
          <recvList>
            <type type="ident" def="authExternal"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="AuthStatus"/>
          </resultsList>
        </function>
        <function name="HandleData">
          <recvList>
            <type type="ident" def="authExternal"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="AuthStatus"/>
          </resultsList>
        </function>
        <function name="Auth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Auth"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SizeofUcred"/>
        <name value="FlagNoReplyExpected"/>
        <name value="FlagNoAutoStart"/>
        <name value="TypeMethodCall"/>
        <name value="TypeMethodReply"/>
        <name value="TypeError"/>
        <name value="TypeSignal"/>
        <name value="FieldPath"/>
        <name value="FieldInterface"/>
        <name value="FieldMember"/>
        <name value="FieldErrorName"/>
        <name value="FieldReplySerial"/>
        <name value="FieldDestination"/>
        <name value="FieldSender"/>
        <name value="FieldSignature"/>
        <name value="FieldUnixFDs"/>
        <name value="ReleaseNameReplyReleased"/>
        <name value="ReleaseNameReplyNonExistent"/>
        <name value="ReleaseNameReplyNotOwner"/>
        <name value="NameFlagAllowReplacement"/>
        <name value="NameFlagReplaceExisting"/>
        <name value="NameFlagDoNotQueue"/>
        <name value="RequestNameReplyPrimaryOwner"/>
        <name value="RequestNameReplyInQueue"/>
        <name value="RequestNameReplyExists"/>
        <name value="RequestNameReplyAlreadyOwner"/>
        <name value="ErrClosed"/>
        <name value="AuthOk"/>
        <name value="AuthContinue"/>
        <name value="AuthError"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="bytes"/>
    <import path="errors"/>
    <import path="fmt"/>
    <import path="io"/>
    <import path="reflect"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="unicode/utf8"/>
    <import path="unicode"/>
    <import path="os"/>
    <import path="syscall"/>
    <import path="C"/>
    <import path="unsafe"/>
    <import path="encoding/binary"/>
    <import path="net"/>
    <import path="bufio"/>
    <import path="os/user"/>
    <import path="sync"/>
    <import path="os/exec"/>
    <import path="crypto/rand"/>
    <import path="crypto/sha1"/>
    <import path="encoding/hex"/>
    <import path="github.com/godbus/dbus"/>
    <import path="github.com/godbus/dbus/introspect"/>
    <import path="encoding/xml"/>
    <import path="github.com/godbus/dbus/prop"/>
    <import path="encoding/json"/>
  </imports>
</project>
