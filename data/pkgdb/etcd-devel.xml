<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="etcd-2.1.2-1.fc24">
  <packages>
    <package importpath="github.com/coreos/etcd/migrate">
      <types>
        <type type="struct" name="StandbyInfo4">
          <field type="ident" def="bool" name="Running"/>
          <field type="slice" name="Cluster">
            <elmtype type="pointer">
              <type type="ident" def="MachineMessage"/>
            </elmtype>
          </field>
          <field type="ident" def="float64" name="SyncInterval"/>
        </type>
        <type type="struct" name="MachineMessage">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="State"/>
          <field type="ident" def="string" name="ClientURL"/>
          <field type="ident" def="string" name="PeerURL"/>
        </type>
        <type type="struct" name="Snapshot4">
          <field type="slice" name="State">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint64" name="LastIndex"/>
          <field type="ident" def="uint64" name="LastTerm"/>
          <field type="slice" name="Peers">
            <elmtype type="struct" name="">
              <field type="ident" def="string" name="Name"/>
              <field type="ident" def="string" name="ConnectionString"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="Store4">
          <field type="pointer" name="Root">
            <type type="ident" def="node"/>
          </field>
          <field type="ident" def="uint64" name="CurrentIndex"/>
          <field type="ident" def="int" name="CurrentVersion"/>
        </type>
        <type name="SnapshotFileNames" type="slice">
          <elmtype type="ident" def="SnapshotFileName"/>
        </type>
        <type type="struct" name="SnapshotFileName">
          <field type="ident" def="string" name="FileName"/>
          <field type="ident" def="uint64" name="Term"/>
          <field type="ident" def="uint64" name="Index"/>
        </type>
        <type name="Log4" type="slice">
          <elmtype type="pointer">
            <type type="selector">
              <prefix value="etcd4pb"/>
              <item value="LogEntry"/>
            </type>
          </elmtype>
        </type>
        <type name="Command4" type="interface">
          <method name="Type2">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="EntryType"/>
              </type>
            </resultsList>
          </method>
          <method name="Data2">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RemoveCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="uint64" name="id"/>
        </type>
        <type type="struct" name="JoinCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="RaftURL"/>
          <field type="ident" def="string" name="EtcdURL"/>
          <field type="ident" def="member" name="memb"/>
        </type>
        <type type="struct" name="SetClusterConfigCommand">
          <field type="pointer" name="Config">
            <type type="struct" name="">
              <field type="ident" def="int" name="ActiveSize"/>
              <field type="ident" def="float64" name="RemoveDelay"/>
              <field type="ident" def="float64" name="SyncInterval"/>
            </type>
          </field>
        </type>
        <type type="struct" name="CompareAndDeleteCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="PrevValue"/>
          <field type="ident" def="uint64" name="PrevIndex"/>
        </type>
        <type type="struct" name="CompareAndSwapCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="ExpireTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="string" name="PrevValue"/>
          <field type="ident" def="uint64" name="PrevIndex"/>
        </type>
        <type type="struct" name="CreateCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="ExpireTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="bool" name="Unique"/>
          <field type="ident" def="bool" name="Dir"/>
        </type>
        <type type="struct" name="DeleteCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="bool" name="Recursive"/>
          <field type="ident" def="bool" name="Dir"/>
        </type>
        <type type="struct" name="SetCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="ExpireTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="bool" name="Dir"/>
        </type>
        <type type="struct" name="UpdateCommand">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Value"/>
          <field type="selector" name="ExpireTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="SyncCommand">
          <field type="selector" name="Time">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="DefaultJoinCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ConnectionString"/>
        </type>
        <type type="struct" name="DefaultLeaveCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="uint64" name="id"/>
        </type>
        <type type="struct" name="NOPCommand"/>
        <type type="struct" name="Config4">
          <field type="ident" def="uint64" name="CommitIndex"/>
          <field type="slice" name="Peers">
            <elmtype type="struct" name="">
              <field type="ident" def="string" name="Name"/>
              <field type="ident" def="string" name="ConnectionString"/>
            </elmtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="ClientURLs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StandbyInfo4"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="InitialCluster">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StandbyInfo4"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeStandbyInfo4FromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StandbyInfo4"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNodesFromStore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="Snapshot2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Snapshot"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="DecodeLatestSnapshot4FromDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindLatestFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeSnapshot4FromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeSnapshot4">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSnapshotFileNames">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="SnapshotFileName"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotFileNames"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotFileNames"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotFileNames"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewMember">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="URLs"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="member"/>
            </type>
          </resultsList>
        </function>
        <function name="UnixTimeOrPermanent">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="NodeIDs">
          <recvList>
            <type type="ident" def="Log4"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="StorePath">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeLog4FromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Log4"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeLog4">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="os"/>
                <item value="File"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="etcd4pb"/>
                  <item value="LogEntry"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeNextEntry4">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcd4pb"/>
                <item value="LogEntry"/>
              </type>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCommand4">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="uint64"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Command4"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RemoveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RemoveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetClusterConfigCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetClusterConfigCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompareAndDeleteCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompareAndDeleteCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompareAndSwapCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompareAndSwapCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpdateCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpdateCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SyncCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SyncCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="ident" def="NOPCommand"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Type2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NOPCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="Data2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NOPCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Entries4To2">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="etcd4pb"/>
                  <item value="LogEntry"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="raftpb"/>
                <item value="Entry"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Migrate4To2">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GuessNodeID">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="uint64"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Snapshot4"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Config4"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="HardState2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config4"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="HardState"/>
            </type>
          </resultsList>
        </function>
        <function name="DecodeConfig4FromFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config4"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/discovery">
      <types/>
      <functions>
        <function name="SRVGetCluster">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="URLs"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinCluster">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCluster">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="sortableNodes"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="sortableNodes"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="sortableNodes"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ErrInvalidURL"/>
        <name value="ErrBadSizeKey"/>
        <name value="ErrSizeNotFound"/>
        <name value="ErrTokenNotFound"/>
        <name value="ErrDuplicateID"/>
        <name value="ErrFullCluster"/>
        <name value="ErrTooManyRetries"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver/auth">
      <types>
        <type type="struct" name="Store">
          <field type="ident" def="doer" name="server"/>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="ensuredOnce"/>
        </type>
        <type type="struct" name="User">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Password"/>
          <field type="slice" name="Roles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Grant">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Revoke">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Role">
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="Permissions" name="Permissions"/>
          <field type="pointer" name="Grant">
            <type type="ident" def="Permissions"/>
          </field>
          <field type="pointer" name="Revoke">
            <type type="ident" def="Permissions"/>
          </field>
        </type>
        <type type="struct" name="Permissions">
          <field type="ident" def="rwPermission" name="KV"/>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="httpStatus"/>
          <field type="ident" def="string" name="errmsg"/>
        </type>
      </types>
      <functions>
        <function name="IsEmpty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HTTPStatus">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewStore">
          <recvList/>
          <paramsList>
            <type type="ident" def="doer"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </resultsList>
        </function>
        <function name="AllUsers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateOrUpdateUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="User"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="User"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="User"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="User"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AllRoles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Role"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Role"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Role"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Role"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthEnabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EnableAuth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DisableAuth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckPassword">
          <recvList>
            <type type="ident" def="User"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasKeyAccess">
          <recvList>
            <type type="ident" def="Role"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasRecursiveAccess">
          <recvList>
            <type type="ident" def="Role"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Grant">
          <recvList>
            <type type="ident" def="Permissions"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Permissions"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Revoke">
          <recvList>
            <type type="ident" def="Permissions"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Permissions"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Grant">
          <recvList>
            <type type="ident" def="rwPermission"/>
          </recvList>
          <paramsList>
            <type type="ident" def="rwPermission"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="rwPermission"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Revoke">
          <recvList>
            <type type="ident" def="rwPermission"/>
          </recvList>
          <paramsList>
            <type type="ident" def="rwPermission"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="rwPermission"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HasAccess">
          <recvList>
            <type type="ident" def="rwPermission"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasRecursiveAccess">
          <recvList>
            <type type="ident" def="rwPermission"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="StorePermsPrefix"/>
        <name value="RootRoleName"/>
        <name value="GuestRoleName"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/testutil">
      <types>
        <type type="struct" name="Action">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Params">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="Recorder">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="actions">
            <elmtype type="ident" def="Action"/>
          </field>
        </type>
        <type type="struct" name="PauseableHandler">
          <field type="selector" name="Next">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="paused"/>
        </type>
      </types>
      <functions>
        <function name="WaitSchedule">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MustNewURLs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="MustNewURL">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Record">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorder"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Action"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Action">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorder"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Action"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PauseableHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PauseableHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Resume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PauseableHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/timeutil">
      <types/>
      <functions>
        <function name="UnixNanoToTime">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/pbutil">
      <types>
        <type name="Marshaler" type="interface">
          <method name="Marshal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Unmarshaler" type="interface">
          <method name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="MustMarshal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Marshaler"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="MustUnmarshal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Unmarshaler"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetBool">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Boolp">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/snap/snappb">
      <types>
        <type type="struct" name="Snapshot">
          <field type="ident" def="uint32" name="Crc"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/types">
      <types>
        <type name="URLsMap" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="URLs"/>
        </type>
        <type name="URLs" type="slice">
          <elmtype type="selector">
            <prefix value="url"/>
            <item value="URL"/>
          </elmtype>
        </type>
        <type name="Uint64Slice" type="slice">
          <elmtype type="ident" def="uint64"/>
        </type>
        <type name="Set" type="interface">
          <method name="Add">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Remove">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Contains">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Equals">
            <paramsList>
              <type type="ident" def="Set"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Length">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Values">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Copy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Set"/>
            </resultsList>
          </method>
          <method name="Sub">
            <paramsList>
              <type type="ident" def="Set"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Set"/>
            </resultsList>
          </method>
        </type>
        <type name="ID" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type name="IDSlice" type="slice">
          <elmtype type="ident" def="ID"/>
        </type>
      </types>
      <functions>
        <function name="NewURLsMap">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="URLsMap"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLsMap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="URLs">
          <recvList>
            <type type="ident" def="URLsMap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="NewURLs">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="URLs"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLs"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Sort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLs"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="URLs"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="URLs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="URLs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StringSlice">
          <recvList>
            <type type="ident" def="URLs"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="Uint64Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="Uint64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="Uint64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewUnsafeSet">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </resultsList>
        </function>
        <function name="NewThreadsafeSet">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ContainsAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Length">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Values">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Set"/>
          </resultsList>
        </function>
        <function name="Sub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="unsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Set"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Length">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Values">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Set"/>
          </resultsList>
        </function>
        <function name="Sub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsafeSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Set"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Set"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ID"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IDFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="ID"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="IDSlice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="IDSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="IDSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/rafthttp">
      <types>
        <type name="Raft" type="interface">
          <method name="Process">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsIDRemoved">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="ReportUnreachable">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ReportSnapshot">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="selector">
                <prefix value="raft"/>
                <item value="SnapshotStatus"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Transporter" type="interface">
          <method name="Handler">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="http"/>
                <item value="Handler"/>
              </type>
            </resultsList>
          </method>
          <method name="Send">
            <paramsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="raftpb"/>
                  <item value="Message"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="AddRemote">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="AddPeer">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="RemovePeer">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="RemoveAllPeers">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="UpdatePeer">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Pausable" type="interface">
          <method name="Pause">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Resume">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Peer" type="interface">
          <method name="Send">
            <paramsList>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Update">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="URLs"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="setTerm">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="attachOutgoingConn">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="outgoingConn"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewTransporter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="ident" def="Raft"/>
            <type type="channel" dir="3">
              <type type="ident" def="error"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="stats"/>
                <item value="ServerStats"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="stats"/>
                <item value="LeaderStats"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Transporter"/>
          </resultsList>
        </function>
        <function name="Handler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Peer"/>
          </resultsList>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="raftpb"/>
                <item value="Message"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AddRemote">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddPeer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemovePeer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveAllPeers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="UpdatePeer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Resume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="transport"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="streamType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="remote"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="remote"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="URLs"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Resume">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="Raft"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="handler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="streamHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="closeNotifier"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DialTimeout"/>
        <name value="ConnReadTimeout"/>
        <name value="ConnWriteTimeout"/>
        <name value="ConnReadLimitByte"/>
        <name value="RaftPrefix"/>
        <name value="RaftStreamPrefix"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/wal/walpb">
      <types>
        <type type="struct" name="Record">
          <field type="ident" def="int64" name="Type"/>
          <field type="ident" def="uint32" name="Crc"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Snapshot">
          <field type="ident" def="uint64" name="Index"/>
          <field type="ident" def="uint64" name="Term"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrCRCMismatch"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/cors">
      <types>
        <type name="CORSInfo" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="ident" def="bool"/>
        </type>
        <type type="struct" name="CORSHandler">
          <field type="selector" name="Handler">
            <prefix value="http"/>
            <item value="Handler"/>
          </field>
          <field type="pointer" name="Info">
            <type type="ident" def="CORSInfo"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CORSInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CORSInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="OriginAllowed">
          <recvList>
            <type type="ident" def="CORSInfo"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CORSHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/wait">
      <types>
        <type name="WaitTime" type="interface">
          <method name="Wait">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="channel" dir="2">
                <type type="struct" name=""/>
              </type>
            </resultsList>
          </method>
          <method name="Trigger">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Wait" type="interface">
          <method name="Register">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="channel" dir="2">
                <type type="interface"/>
              </type>
            </resultsList>
          </method>
          <method name="Trigger">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="List">
          <field type="selector" name="l">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="m">
            <keytype type="ident" def="uint64"/>
            <valtype type="channel" dir="3">
              <type type="interface"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTimeList">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="timeList"/>
            </type>
          </resultsList>
        </function>
        <function name="Wait">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Trigger">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="List"/>
            </type>
          </resultsList>
        </function>
        <function name="Register">
          <recvList>
            <type type="pointer">
              <type type="ident" def="List"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="2">
              <type type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Trigger">
          <recvList>
            <type type="pointer">
              <type type="ident" def="List"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/error">
      <types>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="ErrorCode"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Cause"/>
          <field type="ident" def="uint64" name="Index"/>
        </type>
      </types>
      <functions>
        <function name="NewRequestError">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Error"/>
            </type>
          </resultsList>
        </function>
        <function name="NewError">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Error"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="EcodeKeyNotFound"/>
        <name value="EcodeTestFailed"/>
        <name value="EcodeNotFile"/>
        <name value="EcodeNotDir"/>
        <name value="EcodeNodeExist"/>
        <name value="EcodeRootROnly"/>
        <name value="EcodeDirNotEmpty"/>
        <name value="EcodeUnauthorized"/>
        <name value="EcodePrevValueRequired"/>
        <name value="EcodeTTLNaN"/>
        <name value="EcodeIndexNaN"/>
        <name value="EcodeInvalidField"/>
        <name value="EcodeInvalidForm"/>
        <name value="EcodeRaftInternal"/>
        <name value="EcodeLeaderElect"/>
        <name value="EcodeWatcherCleared"/>
        <name value="EcodeEventIndexCleared"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver/etcdserverpb">
      <types>
        <type name="Compare_CompareType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="ResponseHeader">
          <field type="ident" def="string" name="Error"/>
          <field type="ident" def="uint64" name="ClusterId"/>
          <field type="ident" def="uint64" name="MemberId"/>
          <field type="ident" def="int64" name="Index"/>
          <field type="ident" def="uint64" name="RaftTerm"/>
        </type>
        <type type="struct" name="RangeRequest">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="RangeEnd">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="Limit"/>
          <field type="slice" name="ConsistentToken">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RangeResponse">
          <field type="pointer" name="Header">
            <type type="ident" def="ResponseHeader"/>
          </field>
          <field type="slice" name="Kvs">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="storagepb"/>
                <item value="KeyValue"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="ConsistentToken">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PutRequest">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PutResponse">
          <field type="pointer" name="Header">
            <type type="ident" def="ResponseHeader"/>
          </field>
        </type>
        <type type="struct" name="DeleteRangeRequest">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="RangeEnd">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteRangeResponse">
          <field type="pointer" name="Header">
            <type type="ident" def="ResponseHeader"/>
          </field>
        </type>
        <type type="struct" name="RequestUnion">
          <field type="pointer" name="RequestRange">
            <type type="ident" def="RangeRequest"/>
          </field>
          <field type="pointer" name="RequestPut">
            <type type="ident" def="PutRequest"/>
          </field>
          <field type="pointer" name="RequestDeleteRange">
            <type type="ident" def="DeleteRangeRequest"/>
          </field>
        </type>
        <type type="struct" name="ResponseUnion">
          <field type="pointer" name="ReponseRange">
            <type type="ident" def="RangeResponse"/>
          </field>
          <field type="pointer" name="ResponsePut">
            <type type="ident" def="PutResponse"/>
          </field>
          <field type="pointer" name="ResponseDeleteRange">
            <type type="ident" def="DeleteRangeResponse"/>
          </field>
        </type>
        <type type="struct" name="Compare">
          <field type="ident" def="Compare_CompareType" name="Type"/>
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="Version"/>
          <field type="ident" def="int64" name="CreateIndex"/>
          <field type="ident" def="int64" name="ModIndex"/>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TnxRequest">
          <field type="slice" name="Compare">
            <elmtype type="pointer">
              <type type="ident" def="Compare"/>
            </elmtype>
          </field>
          <field type="slice" name="Success">
            <elmtype type="pointer">
              <type type="ident" def="RequestUnion"/>
            </elmtype>
          </field>
          <field type="slice" name="Failure">
            <elmtype type="pointer">
              <type type="ident" def="RequestUnion"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="TnxResponse">
          <field type="pointer" name="Header">
            <type type="ident" def="ResponseHeader"/>
          </field>
          <field type="ident" def="bool" name="Succeeded"/>
          <field type="slice" name="Responses">
            <elmtype type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="CompactionRequest">
          <field type="ident" def="int64" name="Index"/>
        </type>
        <type type="struct" name="CompactionResponse">
          <field type="pointer" name="Header">
            <type type="ident" def="ResponseHeader"/>
          </field>
        </type>
        <type name="EtcdClient" type="interface">
          <method name="Range">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="RangeRequest"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="grpc"/>
                  <item value="CallOption"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="RangeResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="PutRequest"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="grpc"/>
                  <item value="CallOption"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="PutResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteRange">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="DeleteRangeRequest"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="grpc"/>
                  <item value="CallOption"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="DeleteRangeResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Tnx">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="TnxRequest"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="grpc"/>
                  <item value="CallOption"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="TnxResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Compact">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="CompactionRequest"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="grpc"/>
                  <item value="CallOption"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="CompactionResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EtcdServer" type="interface">
          <method name="Range">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="RangeRequest"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="RangeResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="PutRequest"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="PutResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteRange">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="DeleteRangeRequest"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="DeleteRangeResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Tnx">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="TnxRequest"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="TnxResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Compact">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="pointer">
                <type type="ident" def="CompactionRequest"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="CompactionResponse"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Request">
          <field type="ident" def="uint64" name="ID"/>
          <field type="ident" def="string" name="Method"/>
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="string" name="Val"/>
          <field type="ident" def="bool" name="Dir"/>
          <field type="ident" def="string" name="PrevValue"/>
          <field type="ident" def="uint64" name="PrevIndex"/>
          <field type="pointer" name="PrevExist">
            <type type="ident" def="bool"/>
          </field>
          <field type="ident" def="int64" name="Expiration"/>
          <field type="ident" def="bool" name="Wait"/>
          <field type="ident" def="uint64" name="Since"/>
          <field type="ident" def="bool" name="Recursive"/>
          <field type="ident" def="bool" name="Sorted"/>
          <field type="ident" def="bool" name="Quorum"/>
          <field type="ident" def="int64" name="Time"/>
          <field type="ident" def="bool" name="Stream"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Metadata">
          <field type="ident" def="uint64" name="NodeID"/>
          <field type="ident" def="uint64" name="ClusterID"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Compare_CompareType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKvs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="storagepb"/>
                  <item value="KeyValue"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequestRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequestPut">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequestDeleteRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetReponseRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResponsePut">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResponseDeleteRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCompare">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Compare"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetSuccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestUnion"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFailure">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestUnion"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResponses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ResponseUnion"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseHeader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestUnion"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseUnion"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Compare"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewEtcdClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="ClientConn"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="EtcdClient"/>
          </resultsList>
        </function>
        <function name="Range">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="RangeRequest"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="CallOption"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RangeResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="CallOption"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="DeleteRangeRequest"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="CallOption"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteRangeResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Tnx">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="TnxRequest"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="CallOption"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TnxResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Compact">
          <recvList>
            <type type="pointer">
              <type type="ident" def="etcdClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="CompactionRequest"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="CallOption"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompactionResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterEtcdServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="grpc"/>
                <item value="Server"/>
              </type>
            </type>
            <type type="ident" def="EtcdServer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Metadata"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Compare_EQUAL"/>
        <name value="Compare_GREATER"/>
        <name value="Compare_LESS"/>
        <name value="Compare_CompareType_name"/>
        <name value="Compare_CompareType_value"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdctl/command">
      <types/>
      <functions>
        <function name="NewWatchCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUserCommands">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUpdateDirCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewUpdateCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSetDirCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSetCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRoleCommands">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRemoveDirCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewRemoveCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMakeDirCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMakeCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMemberCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewLsCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewImportSnapCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewGetCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewExecWatchCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewClusterHealthCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewBackupCommand">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
        <function name="NewAuthCommands">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="cli"/>
              <item value="Command"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoAvailSrc"/>
        <name value="ExitSuccess"/>
        <name value="ExitBadArgs"/>
        <name value="ExitBadConnection"/>
        <name value="ExitBadAuth"/>
        <name value="ExitServerError"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/raft/rafttest">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/tools/functional-tester/etcd-agent/client">
      <types>
        <type type="struct" name="Status">
          <field type="ident" def="string" name="State"/>
        </type>
        <type name="Agent" type="interface">
          <method name="ID">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
          <method name="Start">
            <paramsList>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Restart">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Cleanup">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Terminate">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DropPort">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RecoverPort">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Status">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Status"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewAgent">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Agent"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Restart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Terminate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Status"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/fileutil">
      <types>
        <type name="Lock" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TryLock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Lock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unlock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Lock" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TryLock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Lock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unlock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Lock" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TryLock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Lock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unlock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Lock" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TryLock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Lock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unlock">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Destroy">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="PurgeFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="error"/>
            </type>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TryLock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLock">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Lock"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TryLock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLock">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Lock"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TryLock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLock">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Lock"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TryLock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Destroy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLock">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Lock"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsDirWriteable">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrLocked"/>
        <name value="ErrLocked"/>
        <name value="ErrLocked"/>
        <name value="ErrLocked"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/integration">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/raft">
      <types>
        <type name="EntryFormatter" type="func">
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </type>
        <type name="Storage" type="interface">
          <method name="InitialState">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="pb"/>
                <item value="HardState"/>
              </type>
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfState"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Entries">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="pb"/>
                  <item value="Entry"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Term">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="LastIndex">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="FirstIndex">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Snapshot">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="pb"/>
                <item value="Snapshot"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="MemoryStorage">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="hardState">
            <prefix value="pb"/>
            <item value="HardState"/>
          </field>
          <field type="selector" name="snapshot">
            <prefix value="pb"/>
            <item value="Snapshot"/>
          </field>
          <field type="slice" name="ents">
            <elmtype type="selector">
              <prefix value="pb"/>
              <item value="Entry"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="Status">
          <field type="ident" def="uint64" name="ID"/>
          <field type="selector" name="">
            <prefix value="pb"/>
            <item value="HardState"/>
          </field>
          <field type="ident" def="SoftState" name=""/>
          <field type="ident" def="uint64" name="Applied"/>
          <field type="map" name="Progress">
            <keytype type="ident" def="uint64"/>
            <valtype type="ident" def="Progress"/>
          </field>
        </type>
        <type name="StateType" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="uint64" name="ID"/>
          <field type="slice" name="peers">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="ident" def="int" name="ElectionTick"/>
          <field type="ident" def="int" name="HeartbeatTick"/>
          <field type="ident" def="Storage" name="Storage"/>
          <field type="ident" def="uint64" name="Applied"/>
          <field type="ident" def="uint64" name="MaxSizePerMsg"/>
          <field type="ident" def="int" name="MaxInflightMsgs"/>
        </type>
        <type name="ProgressStateType" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type type="struct" name="Progress">
          <field type="ident" def="uint64" name="Match"/>
          <field type="ident" def="uint64" name="Next"/>
          <field type="ident" def="ProgressStateType" name="State"/>
          <field type="ident" def="bool" name="Paused"/>
          <field type="ident" def="uint64" name="PendingSnapshot"/>
          <field type="pointer" name="ins">
            <type type="ident" def="inflights"/>
          </field>
        </type>
        <type name="SnapshotStatus" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="SoftState">
          <field type="ident" def="uint64" name="Lead"/>
          <field type="ident" def="StateType" name="RaftState"/>
        </type>
        <type type="struct" name="Ready">
          <field type="pointer" name="">
            <type type="ident" def="SoftState"/>
          </field>
          <field type="selector" name="">
            <prefix value="pb"/>
            <item value="HardState"/>
          </field>
          <field type="slice" name="Entries">
            <elmtype type="selector">
              <prefix value="pb"/>
              <item value="Entry"/>
            </elmtype>
          </field>
          <field type="selector" name="Snapshot">
            <prefix value="pb"/>
            <item value="Snapshot"/>
          </field>
          <field type="slice" name="CommittedEntries">
            <elmtype type="selector">
              <prefix value="pb"/>
              <item value="Entry"/>
            </elmtype>
          </field>
          <field type="slice" name="Messages">
            <elmtype type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </elmtype>
          </field>
        </type>
        <type name="Node" type="interface">
          <method name="Tick">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Campaign">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Propose">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ProposeConfChange">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfChange"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Step">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="pb"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Ready">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="ident" def="Ready"/>
              </type>
            </resultsList>
          </method>
          <method name="Advance">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="ApplyConfChange">
            <paramsList>
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfChange"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="pb"/>
                  <item value="ConfState"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Status">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Status"/>
            </resultsList>
          </method>
          <method name="ReportUnreachable">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ReportSnapshot">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="SnapshotStatus"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Peer">
          <field type="ident" def="uint64" name="ID"/>
          <field type="slice" name="Context">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="MultiNode" type="interface">
          <method name="CreateGroup">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="pointer">
                <type type="ident" def="Config"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="Peer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveGroup">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Tick">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Campaign">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Propose">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="uint64"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ProposeConfChange">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="uint64"/>
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfChange"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ApplyConfChange">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfChange"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="pb"/>
                  <item value="ConfState"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Step">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="uint64"/>
              <type type="selector">
                <prefix value="pb"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Ready">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="map">
                  <keytype type="ident" def="uint64"/>
                  <valtype type="ident" def="Ready"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Advance">
            <paramsList>
              <type type="map">
                <keytype type="ident" def="uint64"/>
                <valtype type="ident" def="Ready"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Status">
            <paramsList>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Status"/>
              </type>
            </resultsList>
          </method>
          <method name="ReportUnreachable">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ReportSnapshot">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="SnapshotStatus"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Logger" type="interface">
          <method name="Debug">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Debugf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Error">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Info">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Infof">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Warning">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Warningf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatal">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fatalf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Panic">
            <paramsList>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Panicf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="DefaultLogger">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="ident" def="bool" name="debug"/>
        </type>
      </types>
      <functions>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="StateType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="uint64Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="uint64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="uint64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsLocalMsg">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsResponseMsg">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DescribeMessage">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
            <type type="ident" def="EntryFormatter"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DescribeEntry">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Entry"/>
            </type>
            <type type="ident" def="EntryFormatter"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewMemoryStorage">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </resultsList>
        </function>
        <function name="InitialState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="HardState"/>
            </type>
            <type type="selector">
              <prefix value="pb"/>
              <item value="ConfState"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetHardState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="HardState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Entries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="pb"/>
                <item value="Entry"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Term">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LastIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FirstIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Snapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Snapshot"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplySnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfState"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Snapshot"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Compact">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemoryStorage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="pb"/>
                <item value="Entry"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="ident" def="Status"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Status"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="StateType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Step">
          <recvList>
            <type type="pointer">
              <type type="ident" def="raft"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ProgressStateType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Progress"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsEmptyHardState">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="HardState"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsEmptySnap">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="StartNode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="Peer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Node"/>
          </resultsList>
        </function>
        <function name="RestartNode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Node"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Tick">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Campaign">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Propose">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Step">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProposeConfChange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="pb"/>
              <item value="ConfChange"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Ready">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="Ready"/>
            </type>
          </resultsList>
        </function>
        <function name="Advance">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ApplyConfChange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="pb"/>
              <item value="ConfChange"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfState"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Status"/>
          </resultsList>
        </function>
        <function name="ReportUnreachable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReportSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="SnapshotStatus"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StartMultiNode">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="MultiNode"/>
          </resultsList>
        </function>
        <function name="CreateGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="Peer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Tick">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Campaign">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Propose">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProposeConfChange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="selector">
              <prefix value="pb"/>
              <item value="ConfChange"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApplyConfChange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="selector">
              <prefix value="pb"/>
              <item value="ConfChange"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="pb"/>
                <item value="ConfState"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Step">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="uint64"/>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Ready">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="map">
                <keytype type="ident" def="uint64"/>
                <valtype type="ident" def="Ready"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Advance">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="uint64"/>
              <valtype type="ident" def="Ready"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Status">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Status"/>
            </type>
          </resultsList>
        </function>
        <function name="ReportUnreachable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReportSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="SnapshotStatus"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetLogger">
          <recvList/>
          <paramsList>
            <type type="ident" def="Logger"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EnableTimestamps">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="EnableDebug">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Debug">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panic">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultLogger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="raftLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrCompacted"/>
        <name value="ErrSnapOutOfDate"/>
        <name value="ErrUnavailable"/>
        <name value="None"/>
        <name value="StateFollower"/>
        <name value="StateCandidate"/>
        <name value="StateLeader"/>
        <name value="ProgressStateProbe"/>
        <name value="ProgressStateReplicate"/>
        <name value="ProgressStateSnapshot"/>
        <name value="SnapshotFinish"/>
        <name value="SnapshotFailure"/>
        <name value="ErrStopped"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/raft/raftpb">
      <types>
        <type name="EntryType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MessageType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="ConfChangeType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Entry">
          <field type="ident" def="EntryType" name="Type"/>
          <field type="ident" def="uint64" name="Term"/>
          <field type="ident" def="uint64" name="Index"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SnapshotMetadata">
          <field type="ident" def="ConfState" name="ConfState"/>
          <field type="ident" def="uint64" name="Index"/>
          <field type="ident" def="uint64" name="Term"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Snapshot">
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="SnapshotMetadata" name="Metadata"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Message">
          <field type="ident" def="MessageType" name="Type"/>
          <field type="ident" def="uint64" name="To"/>
          <field type="ident" def="uint64" name="From"/>
          <field type="ident" def="uint64" name="Term"/>
          <field type="ident" def="uint64" name="LogTerm"/>
          <field type="ident" def="uint64" name="Index"/>
          <field type="slice" name="Entries">
            <elmtype type="ident" def="Entry"/>
          </field>
          <field type="ident" def="uint64" name="Commit"/>
          <field type="ident" def="Snapshot" name="Snapshot"/>
          <field type="ident" def="bool" name="Reject"/>
          <field type="ident" def="uint64" name="RejectHint"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="HardState">
          <field type="ident" def="uint64" name="Term"/>
          <field type="ident" def="uint64" name="Vote"/>
          <field type="ident" def="uint64" name="Commit"/>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ConfState">
          <field type="slice" name="Nodes">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ConfChange">
          <field type="ident" def="uint64" name="ID"/>
          <field type="ident" def="ConfChangeType" name="Type"/>
          <field type="ident" def="uint64" name="NodeID"/>
          <field type="slice" name="Context">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="EntryType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EntryType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="EntryType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntryType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MessageType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MessageType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MessageType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ConfChangeType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ConfChangeType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ConfChangeType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChangeType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SnapshotMetadata"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HardState"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfState"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ConfChange"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="EntryNormal"/>
        <name value="EntryConfChange"/>
        <name value="EntryType_name"/>
        <name value="EntryType_value"/>
        <name value="MsgHup"/>
        <name value="MsgBeat"/>
        <name value="MsgProp"/>
        <name value="MsgApp"/>
        <name value="MsgAppResp"/>
        <name value="MsgVote"/>
        <name value="MsgVoteResp"/>
        <name value="MsgSnap"/>
        <name value="MsgHeartbeat"/>
        <name value="MsgHeartbeatResp"/>
        <name value="MsgUnreachable"/>
        <name value="MsgSnapStatus"/>
        <name value="MessageType_name"/>
        <name value="MessageType_value"/>
        <name value="ConfChangeAddNode"/>
        <name value="ConfChangeRemoveNode"/>
        <name value="ConfChangeUpdateNode"/>
        <name value="ConfChangeType_name"/>
        <name value="ConfChangeType_value"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/storage/backend">
      <types>
        <type name="BatchTx" type="interface">
          <method name="Lock">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Unlock">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="UnsafeCreateBucket">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="UnsafePut">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="UnsafeRange">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="slice">
                  <elmtype type="ident" def="byte"/>
                </elmtype>
              </type>
              <type type="slice">
                <elmtype type="slice">
                  <elmtype type="ident" def="byte"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="UnsafeDelete">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Commit">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Backend" type="interface">
          <method name="BatchTx">
            <paramsList/>
            <resultsList>
              <type type="ident" def="BatchTx"/>
            </resultsList>
          </method>
          <method name="Snapshot">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ForceCommit">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="UnsafeCreateBucket">
          <recvList>
            <type type="pointer">
              <type type="ident" def="batchTx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UnsafePut">
          <recvList>
            <type type="pointer">
              <type type="ident" def="batchTx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UnsafeRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="batchTx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="UnsafeDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="batchTx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Commit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="batchTx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Backend"/>
          </resultsList>
        </function>
        <function name="BatchTx">
          <recvList>
            <type type="pointer">
              <type type="ident" def="backend"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="BatchTx"/>
          </resultsList>
        </function>
        <function name="ForceCommit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="backend"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Snapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="backend"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="backend"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/osutil">
      <types>
        <type name="InterruptHandler" type="func">
          <paramsList/>
          <resultsList/>
        </type>
        <type name="InterruptHandler" type="func">
          <paramsList/>
          <resultsList/>
        </type>
      </types>
      <functions>
        <function name="Unsetenv">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterInterruptHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="InterruptHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleInterrupts">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Exit">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisterInterruptHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="InterruptHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleInterrupts">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Exit">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/store">
      <types>
        <type name="Watcher" type="interface">
          <method name="EventChan">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="3">
                <type type="pointer">
                  <type type="ident" def="Event"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="StartIndex">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
          <method name="Remove">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="Store" type="interface">
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Index">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
          <method name="Get">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CompareAndSwap">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CompareAndDelete">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watch">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="bool"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="Watcher"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Save">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Recovery">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Clone">
            <paramsList/>
            <resultsList>
              <type type="ident" def="Store"/>
            </resultsList>
          </method>
          <method name="SaveNoCopy">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="JsonStats">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
          <method name="DeleteExpiredKeys">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Stats">
          <field type="ident" def="uint64" name="GetSuccess"/>
          <field type="ident" def="uint64" name="GetFail"/>
          <field type="ident" def="uint64" name="SetSuccess"/>
          <field type="ident" def="uint64" name="SetFail"/>
          <field type="ident" def="uint64" name="DeleteSuccess"/>
          <field type="ident" def="uint64" name="DeleteFail"/>
          <field type="ident" def="uint64" name="UpdateSuccess"/>
          <field type="ident" def="uint64" name="UpdateFail"/>
          <field type="ident" def="uint64" name="CreateSuccess"/>
          <field type="ident" def="uint64" name="CreateFail"/>
          <field type="ident" def="uint64" name="CompareAndSwapSuccess"/>
          <field type="ident" def="uint64" name="CompareAndSwapFail"/>
          <field type="ident" def="uint64" name="CompareAndDeleteSuccess"/>
          <field type="ident" def="uint64" name="CompareAndDeleteFail"/>
          <field type="ident" def="uint64" name="ExpireCount"/>
          <field type="ident" def="uint64" name="Watchers"/>
        </type>
        <type type="struct" name="NodeExtern">
          <field type="ident" def="string" name="Key"/>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="Dir"/>
          <field type="pointer" name="Expiration">
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="ident" def="int64" name="TTL"/>
          <field type="ident" def="NodeExterns" name="Nodes"/>
          <field type="ident" def="uint64" name="ModifiedIndex"/>
          <field type="ident" def="uint64" name="CreatedIndex"/>
        </type>
        <type name="NodeExterns" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="NodeExtern"/>
          </elmtype>
        </type>
        <type type="struct" name="EventHistory">
          <field type="ident" def="eventQueue" name="Queue"/>
          <field type="ident" def="uint64" name="StartIndex"/>
          <field type="ident" def="uint64" name="LastIndex"/>
          <field type="selector" name="rwl">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="string" name="Action"/>
          <field type="pointer" name="Node">
            <type type="ident" def="NodeExtern"/>
          </field>
          <field type="pointer" name="PrevNode">
            <type type="ident" def="NodeExtern"/>
          </field>
          <field type="ident" def="uint64" name="EtcdIndex"/>
        </type>
      </types>
      <functions>
        <function name="EventChan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="watcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="3">
              <type type="pointer">
                <type type="ident" def="Event"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="StartIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="watcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="watcher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="ttlKeyHeap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ttlKeyHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="ttlKeyHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ttlKeyHeap"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ttlKeyHeap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Store"/>
          </resultsList>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndDelete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Watcher"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteExpiredKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveNoCopy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Store"/>
          </resultsList>
        </function>
        <function name="Recovery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JsonStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Inc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NodeExtern"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NodeExtern"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="NodeExterns"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="NodeExterns"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="NodeExterns"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsHidden">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsPermanent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="node"/>
              </elmtype>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetChild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdErr"/>
                <item value="Error"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Repr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="clockwork"/>
              <item value="Clock"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NodeExtern"/>
            </type>
          </resultsList>
        </function>
        <function name="UpdateTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Compare">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="node"/>
            </type>
          </resultsList>
        </function>
        <function name="IsCreated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SetSuccess"/>
        <name value="SetFail"/>
        <name value="DeleteSuccess"/>
        <name value="DeleteFail"/>
        <name value="CreateSuccess"/>
        <name value="CreateFail"/>
        <name value="UpdateSuccess"/>
        <name value="UpdateFail"/>
        <name value="CompareAndSwapSuccess"/>
        <name value="CompareAndSwapFail"/>
        <name value="GetSuccess"/>
        <name value="GetFail"/>
        <name value="ExpireCount"/>
        <name value="CompareAndDeleteSuccess"/>
        <name value="CompareAndDeleteFail"/>
        <name value="CompareMatch"/>
        <name value="CompareIndexNotMatch"/>
        <name value="CompareValueNotMatch"/>
        <name value="CompareNotMatch"/>
        <name value="Permanent"/>
        <name value="GetRecursive"/>
        <name value="Get"/>
        <name value="Create"/>
        <name value="Set"/>
        <name value="Update"/>
        <name value="Delete"/>
        <name value="CompareAndSwap"/>
        <name value="CompareAndDelete"/>
        <name value="Expire"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver/etcdhttp">
      <types/>
      <functions>
        <function name="NewPeerHandler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="etcdserver"/>
              <item value="Cluster"/>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="peerMembersHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewClientHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="etcdserver"/>
                <item value="EtcdServer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="keysHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="deprecatedMachinesHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="membersHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/storage">
      <types>
        <type name="KV" type="interface">
          <method name="Range">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="int64"/>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="storagepb"/>
                  <item value="KeyValue"/>
                </elmtype>
              </type>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Put">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
            </resultsList>
          </method>
          <method name="DeleteRange">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="int64"/>
            </resultsList>
          </method>
          <method name="TnxBegin">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int64"/>
            </resultsList>
          </method>
          <method name="TnxEnd">
            <paramsList>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="TnxRange">
            <paramsList>
              <type type="ident" def="int64"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="int64"/>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="storagepb"/>
                  <item value="KeyValue"/>
                </elmtype>
              </type>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="TnxPut">
            <paramsList>
              <type type="ident" def="int64"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="TnxDeleteRange">
            <paramsList>
              <type type="ident" def="int64"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Compact">
            <paramsList>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Snapshot">
            <paramsList>
              <type type="selector">
                <prefix value="io"/>
                <item value="Writer"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="int64"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Restore">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="GreaterThan">
          <recvList>
            <type type="ident" def="reversion"/>
          </recvList>
          <paramsList>
            <type type="ident" def="reversion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="KV"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Range">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="storagepb"/>
                <item value="KeyValue"/>
              </elmtype>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="TnxBegin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="TnxEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TnxRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="storagepb"/>
                <item value="KeyValue"/>
              </elmtype>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TnxPut">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TnxDeleteRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Compact">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Snapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Restore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="store"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="keyIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="btree"/>
              <item value="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="keyIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="generation"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="reversion"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Restore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="reversion"/>
            <type type="ident" def="reversion"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="reversion"/>
            <type type="ident" def="reversion"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Range">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="reversion"/>
            </type>
          </resultsList>
        </function>
        <function name="Tombstone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="reversion"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Compact">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="reversion"/>
              <valtype type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="treeIndex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="index"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrTnxIDMismatch"/>
        <name value="ErrCompacted"/>
        <name value="ErrFutureRev"/>
        <name value="ErrReversionNotFound"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/client">
      <types>
        <type type="struct" name="Member">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="PeerURLs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ClientURLs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="MembersAPI" type="interface">
          <method name="List">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Member"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Add">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Member"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Remove">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Error">
          <field type="ident" def="int" name="Code"/>
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="string" name="Cause"/>
          <field type="ident" def="uint64" name="Index"/>
        </type>
        <type name="PrevExistType" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="KeysAPI" type="interface">
          <method name="Get">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="GetOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="SetOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Delete">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="DeleteOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateInOrder">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="CreateInOrderOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Update">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Watcher">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="WatcherOptions"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Watcher"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="WatcherOptions">
          <field type="ident" def="uint64" name="AfterIndex"/>
          <field type="ident" def="bool" name="Recursive"/>
        </type>
        <type type="struct" name="CreateInOrderOptions">
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="SetOptions">
          <field type="ident" def="string" name="PrevValue"/>
          <field type="ident" def="uint64" name="PrevIndex"/>
          <field type="ident" def="PrevExistType" name="PrevExist"/>
          <field type="selector" name="TTL">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="Dir"/>
        </type>
        <type type="struct" name="GetOptions">
          <field type="ident" def="bool" name="Recursive"/>
          <field type="ident" def="bool" name="Sort"/>
        </type>
        <type type="struct" name="DeleteOptions">
          <field type="ident" def="string" name="PrevValue"/>
          <field type="ident" def="uint64" name="PrevIndex"/>
          <field type="ident" def="bool" name="Recursive"/>
        </type>
        <type name="Watcher" type="interface">
          <method name="Next">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Response"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Response">
          <field type="ident" def="string" name="Action"/>
          <field type="pointer" name="Node">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="PrevNode">
            <type type="ident" def="Node"/>
          </field>
          <field type="ident" def="uint64" name="Index"/>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="bool" name="Dir"/>
          <field type="ident" def="string" name="Value"/>
          <field type="slice" name="Nodes">
            <elmtype type="pointer">
              <type type="ident" def="Node"/>
            </elmtype>
          </field>
          <field type="ident" def="uint64" name="CreatedIndex"/>
          <field type="ident" def="uint64" name="ModifiedIndex"/>
          <field type="pointer" name="Expiration">
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="ident" def="int64" name="TTL"/>
        </type>
        <type name="Discoverer" type="interface">
          <method name="Discover">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ClusterError">
          <field type="slice" name="Errors">
            <elmtype type="ident" def="error"/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="slice" name="Endpoints">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="CancelableTransport" name="Transport"/>
          <field type="ident" def="CheckRedirectFunc" name="CheckRedirect"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Password"/>
        </type>
        <type name="CancelableTransport" type="interface">
          <method name="CancelRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="CheckRedirectFunc" type="func">
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="Client" type="interface">
          <method name="Sync">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Endpoints">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="User">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Password"/>
          <field type="slice" name="Roles">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Grant">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Revoke">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="AuthAPI" type="interface">
          <method name="Enable">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Disable">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="AuthUserAPI" type="interface">
          <method name="AddUser">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveUser">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetUser">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GrantUser">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RevokeUser">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ChangePassword">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListUsers">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Role">
          <field type="ident" def="string" name="Role"/>
          <field type="ident" def="Permissions" name="Permissions"/>
          <field type="pointer" name="Grant">
            <type type="ident" def="Permissions"/>
          </field>
          <field type="pointer" name="Revoke">
            <type type="ident" def="Permissions"/>
          </field>
        </type>
        <type type="struct" name="Permissions">
          <field type="ident" def="rwPermission" name="KV"/>
        </type>
        <type name="PermissionType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="AuthRoleAPI" type="interface">
          <method name="AddRole">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveRole">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetRole">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Role"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GrantRoleKV">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="PermissionType"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Role"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RevokeRoleKV">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="PermissionType"/>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Role"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListRoles">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewSRVDiscover">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Discoverer"/>
          </resultsList>
        </function>
        <function name="Discover">
          <recvList>
            <type type="pointer">
              <type type="ident" def="srvDiscover"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memberCollection"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memberCreateRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMembersAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="MembersAPI"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpMembersAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpMembersAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpMembersAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="membersAPIActionList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="membersAPIActionRemove"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="membersAPIActionAdd"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="membersError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewKeysAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="KeysAPI"/>
          </resultsList>
        </function>
        <function name="NewKeysAPIWithPrefix">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="KeysAPI"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TTLDuration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="SetOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateInOrder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="CreateInOrderOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="DeleteOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="GetOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Watcher">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpKeysAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="WatcherOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Watcher"/>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpWatcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="getAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="waitAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="setAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="deleteAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="createInOrderAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="EnablecURLDebug">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="DisablecURLDebug">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Detail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="Config"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Client"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpClusterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="httpAction"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Endpoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpClusterClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Sync">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpClusterClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="simpleHTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="httpAction"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authedAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="redirectFollowingHTTPClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="httpAction"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="redirectedHTTPAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewAuthAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthAPI"/>
          </resultsList>
        </function>
        <function name="Enable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Disable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authAPIAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="authError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewAuthUserAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthUserAPI"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authUserAPIList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authUserAPIAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ListUsers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GrantUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RevokeUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangePassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthUserAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAuthRoleAPI">
          <recvList/>
          <paramsList>
            <type type="ident" def="Client"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthRoleAPI"/>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authRoleAPIList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="HTTPRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="authRoleAPIAction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ListRoles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetRole">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Role"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GrantRoleKV">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="PermissionType"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Role"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RevokeRoleKV">
          <recvList>
            <type type="pointer">
              <type type="ident" def="httpAuthRoleAPI"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="PermissionType"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Role"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrorCodeKeyNotFound"/>
        <name value="ErrorCodeTestFailed"/>
        <name value="ErrorCodeNotFile"/>
        <name value="ErrorCodeNotDir"/>
        <name value="ErrorCodeNodeExist"/>
        <name value="ErrorCodeRootROnly"/>
        <name value="ErrorCodeDirNotEmpty"/>
        <name value="ErrorCodeUnauthorized"/>
        <name value="ErrorCodePrevValueRequired"/>
        <name value="ErrorCodeTTLNaN"/>
        <name value="ErrorCodeIndexNaN"/>
        <name value="ErrorCodeInvalidField"/>
        <name value="ErrorCodeInvalidForm"/>
        <name value="ErrorCodeRaftInternal"/>
        <name value="ErrorCodeLeaderElect"/>
        <name value="ErrorCodeWatcherCleared"/>
        <name value="ErrorCodeEventIndexCleared"/>
        <name value="PrevIgnore"/>
        <name value="PrevExist"/>
        <name value="PrevNoExist"/>
        <name value="ErrNoEndpoints"/>
        <name value="ErrTooManyRedirects"/>
        <name value="ErrClusterUnavailable"/>
        <name value="DefaultRequestTimeout"/>
        <name value="DefaultTransport"/>
        <name value="DefaultCheckRedirect"/>
        <name value="ReadPermission"/>
        <name value="WritePermission"/>
        <name value="ReadWritePermission"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/crc">
      <types/>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="crc32"/>
                <item value="Table"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="hash"/>
              <item value="Hash32"/>
            </type>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="BlockSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Sum32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Sum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="digest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Size"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver">
      <types>
        <type name="Storage" type="interface">
          <method name="Save">
            <paramsList>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="HardState"/>
              </type>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="raftpb"/>
                  <item value="Entry"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SaveSnap">
            <paramsList>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Snapshot"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Response">
          <field type="pointer" name="Event">
            <type type="selector">
              <prefix value="store"/>
              <item value="Event"/>
            </type>
          </field>
          <field type="selector" name="Watcher">
            <prefix value="store"/>
            <item value="Watcher"/>
          </field>
          <field type="ident" def="error" name="err"/>
        </type>
        <type name="Server" type="interface">
          <method name="Start">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Stop">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="ID">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </resultsList>
          </method>
          <method name="Leader">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </resultsList>
          </method>
          <method name="Do">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="pb"/>
                <item value="Request"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="Response"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Process">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Message"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AddMember">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="Member"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveMember">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="UpdateMember">
            <paramsList>
              <type type="selector">
                <prefix value="context"/>
                <item value="Context"/>
              </type>
              <type type="ident" def="Member"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ClusterVersion">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="semver"/>
                  <item value="Version"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="EtcdServer">
          <field type="ident" def="raftNode" name="r"/>
          <field type="pointer" name="cfg">
            <type type="ident" def="ServerConfig"/>
          </field>
          <field type="ident" def="uint64" name="snapCount"/>
          <field type="selector" name="w">
            <prefix value="wait"/>
            <item value="Wait"/>
          </field>
          <field type="channel" dir="3" name="stop">
            <type type="struct" name=""/>
          </field>
          <field type="channel" dir="3" name="done">
            <type type="struct" name=""/>
          </field>
          <field type="channel" dir="3" name="errorc">
            <type type="ident" def="error"/>
          </field>
          <field type="selector" name="id">
            <prefix value="types"/>
            <item value="ID"/>
          </field>
          <field type="ident" def="Attributes" name="attributes"/>
          <field type="pointer" name="cluster">
            <type type="ident" def="cluster"/>
          </field>
          <field type="selector" name="store">
            <prefix value="store"/>
            <item value="Store"/>
          </field>
          <field type="pointer" name="stats">
            <type type="selector">
              <prefix value="stats"/>
              <item value="ServerStats"/>
            </type>
          </field>
          <field type="pointer" name="lstats">
            <type type="selector">
              <prefix value="stats"/>
              <item value="LeaderStats"/>
            </type>
          </field>
          <field type="channel" dir="2" name="SyncTicker">
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="pointer" name="reqIDGen">
            <type type="selector">
              <prefix value="idutil"/>
              <item value="Generator"/>
            </type>
          </field>
          <field type="channel" dir="3" name="forceVersionC">
            <type type="struct" name=""/>
          </field>
        </type>
        <type name="RaftTimer" type="interface">
          <method name="Index">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
          <method name="Term">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint64"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RaftAttributes">
          <field type="slice" name="PeerURLs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Attributes">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="ClientURLs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Member">
          <field type="selector" name="ID">
            <prefix value="types"/>
            <item value="ID"/>
          </field>
          <field type="ident" def="RaftAttributes" name=""/>
          <field type="ident" def="Attributes" name=""/>
        </type>
        <type name="MembersByID" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Member"/>
          </elmtype>
        </type>
        <type name="MembersByPeerURLs" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Member"/>
          </elmtype>
        </type>
        <type type="struct" name="ServerConfig">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="DiscoveryURL"/>
          <field type="ident" def="string" name="DiscoveryProxy"/>
          <field type="selector" name="ClientURLs">
            <prefix value="types"/>
            <item value="URLs"/>
          </field>
          <field type="selector" name="PeerURLs">
            <prefix value="types"/>
            <item value="URLs"/>
          </field>
          <field type="ident" def="string" name="DataDir"/>
          <field type="ident" def="uint64" name="SnapCount"/>
          <field type="ident" def="uint" name="MaxSnapFiles"/>
          <field type="ident" def="uint" name="MaxWALFiles"/>
          <field type="selector" name="InitialPeerURLsMap">
            <prefix value="types"/>
            <item value="URLsMap"/>
          </field>
          <field type="ident" def="string" name="InitialClusterToken"/>
          <field type="ident" def="bool" name="NewCluster"/>
          <field type="ident" def="bool" name="ForceNewCluster"/>
          <field type="pointer" name="Transport">
            <type type="selector">
              <prefix value="http"/>
              <item value="Transport"/>
            </type>
          </field>
          <field type="ident" def="uint" name="TickMs"/>
          <field type="ident" def="int" name="ElectionTicks"/>
        </type>
        <type name="Cluster" type="interface">
          <method name="ID">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </resultsList>
          </method>
          <method name="ClientURLs">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="Members">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="Member"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="Member">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Member"/>
              </type>
            </resultsList>
          </method>
          <method name="IsIDRemoved">
            <paramsList>
              <type type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Version">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="semver"/>
                  <item value="Version"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewStorage">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="wal"/>
                <item value="WAL"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="snap"/>
                <item value="Snapshotter"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Storage"/>
          </resultsList>
        </function>
        <function name="SaveSnap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </resultsList>
        </function>
        <function name="Cluster">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Cluster"/>
          </resultsList>
        </function>
        <function name="RaftHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Process">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsIDRemoved">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ReportUnreachable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReportSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="selector">
              <prefix value="raft"/>
              <item value="SnapshotStatus"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="StopNotify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Do">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="pb"/>
              <item value="Request"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Response"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SelfStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="LeaderStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="StoreStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="AddMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="Member"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="Member"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Term">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Lead">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Leader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </resultsList>
        </function>
        <function name="PauseSending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ResumeSending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ClusterVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EtcdServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="NewMember">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="types"/>
              <item value="URLs"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </resultsList>
        </function>
        <function name="PickPeerURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </resultsList>
        </function>
        <function name="MemberAttributesStorePath">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="MembersByID"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="MembersByID"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="MembersByID"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="MembersByPeerURLs"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="MembersByPeerURLs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="MembersByPeerURLs"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="VerifyBootstrap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyJoinExisting">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MemberDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WALDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SnapDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ShouldDiscover">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PrintWithInitial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Print">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetClusterFromRemotePeers">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Transport"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </resultsList>
        </function>
        <function name="Members">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Member"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Member">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </resultsList>
        </function>
        <function name="MemberByName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </resultsList>
        </function>
        <function name="MemberIDs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="types"/>
                <item value="ID"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="IsIDRemoved">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="PeerURLs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ClientURLs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetStore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="store"/>
              <item value="Store"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Recover">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ValidateConfigurationChange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="ConfChange"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Member"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UpdateAttributes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="ident" def="Attributes"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UpdateRaftAttributes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="types"/>
              <item value="ID"/>
            </type>
            <type type="ident" def="RaftAttributes"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Version">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="SetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="semver"/>
                <item value="Version"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ValidateClusterAndAssignIDs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
            <type type="pointer">
              <type type="ident" def="cluster"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultSnapCount"/>
        <name value="StoreClusterPrefix"/>
        <name value="StoreKeysPrefix"/>
        <name value="ErrUnknownMethod"/>
        <name value="ErrStopped"/>
        <name value="ErrIDRemoved"/>
        <name value="ErrIDExists"/>
        <name value="ErrIDNotFound"/>
        <name value="ErrPeerURLexists"/>
        <name value="ErrCanceled"/>
        <name value="ErrTimeout"/>
        <name value="ErrTimeoutDueToLeaderFail"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver/etcdhttp/httptypes">
      <types>
        <type type="struct" name="Member">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="PeerURLs">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ClientURLs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="MemberCreateRequest">
          <field type="selector" name="PeerURLs">
            <prefix value="types"/>
            <item value="URLs"/>
          </field>
        </type>
        <type type="struct" name="MemberUpdateRequest">
          <field type="ident" def="MemberCreateRequest" name=""/>
        </type>
        <type name="MemberCollection" type="slice">
          <elmtype type="ident" def="Member"/>
        </type>
        <type type="struct" name="HTTPError">
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="int" name="Code"/>
        </type>
      </types>
      <functions>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemberCreateRequest"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemberCollection"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="HTTPError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="ident" def="HTTPError"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewHTTPError">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HTTPError"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/etcdserver/stats">
      <types>
        <type name="Stats" type="interface">
          <method name="SelfStats">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
          <method name="LeaderStats">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
          <method name="StoreStats">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ServerStats">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ID"/>
          <field type="selector" name="State">
            <prefix value="raft"/>
            <item value="StateType"/>
          </field>
          <field type="selector" name="StartTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="struct" name="LeaderInfo">
            <field type="ident" def="string" name="Name"/>
            <field type="ident" def="string" name="Uptime"/>
            <field type="selector" name="StartTime">
              <prefix value="time"/>
              <item value="Time"/>
            </field>
          </field>
          <field type="ident" def="uint64" name="RecvAppendRequestCnt"/>
          <field type="ident" def="float64" name="RecvingPkgRate"/>
          <field type="ident" def="float64" name="RecvingBandwidthRate"/>
          <field type="ident" def="uint64" name="SendAppendRequestCnt"/>
          <field type="ident" def="float64" name="SendingPkgRate"/>
          <field type="ident" def="float64" name="SendingBandwidthRate"/>
          <field type="pointer" name="sendRateQueue">
            <type type="ident" def="statsQueue"/>
          </field>
          <field type="pointer" name="recvRateQueue">
            <type type="ident" def="statsQueue"/>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="RequestStats">
          <field type="selector" name="SendingTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Size"/>
        </type>
        <type type="struct" name="LeaderStats">
          <field type="ident" def="string" name="Leader"/>
          <field type="map" name="Followers">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="FollowerStats"/>
            </valtype>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="FollowerStats">
          <field type="ident" def="LatencyStats" name="Latency"/>
          <field type="ident" def="CountsStats" name="Counts"/>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="LatencyStats">
          <field type="ident" def="float64" name="Current"/>
          <field type="ident" def="float64" name="Average"/>
          <field type="ident" def="float64" name="averageSquare"/>
          <field type="ident" def="float64" name="StandardDeviation"/>
          <field type="ident" def="float64" name="Minimum"/>
          <field type="ident" def="float64" name="Maximum"/>
        </type>
        <type type="struct" name="CountsStats">
          <field type="ident" def="uint64" name="Fail"/>
          <field type="ident" def="uint64" name="Success"/>
        </type>
      </types>
      <functions>
        <function name="JSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Initialize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="RecvRates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="SendRates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="RecvAppendReq">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SendAppendReq">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BecomeLeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statsQueue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="ReqSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statsQueue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Insert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statsQueue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="RequestStats"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Rate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statsQueue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="statsQueue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewLeaderStats">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LeaderStats"/>
            </type>
          </resultsList>
        </function>
        <function name="JSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LeaderStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Follower">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LeaderStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FollowerStats"/>
            </type>
          </resultsList>
        </function>
        <function name="Succ">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FollowerStats"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FollowerStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/wal">
      <types>
        <type type="struct" name="WAL">
          <field type="ident" def="string" name="dir"/>
          <field type="slice" name="metadata">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="state">
            <prefix value="raftpb"/>
            <item value="HardState"/>
          </field>
          <field type="selector" name="start">
            <prefix value="walpb"/>
            <item value="Snapshot"/>
          </field>
          <field type="pointer" name="decoder">
            <type type="ident" def="decoder"/>
          </field>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="f">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
          <field type="ident" def="uint64" name="seq"/>
          <field type="ident" def="uint64" name="enti"/>
          <field type="pointer" name="encoder">
            <type type="ident" def="encoder"/>
          </field>
          <field type="slice" name="locks">
            <elmtype type="selector">
              <prefix value="fileutil"/>
              <item value="Lock"/>
            </elmtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="Create">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Open">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="walpb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OpenForRead">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="walpb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="HardState"/>
            </type>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="raftpb"/>
                <item value="Entry"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReleaseLockTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="HardState"/>
            </type>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="raftpb"/>
                <item value="Entry"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="walpb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exist">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Repair">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiReadCloser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="multiReadCloser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MultiReadCloser">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="io"/>
                <item value="ReadCloser"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadCloser"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrMetadataConflict"/>
        <name value="ErrFileNotFound"/>
        <name value="ErrCRCMismatch"/>
        <name value="ErrSnapshotMismatch"/>
        <name value="ErrSnapshotNotFound"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/ioutil">
      <types/>
      <functions>
        <function name="NewLimitedBufferReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitedBufferReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/snap">
      <types>
        <type type="struct" name="Snapshotter">
          <field type="ident" def="string" name="dir"/>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </resultsList>
        </function>
        <function name="SaveSnap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raftpb"/>
              <item value="Snapshot"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Snapshot"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="raftpb"/>
                <item value="Snapshot"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoSnapshot"/>
        <name value="ErrEmptySnapshot"/>
        <name value="ErrCRCMismatch"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/netutil">
      <types/>
      <functions>
        <function name="URLStringsEqual">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="BasicAuth">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="DropPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverPort">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/proxy">
      <types>
        <type name="GetProxyURLs" type="func">
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="reverseProxy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Transport"/>
              </type>
            </type>
            <type type="ident" def="GetProxyURLs"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="NewReadonlyHandler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="Failed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="endpoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="DefaultMaxIdleConnsPerHost"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/transport">
      <types>
        <type type="struct" name="TLSInfo">
          <field type="ident" def="string" name="CertFile"/>
          <field type="ident" def="string" name="KeyFile"/>
          <field type="ident" def="string" name="CAFile"/>
          <field type="ident" def="string" name="TrustedCAFile"/>
          <field type="ident" def="bool" name="ClientCertAuth"/>
          <field type="func" name="parseFunc">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="tls"/>
                <item value="Certificate"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTimeoutTransport">
          <recvList/>
          <paramsList>
            <type type="ident" def="TLSInfo"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Transport"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTimeoutListener">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="TLSInfo"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rwTimeoutListener"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rwTimeoutDialer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="ident" def="timeoutConn"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="ident" def="timeoutConn"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewListener">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="TLSInfo"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTransport">
          <recvList/>
          <paramsList>
            <type type="ident" def="TLSInfo"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Transport"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TLSInfo"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="ident" def="TLSInfo"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ServerConfig">
          <recvList>
            <type type="ident" def="TLSInfo"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientConfig">
          <recvList>
            <type type="ident" def="TLSInfo"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="tls"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewKeepAliveListener">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="TLSInfo"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="keepaliveListener"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tlsKeepaliveListener"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/version">
      <types>
        <type name="DataDirVersion" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Versions">
          <field type="ident" def="string" name="Server"/>
          <field type="ident" def="string" name="Cluster"/>
        </type>
      </types>
      <functions>
        <function name="DetectDataDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="DataDirVersion"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MinClusterVersion"/>
        <name value="Version"/>
        <name value="GitSHA"/>
        <name value="DataDirUnknown"/>
        <name value="DataDir0_4"/>
        <name value="DataDir2_0"/>
        <name value="DataDir2_0Proxy"/>
        <name value="DataDir2_0_1"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/idutil">
      <types>
        <type type="struct" name="Generator">
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="uint64" name="prefix"/>
          <field type="ident" def="uint64" name="suffix"/>
        </type>
      </types>
      <functions>
        <function name="NewGenerator">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint8"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/storage/storagepb">
      <types>
        <type name="Event_EventType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="KeyValue">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="CreateIndex"/>
          <field type="ident" def="int64" name="ModIndex"/>
          <field type="ident" def="int64" name="Version"/>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Event">
          <field type="ident" def="Event_EventType" name="Type"/>
          <field type="pointer" name="Kv">
            <type type="ident" def="KeyValue"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Event_EventType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Event"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="PUT"/>
        <name value="DELETE"/>
        <name value="EXPIRE"/>
        <name value="Event_EventType_name"/>
        <name value="Event_EventType_value"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/flags">
      <types>
        <type name="URLsValue" type="selector">
          <prefix value="types"/>
          <item value="URLs"/>
        </type>
        <type type="struct" name="StringsFlag">
          <field type="slice" name="Values">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="val"/>
        </type>
        <type type="struct" name="IPAddressPort">
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="int" name="Port"/>
        </type>
        <type type="struct" name="DeprecatedFlag">
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="IgnoredFlag">
          <field type="ident" def="string" name="Name"/>
        </type>
      </types>
      <functions>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLsValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLsValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewURLsValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="URLsValue"/>
            </type>
          </resultsList>
        </function>
        <function name="NewStringsFlag">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StringsFlag"/>
            </type>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringsFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringsFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPAddressPort"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPAddressPort"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeprecatedFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeprecatedFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsBoolFlag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IgnoredFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IgnoredFlag"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IgnoredFlag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetFlagsFromEnv">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetBindAddrFromAddr">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="URLsFromFlags">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="transport"/>
              <item value="TLSInfo"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsSet">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/etcdmain">
      <types/>
      <functions>
        <function name="Main">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="config"/>
            </type>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrConflictBootstrapFlags"/>
      </names>
    </package>
    <package importpath="github.com/coreos/etcd/pkg/runtime">
      <types/>
      <functions>
        <function name="FDLimit">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FDUsage">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FDLimit">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FDUsage">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/coreos/etcd/migrate/etcd4pb">
      <types>
        <type type="struct" name="LogEntry">
          <field type="pointer" name="Index">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Term">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="CommandName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Command">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetTerm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetCommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCommand">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewPopulatedLogEntry">
          <recvList/>
          <paramsList>
            <type type="ident" def="randyLogEntry"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="VerboseEqual">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogEntry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="github.com/coreos/etcd/etcdmain"/>
    <import path="bytes"/>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="path"/>
    <import path="reflect"/>
    <import path="testing"/>
    <import path="github.com/coreos/etcd/pkg/pbutil"/>
    <import path="github.com/coreos/etcd/raft/raftpb"/>
    <import path="github.com/coreos/etcd/wal/walpb"/>
    <import path="errors"/>
    <import path="fmt"/>
    <import path="hash/crc32"/>
    <import path="io"/>
    <import path="sync"/>
    <import path="time"/>
    <import path="github.com/coreos/etcd/pkg/fileutil"/>
    <import path="github.com/coreos/etcd/raft"/>
    <import path="github.com/coreos/pkg/capnslog"/>
    <import path="strings"/>
    <import path="github.com/prometheus/client_golang/prometheus"/>
    <import path="bufio"/>
    <import path="encoding/binary"/>
    <import path="hash"/>
    <import path="github.com/coreos/etcd/pkg/crc"/>
    <import path="github.com/gogo/protobuf/proto"/>
    <import path="math"/>
    <import path="github.com/coreos/etcd/pkg/types"/>
    <import path="log"/>
    <import path="math/rand"/>
    <import path="net"/>
    <import path="net/http"/>
    <import path="golang.org/x/net/context"/>
    <import path="github.com/coreos/etcd/client"/>
    <import path="flag"/>
    <import path="encoding/json"/>
    <import path="github.com/coreos/etcd/tools/functional-tester/etcd-agent/client"/>
    <import path="net/rpc"/>
    <import path="os/exec"/>
    <import path="github.com/coreos/etcd/pkg/netutil"/>
    <import path="github.com/coreos/etcd/migrate"/>
    <import path="github.com/coreos/etcd/etcdserver/etcdserverpb"/>
    <import path="github.com/coreos/etcd/snap"/>
    <import path="github.com/coreos/etcd/wal"/>
    <import path="container/list"/>
    <import path="sync/atomic"/>
    <import path="github.com/coreos/etcd/error"/>
    <import path="container/heap"/>
    <import path="github.com/jonboulle/clockwork"/>
    <import path="github.com/stretchr/testify/assert"/>
    <import path="runtime"/>
    <import path="strconv"/>
    <import path="unsafe"/>
    <import path="sort"/>
    <import path="crypto/rand"/>
    <import path="github.com/coreos/etcd/storage/storagepb"/>
    <import path="github.com/coreos/etcd/storage/backend"/>
    <import path="github.com/google/btree"/>
    <import path="github.com/boltdb/bolt"/>
    <import path="github.com/coreos/etcd/snap/snappb"/>
    <import path="github.com/coreos/go-semver/semver"/>
    <import path="github.com/coreos/etcd/version"/>
    <import path="net/url"/>
    <import path="github.com/coreos/etcd/pkg/testutil"/>
    <import path="github.com/coreos/etcd/etcdserver/stats"/>
    <import path="net/http/httptest"/>
    <import path="github.com/coreos/etcd/pkg/ioutil"/>
    <import path="github.com/coreos/etcd/etcdserver/etcdhttp/httptypes"/>
    <import path="crypto/tls"/>
    <import path="crypto/x509"/>
    <import path="encoding/pem"/>
    <import path="syscall"/>
    <import path="os/signal"/>
    <import path="encoding/base64"/>
    <import path="github.com/coreos/etcd/pkg/transport"/>
    <import path="path/filepath"/>
    <import path="crypto/sha1"/>
    <import path="github.com/coreos/etcd/migrate/etcd4pb"/>
    <import path="github.com/coreos/etcd/store"/>
    <import path="github.com/coreos/etcd/etcdserver"/>
    <import path="github.com/coreos/etcd/etcdserver/etcdhttp"/>
    <import path="github.com/coreos/etcd/rafthttp"/>
    <import path="github.com/coreos/etcd/pkg/idutil"/>
    <import path="expvar"/>
    <import path="regexp"/>
    <import path="github.com/coreos/etcd/discovery"/>
    <import path="github.com/coreos/etcd/pkg/runtime"/>
    <import path="github.com/coreos/etcd/pkg/timeutil"/>
    <import path="github.com/coreos/etcd/pkg/wait"/>
    <import path="google.golang.org/grpc"/>
    <import path="github.com/coreos/etcd/etcdserver/auth"/>
    <import path="golang.org/x/crypto/bcrypt"/>
    <import path="github.com/coreos/etcd/pkg/cors"/>
    <import path="github.com/coreos/etcd/pkg/osutil"/>
    <import path="github.com/coreos/etcd/proxy"/>
    <import path="github.com/prometheus/procfs"/>
    <import path="github.com/coreos/etcd/pkg/flags"/>
    <import path="github.com/codegangsta/cli"/>
    <import path="github.com/coreos/etcd/etcdctl/command"/>
    <import path="github.com/coreos/go-etcd/etcd"/>
    <import path="github.com/bgentry/speakeasy"/>
  </imports>
</project>
