<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-stretchr-testify-1.0-0.3.git089c718.fc24">
  <packages>
    <package importpath="github.com/stretchr/testify/require">
      <types>
        <type name="TestingT" type="interface">
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="FailNow">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Assertions">
          <field type="ident" def="TestingT" name="t"/>
        </type>
      </types>
      <functions>
        <function name="FailNow">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Implements">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsType">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EqualValues">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Exactly">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotNil">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Nil">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Empty">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotEmpty">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="True">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="False">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotEqual">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Contains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotContains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Condition">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="assert"/>
              <item value="Comparison"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panics">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="assert"/>
              <item value="PanicTestFunc"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotPanics">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="assert"/>
              <item value="PanicTestFunc"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WithinDuration">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InDelta">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InEpsilon">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Regexp">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotRegexp">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NoError">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EqualError">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </resultsList>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Implements">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Exactly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotNil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Nil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotEmpty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="True">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="False">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotEqual">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotContains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Condition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="assert"/>
              <item value="Comparison"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panics">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="assert"/>
              <item value="PanicTestFunc"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotPanics">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="assert"/>
              <item value="PanicTestFunc"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WithinDuration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InDelta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InEpsilon">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NoError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EqualError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Regexp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotRegexp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/stretchr/testify">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/stretchr/testify/mock">
      <types>
        <type name="TestingT" type="interface">
          <method name="Logf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Call">
          <field type="ident" def="string" name="Method"/>
          <field type="ident" def="Arguments" name="Arguments"/>
          <field type="ident" def="Arguments" name="ReturnArguments"/>
          <field type="ident" def="int" name="Repeatability"/>
          <field type="channel" dir="2" name="WaitFor">
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </field>
          <field type="func" name="Run">
            <paramsList>
              <type type="ident" def="Arguments"/>
            </paramsList>
            <resultsList/>
          </field>
        </type>
        <type type="struct" name="Mock">
          <field type="ident" def="string" name="onMethodName"/>
          <field type="ident" def="Arguments" name="onMethodArguments"/>
          <field type="slice" name="ExpectedCalls">
            <elmtype type="ident" def="Call"/>
          </field>
          <field type="slice" name="Calls">
            <elmtype type="ident" def="Call"/>
          </field>
          <field type="selector" name="testData">
            <prefix value="objx"/>
            <item value="Map"/>
          </field>
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type name="Arguments" type="slice">
          <elmtype type="interface"/>
        </type>
        <type name="AnythingOfTypeArgument" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="TestData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="objx"/>
              <item value="Map"/>
            </type>
          </resultsList>
        </function>
        <function name="On">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </resultsList>
        </function>
        <function name="Return">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </resultsList>
        </function>
        <function name="Once">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Twice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Times">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WaitUntil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="2">
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </resultsList>
        </function>
        <function name="After">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="ident" def="Arguments"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </resultsList>
        </function>
        <function name="Called">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Arguments"/>
          </resultsList>
        </function>
        <function name="AssertExpectationsForObjects">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AssertExpectations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestingT"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AssertNumberOfCalls">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AssertCalled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AssertNotCalled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AnythingOfType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AnythingOfTypeArgument"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Is">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Diff">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Assert">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="int"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Int">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Bool">
          <recvList>
            <type type="ident" def="Arguments"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Anything"/>
      </names>
    </package>
    <package importpath="github.com/stretchr/testify/http">
      <types>
        <type type="struct" name="TestRoundTripper">
          <field type="selector" name="">
            <prefix value="mock"/>
            <item value="Mock"/>
          </field>
        </type>
        <type type="struct" name="TestResponseWriter">
          <field type="ident" def="int" name="StatusCode"/>
          <field type="ident" def="string" name="Output"/>
          <field type="selector" name="header">
            <prefix value="http"/>
            <item value="Header"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TestRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Header">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TestResponseWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TestResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TestResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/stretchr/testify/assert">
      <types>
        <type type="struct" name="Assertions">
          <field type="ident" def="TestingT" name="t"/>
        </type>
        <type name="TestingT" type="interface">
          <method name="Errorf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Comparison" type="func">
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type name="PanicTestFunc" type="func">
          <paramsList/>
          <resultsList/>
        </type>
      </types>
      <functions>
        <function name="HTTPSuccess">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPRedirect">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPError">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPBody">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HTTPBodyContains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPBodyNotContains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPSuccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPRedirect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPBodyContains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HTTPBodyNotContains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </resultsList>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Implements">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EqualValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Exactly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotNil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Nil">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotEmpty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="True">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="False">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotEqual">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Contains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotContains">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Condition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Comparison"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Panics">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PanicTestFunc"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotPanics">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PanicTestFunc"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="WithinDuration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InDelta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InEpsilon">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NoError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EqualError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Regexp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotRegexp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Assertions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ObjectsAreEqual">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ObjectsAreEqualValues">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CallerInfo">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Fail">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Implements">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsType">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EqualValues">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Exactly">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotNil">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Nil">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotEmpty">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="ident" def="int"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="True">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="False">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotEqual">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Contains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotContains">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Condition">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="Comparison"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Panics">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="PanicTestFunc"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotPanics">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="PanicTestFunc"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="WithinDuration">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InDelta">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InDeltaSlice">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InEpsilon">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="InEpsilonSlice">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="float64"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NoError">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EqualError">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="ident" def="error"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Regexp">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotRegexp">
          <recvList/>
          <paramsList>
            <type type="ident" def="TestingT"/>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="AnError"/>
      </names>
    </package>
    <package importpath="github.com/stretchr/testify/suite">
      <types>
        <type type="struct" name="Suite">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="assert"/>
              <item value="Assertions"/>
            </type>
          </field>
          <field type="pointer" name="require">
            <type type="selector">
              <prefix value="require"/>
              <item value="Assertions"/>
            </type>
          </field>
          <field type="pointer" name="t">
            <type type="selector">
              <prefix value="testing"/>
              <item value="T"/>
            </type>
          </field>
        </type>
        <type name="TestingSuite" type="interface">
          <method name="T">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="testing"/>
                  <item value="T"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="SetT">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="testing"/>
                  <item value="T"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="SetupAllSuite" type="interface">
          <method name="SetupSuite">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="SetupTestSuite" type="interface">
          <method name="SetupTest">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="TearDownAllSuite" type="interface">
          <method name="TearDownSuite">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type name="TearDownTestSuite" type="interface">
          <method name="TearDownTest">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="T">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Suite"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="SetT">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Suite"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Require">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Suite"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="require"/>
                <item value="Assertions"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Assert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Suite"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="assert"/>
                <item value="Assertions"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Run">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="TestingSuite"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="github.com/stretchr/testify/assert"/>
    <import path="github.com/stretchr/testify/http"/>
    <import path="github.com/stretchr/testify/mock"/>
    <import path="flag"/>
    <import path="fmt"/>
    <import path="os"/>
    <import path="reflect"/>
    <import path="regexp"/>
    <import path="testing"/>
    <import path="github.com/stretchr/testify/require"/>
    <import path="time"/>
    <import path="runtime"/>
    <import path="strings"/>
    <import path="sync"/>
    <import path="github.com/stretchr/objx"/>
    <import path="net/http"/>
    <import path="net/http/httptest"/>
    <import path="net/url"/>
    <import path="errors"/>
    <import path="bufio"/>
    <import path="bytes"/>
    <import path="math"/>
    <import path="unicode"/>
    <import path="unicode/utf8"/>
  </imports>
</project>
