<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-kraman-libcontainer-0-0.4.gitd700e5b.fc24">
  <packages>
    <package importpath="github.com/kraman/libcontainer/utils">
      <types/>
      <functions>
        <function name="WaitOnPid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateRandomName">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/kraman/libcontainer">
      <types>
        <type name="Namespace" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Namespaces" type="slice">
          <elmtype type="ident" def="Namespace"/>
        </type>
        <type name="Capability" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="Capabilities" type="slice">
          <elmtype type="ident" def="Capability"/>
        </type>
        <type type="struct" name="Container">
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="int" name="NsPid"/>
          <field type="pointer" name="Command">
            <type type="ident" def="Command"/>
          </field>
          <field type="ident" def="string" name="RootFs"/>
          <field type="ident" def="bool" name="ReadonlyFs"/>
          <field type="ident" def="uintptr" name="NetNsFd"/>
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="WorkingDir"/>
          <field type="ident" def="Namespaces" name="Namespaces"/>
          <field type="ident" def="Capabilities" name="Capabilities"/>
        </type>
        <type type="struct" name="Command">
          <field type="slice" name="Args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Env">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Network">
          <field type="ident" def="string" name="TempVethName"/>
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="string" name="Gateway"/>
          <field type="ident" def="string" name="Bridge"/>
          <field type="ident" def="int" name="Mtu"/>
        </type>
      </types>
      <functions>
        <function name="Contains">
          <recvList>
            <type type="ident" def="Namespaces"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Namespace"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Contains">
          <recvList>
            <type type="ident" def="Capabilities"/>
          </recvList>
          <paramsList>
            <type type="ident" def="Capability"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="CAP_SETPCAP"/>
        <name value="CAP_SYS_MODULE"/>
        <name value="CAP_SYS_RAWIO"/>
        <name value="CAP_SYS_PACCT"/>
        <name value="CAP_SYS_ADMIN"/>
        <name value="CAP_SYS_NICE"/>
        <name value="CAP_SYS_RESOURCE"/>
        <name value="CAP_SYS_TIME"/>
        <name value="CAP_SYS_TTY_CONFIG"/>
        <name value="CAP_MKNOD"/>
        <name value="CAP_AUDIT_WRITE"/>
        <name value="CAP_AUDIT_CONTROL"/>
        <name value="CAP_MAC_OVERRIDE"/>
        <name value="CAP_MAC_ADMIN"/>
        <name value="CLONE_NEWNS"/>
        <name value="CLONE_NEWUTS"/>
        <name value="CLONE_NEWIPC"/>
        <name value="CLONE_NEWUSER"/>
        <name value="CLONE_NEWPID"/>
        <name value="CLONE_NEWNET"/>
        <name value="ErrInvalidPid"/>
      </names>
    </package>
    <package importpath="github.com/kraman/libcontainer/capabilities">
      <types/>
      <functions>
        <function name="DropCapabilities">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/kraman/libcontainer/namespaces">
      <types>
        <type name="Action" type="func">
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
      </types>
      <functions>
        <function name="CloneIntoNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="libcontainer"/>
              <item value="Namespaces"/>
            </type>
            <type type="ident" def="Action"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateNewNamespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="libcontainer"/>
              <item value="Namespace"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunInNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="ident" def="Action"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinExistingNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="selector">
              <prefix value="libcontainer"/>
              <item value="Namespace"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetupNewMountNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exec">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Container"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExecIn">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Container"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Command"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SIGCHLD"/>
        <name value="CLONE_VFORK"/>
        <name value="CLONE_NEWNS"/>
        <name value="CLONE_NEWUTS"/>
        <name value="CLONE_NEWIPC"/>
        <name value="CLONE_NEWUSER"/>
        <name value="CLONE_NEWPID"/>
        <name value="CLONE_NEWNET"/>
        <name value="ErrExistingNetworkNamespace"/>
        <name value="SYS_SETNS"/>
        <name value="TIOCGPTN"/>
        <name value="TIOCSPTLCK"/>
      </names>
    </package>
    <package importpath="github.com/kraman/libcontainer/network">
      <types/>
      <functions>
        <function name="SetupVethInsideNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="uintptr"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="libcontainer"/>
                <item value="Network"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetupNamespaceMountDir">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateNetworkNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteNetworkNamespace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterfaceUp">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InterfaceDown">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeInterfaceName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateVethPair">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetInterfaceInNamespacePid">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetInterfaceInNamespaceFd">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetInterfaceMaster">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDefaultGateway">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetInterfaceIp">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMtu">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetDefaultMtu">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrNoDefaultRoute"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="errors"/>
    <import path="crypto/rand"/>
    <import path="encoding/hex"/>
    <import path="io"/>
    <import path="os"/>
    <import path="syscall"/>
    <import path="fmt"/>
    <import path="github.com/kraman/libcontainer"/>
    <import path="github.com/kraman/libcontainer/namespaces"/>
    <import path="github.com/docker/docker/pkg/netlink"/>
    <import path="net"/>
    <import path="path/filepath"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="github.com/kraman/libcontainer/utils"/>
    <import path="github.com/kraman/libcontainer/capabilities"/>
    <import path="unsafe"/>
    <import path="bytes"/>
    <import path="encoding/json"/>
    <import path="flag"/>
    <import path="github.com/kraman/libcontainer/network"/>
    <import path="github.com/syndtr/gocapability/capability"/>
  </imports>
</project>
