<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-influxdb-influxdb-0.8.5-0.4.git9485e99.fc24">
  <packages>
    <package importpath="github.com/influxdb/influxdb/integration">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/integration/helpers">
      <types>
        <type type="struct" name="Server">
          <field type="pointer" name="p">
            <type type="selector">
              <prefix value="os"/>
              <item value="Process"/>
            </type>
          </field>
          <field type="ident" def="string" name="configFile"/>
          <field type="ident" def="bool" name="sslOnly"/>
          <field type="ident" def="int" name="apiPort"/>
          <field type="ident" def="int" name="sslApiPort"/>
          <field type="slice" name="args">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="SeriesCollection">
          <field type="slice" name="Members">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="common"/>
                <item value="SerializedSeries"/>
              </type>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="Series">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="common"/>
              <item value="SerializedSeries"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Point">
          <field type="slice" name="Values">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="DataTestClient">
          <field type="ident" def="string" name="db"/>
        </type>
        <type name="Client" type="interface">
          <method name="RunQuery">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="C"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="TimePrecision"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="influxdb"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="RunQueryWithNumbers">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="C"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="TimePrecision"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="influxdb"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="RunInvalidQuery">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="C"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="TimePrecision"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="influxdb"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="WriteData">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="influxdb"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
              <type type="pointer">
                <type type="ident" def="C"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="TimePrecision"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="WriteJsonData">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="pointer">
                <type type="ident" def="C"/>
              </type>
              <type type="ellipsis">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="TimePrecision"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="ToMap">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="ApiSeries"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="interface"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewSslServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="NewServerWithArgs">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="WaitForServerToStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WaitForServerToSync">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetClient">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetClientWithUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="WriteData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriteDataToDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RunQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="influxdb"/>
              <item value="TimePrecision"/>
            </type>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="RunQueryAsRoot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="influxdb"/>
              <item value="TimePrecision"/>
            </type>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="RunQueryAsUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="influxdb"/>
              <item value="TimePrecision"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ApiPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetSslOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DoesWalExist">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ResultsToSeriesCollection">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="common"/>
                  <item value="SerializedSeries"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SeriesCollection"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SeriesCollection"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Series"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValueForPointAndColumn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Series"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SeriesCollection"/>
            </type>
          </resultsList>
        </function>
        <function name="QueryAsRoot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SeriesCollection"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetErrorBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="QueryWithUsername">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SeriesCollection"/>
            </type>
          </resultsList>
        </function>
        <function name="VerifyForbiddenQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Post">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="PostGetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Request">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="RemoveAllContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AssertContinuousQueryCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CreateDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetDB">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriteData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriteJsonData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RunQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="RunQueryWithNumbers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="RunInvalidQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
            <type type="ellipsis">
              <type type="selector">
                <prefix value="influxdb"/>
                <item value="TimePrecision"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="DeleteDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DataTestClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="C"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CreatePoints">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="CreateSeries">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="CreatePointsFromFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="int"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="float64"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="influxdb"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/api/udp">
      <types>
        <type type="struct" name="Server">
          <field type="ident" def="string" name="listenAddress"/>
          <field type="ident" def="string" name="database"/>
          <field type="selector" name="coordinator">
            <prefix value="api"/>
            <item value="Coordinator"/>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="pointer" name="conn">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPConn"/>
            </type>
          </field>
          <field type="pointer" name="user">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterAdmin"/>
            </type>
          </field>
          <field type="channel" dir="3" name="shutdown">
            <type type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="api"/>
              <item value="Coordinator"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HandleSocket">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="UDPConn"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/server">
      <types>
        <type type="struct" name="Server">
          <field type="pointer" name="RaftServer">
            <type type="selector">
              <prefix value="coordinator"/>
              <item value="RaftServer"/>
            </type>
          </field>
          <field type="pointer" name="ProtobufServer">
            <type type="selector">
              <prefix value="coordinator"/>
              <item value="ProtobufServer"/>
            </type>
          </field>
          <field type="pointer" name="ClusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="pointer" name="HttpApi">
            <type type="selector">
              <prefix value="http"/>
              <item value="HttpServer"/>
            </type>
          </field>
          <field type="pointer" name="GraphiteApi">
            <type type="selector">
              <prefix value="graphite"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="pointer" name="CollectdApi">
            <type type="selector">
              <prefix value="collectd"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="pointer" name="UdpApi">
            <type type="selector">
              <prefix value="udp"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="slice" name="UdpServers">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="udp"/>
                <item value="Server"/>
              </type>
            </elmtype>
          </field>
          <field type="pointer" name="AdminServer">
            <type type="selector">
              <prefix value="admin"/>
              <item value="HttpServer"/>
            </type>
          </field>
          <field type="pointer" name="Coordinator">
            <type type="selector">
              <prefix value="coordinator"/>
              <item value="Coordinator"/>
            </type>
          </field>
          <field type="pointer" name="Config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="pointer" name="RequestHandler">
            <type type="selector">
              <prefix value="coordinator"/>
              <item value="ProtobufRequestHandler"/>
            </type>
          </field>
          <field type="ident" def="bool" name="stopped"/>
          <field type="pointer" name="writeLog">
            <type type="selector">
              <prefix value="wal"/>
              <item value="WAL"/>
            </type>
          </field>
          <field type="pointer" name="shardStore">
            <type type="selector">
              <prefix value="datastore"/>
              <item value="ShardDatastore"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/api/http">
      <types>
        <type name="UserManager" type="interface">
          <method name="AuthenticateDbUser">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AuthenticateClusterAdmin">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateClusterAdminUser">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteClusterAdminUser">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ChangeClusterAdminPassword">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListClusterAdmins">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateDbUser">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="ident" def="string"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DeleteDbUser">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ChangeDbUserPassword">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ChangeDbUserPermissions">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListDbUsers">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="common"/>
                  <item value="User"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetDbUser">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetDbAdmin">
            <paramsList>
              <type type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="SeriesWriter">
          <field type="func" name="yield">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type name="Flusher" type="interface">
          <method name="Flush">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="CompressedResponseWriter">
          <field type="selector" name="responseWriter">
            <prefix value="libhttp"/>
            <item value="ResponseWriter"/>
          </field>
          <field type="selector" name="writer">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="Flusher" name="compressionFlusher"/>
          <field type="selector" name="responseFlusher">
            <prefix value="libhttp"/>
            <item value="Flusher"/>
          </field>
        </type>
        <type type="struct" name="HttpServer">
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="selector" name="sslConn">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="ident" def="string" name="httpPort"/>
          <field type="ident" def="string" name="httpSslPort"/>
          <field type="ident" def="string" name="httpSslCert"/>
          <field type="ident" def="string" name="adminAssetsDir"/>
          <field type="selector" name="coordinator">
            <prefix value="api"/>
            <item value="Coordinator"/>
          </field>
          <field type="ident" def="UserManager" name="userManager"/>
          <field type="channel" dir="3" name="shutdown">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="pointer" name="raftServer">
            <type type="selector">
              <prefix value="coordinator"/>
              <item value="RaftServer"/>
            </type>
          </field>
          <field type="selector" name="readTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="pointer" name="p">
            <type type="selector">
              <prefix value="pat"/>
              <item value="PatternServeMux"/>
            </type>
          </field>
        </type>
        <type name="Writer" type="interface">
          <method name="yield">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="done">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="AllPointsWriter">
          <field type="map" name="memSeries">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="w">
            <prefix value="libhttp"/>
            <item value="ResponseWriter"/>
          </field>
          <field type="ident" def="TimePrecision" name="precision"/>
          <field type="ident" def="bool" name="pretty"/>
        </type>
        <type type="struct" name="ChunkWriter">
          <field type="selector" name="w">
            <prefix value="libhttp"/>
            <item value="ResponseWriter"/>
          </field>
          <field type="ident" def="TimePrecision" name="precision"/>
          <field type="ident" def="bool" name="wroteContentType"/>
          <field type="ident" def="bool" name="pretty"/>
        </type>
        <type type="struct" name="Point">
          <field type="ident" def="int64" name="Timestamp"/>
          <field type="ident" def="uint32" name="SequenceNumber"/>
          <field type="slice" name="Values">
            <elmtype type="interface"/>
          </field>
        </type>
        <type type="struct" name="NewUser">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Password"/>
          <field type="ident" def="bool" name="IsAdmin"/>
          <field type="ident" def="string" name="ReadFrom"/>
          <field type="ident" def="string" name="WriteTo"/>
        </type>
        <type type="struct" name="UpdateClusterAdminUser">
          <field type="ident" def="string" name="Password"/>
        </type>
        <type type="struct" name="ApiUser">
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="UserDetail">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="IsAdmin"/>
          <field type="ident" def="string" name="WriteTo"/>
          <field type="ident" def="string" name="ReadFrom"/>
        </type>
        <type type="struct" name="ContinuousQuery">
          <field type="ident" def="int64" name="Id"/>
          <field type="ident" def="string" name="Query"/>
        </type>
        <type type="struct" name="NewContinuousQuery">
          <field type="ident" def="string" name="Query"/>
        </type>
        <type type="struct" name="DatabaseConfig">
          <field type="slice" name="Spaces">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ShardSpace"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="ContinuousQueries">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewSeriesWriter">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Series"/>
                  </type>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SeriesWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SeriesWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SeriesWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SeriesWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewCompressionResponseWriter">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="libhttp"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompressedResponseWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="Header">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="Header"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompressedResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CompressionHandler">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="HeaderHandler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="CompressionHeaderHandler">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="libhttp"/>
              <item value="HandlerFunc"/>
            </type>
          </resultsList>
        </function>
        <function name="NewHttpServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Coordinator"/>
            </type>
            <type type="ident" def="UserManager"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="coordinator"/>
                <item value="RaftServer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </resultsList>
        </function>
        <function name="EnableSsl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="TimePrecisionFromString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="TimePrecision"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="INVALID_CREDENTIALS_MSG"/>
        <name value="JSON_PRETTY_PRINT_INDENT"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/admin">
      <types>
        <type type="struct" name="HttpServer">
          <field type="ident" def="string" name="port"/>
          <field type="selector" name="listener">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="ident" def="bool" name="closed"/>
        </type>
      </types>
      <functions>
        <function name="NewHttpServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HttpServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/checkers">
      <types>
        <type type="struct" name="SeriesEqualsChecker">
          <field type="pointer" name="">
            <type type="ident" def="CheckerInfo"/>
          </field>
        </type>
        <type name="SimplePoint" type="array">
          <elmtype type="interface"/>
        </type>
      </types>
      <functions>
        <function name="Check">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SeriesEqualsChecker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CheckEquality">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CheckSeriesEquality">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Check">
          <recvList>
            <type type="pointer">
              <type type="ident" def="inRangeChecker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SeriesEquals"/>
        <name value="InRange"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/configuration">
      <types>
        <type name="Size" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="AdminConfig">
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Assets"/>
        </type>
        <type type="struct" name="ApiConfig">
          <field type="ident" def="int" name="SslPort"/>
          <field type="ident" def="string" name="SslCertPath"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="duration" name="ReadTimeout"/>
        </type>
        <type type="struct" name="GraphiteConfig">
          <field type="ident" def="bool" name="Enabled"/>
          <field type="ident" def="string" name="Address"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="bool" name="UdpEnabled"/>
        </type>
        <type type="struct" name="CollectdInputConfig">
          <field type="ident" def="bool" name="Enabled"/>
          <field type="ident" def="string" name="Address"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="TypesDB"/>
        </type>
        <type type="struct" name="UdpInputConfig">
          <field type="ident" def="bool" name="Enabled"/>
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Database"/>
        </type>
        <type type="struct" name="RaftConfig">
          <field type="ident" def="int" name="Port"/>
          <field type="ident" def="string" name="Dir"/>
          <field type="ident" def="duration" name="Timeout"/>
        </type>
        <type type="struct" name="StorageConfig">
          <field type="ident" def="string" name="Dir"/>
          <field type="ident" def="string" name="DefaultEngine"/>
          <field type="ident" def="int" name="WriteBufferSize"/>
          <field type="ident" def="int" name="MaxOpenShards"/>
          <field type="ident" def="int" name="PointBatchSize"/>
          <field type="ident" def="int" name="WriteBatchSize"/>
          <field type="map" name="Engines">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="toml"/>
              <item value="Primitive"/>
            </valtype>
          </field>
          <field type="ident" def="duration" name="RetentionSweepPeriod"/>
        </type>
        <type type="struct" name="ClusterConfig">
          <field type="slice" name="SeedServers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="ProtobufPort"/>
          <field type="ident" def="duration" name="ProtobufTimeout"/>
          <field type="ident" def="duration" name="ProtobufHeartbeatInterval"/>
          <field type="ident" def="duration" name="MinBackoff"/>
          <field type="ident" def="duration" name="MaxBackoff"/>
          <field type="ident" def="int" name="WriteBufferSize"/>
          <field type="ident" def="int" name="ConcurrentShardQueryLimit"/>
          <field type="ident" def="int" name="MaxResponseBufferSize"/>
        </type>
        <type type="struct" name="LevelDbConfiguration">
          <field type="ident" def="int" name="MaxOpenFiles"/>
          <field type="ident" def="Size" name="LruCacheSize"/>
          <field type="ident" def="int" name="MaxOpenShards"/>
          <field type="ident" def="int" name="PointBatchSize"/>
          <field type="ident" def="int" name="WriteBatchSize"/>
        </type>
        <type type="struct" name="LoggingConfig">
          <field type="ident" def="string" name="File"/>
          <field type="ident" def="string" name="Level"/>
        </type>
        <type type="struct" name="WalConfig">
          <field type="ident" def="string" name="Dir"/>
          <field type="ident" def="int" name="FlushAfterRequests"/>
          <field type="ident" def="int" name="BookmarkAfterRequests"/>
          <field type="ident" def="int" name="IndexAfterRequests"/>
          <field type="ident" def="int" name="RequestsPerLogFile"/>
        </type>
        <type type="struct" name="InputPlugins">
          <field type="ident" def="GraphiteConfig" name="Graphite"/>
          <field type="ident" def="CollectdInputConfig" name="CollectdInput"/>
          <field type="ident" def="UdpInputConfig" name="UdpInput"/>
          <field type="slice" name="UdpServersInput">
            <elmtype type="ident" def="UdpInputConfig"/>
          </field>
        </type>
        <type type="struct" name="TomlConfiguration">
          <field type="ident" def="AdminConfig" name="Admin"/>
          <field type="ident" def="ApiConfig" name="HttpApi"/>
          <field type="ident" def="InputPlugins" name="InputPlugins"/>
          <field type="ident" def="RaftConfig" name="Raft"/>
          <field type="ident" def="StorageConfig" name="Storage"/>
          <field type="ident" def="ClusterConfig" name="Cluster"/>
          <field type="ident" def="LoggingConfig" name="Logging"/>
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="BindAddress"/>
          <field type="ident" def="bool" name="ReportingDisabled"/>
          <field type="ident" def="WalConfig" name="WalConfig"/>
          <field type="ident" def="LevelDbConfiguration" name="LevelDb"/>
        </type>
        <type type="struct" name="Configuration">
          <field type="ident" def="int" name="AdminHttpPort"/>
          <field type="ident" def="int" name="ApiHttpSslPort"/>
          <field type="ident" def="string" name="ApiHttpCertPath"/>
          <field type="ident" def="int" name="ApiHttpPort"/>
          <field type="selector" name="ApiReadTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="GraphiteEnabled"/>
          <field type="ident" def="string" name="GraphiteAddress"/>
          <field type="ident" def="int" name="GraphitePort"/>
          <field type="ident" def="string" name="GraphiteDatabase"/>
          <field type="ident" def="bool" name="GraphiteUdpEnabled"/>
          <field type="ident" def="bool" name="CollectdEnabled"/>
          <field type="ident" def="string" name="CollectdAddress"/>
          <field type="ident" def="int" name="CollectdPort"/>
          <field type="ident" def="string" name="CollectdDatabase"/>
          <field type="ident" def="string" name="CollectdTypesDB"/>
          <field type="slice" name="UdpServers">
            <elmtype type="ident" def="UdpInputConfig"/>
          </field>
          <field type="ident" def="string" name="StorageDefaultEngine"/>
          <field type="ident" def="int" name="StorageMaxOpenShards"/>
          <field type="ident" def="int" name="StoragePointBatchSize"/>
          <field type="ident" def="int" name="StorageWriteBatchSize"/>
          <field type="map" name="StorageEngineConfigs">
            <keytype type="ident" def="string"/>
            <valtype type="selector">
              <prefix value="toml"/>
              <item value="Primitive"/>
            </valtype>
          </field>
          <field type="ident" def="duration" name="StorageRetentionSweepPeriod"/>
          <field type="ident" def="int" name="LevelDbMaxOpenFiles"/>
          <field type="ident" def="int" name="LevelDbLruCacheSize"/>
          <field type="ident" def="int" name="RaftServerPort"/>
          <field type="ident" def="duration" name="RaftTimeout"/>
          <field type="slice" name="SeedServers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="DataDir"/>
          <field type="ident" def="string" name="RaftDir"/>
          <field type="ident" def="int" name="ProtobufPort"/>
          <field type="ident" def="duration" name="ProtobufTimeout"/>
          <field type="ident" def="duration" name="ProtobufHeartbeatInterval"/>
          <field type="ident" def="duration" name="ProtobufMinBackoff"/>
          <field type="ident" def="duration" name="ProtobufMaxBackoff"/>
          <field type="ident" def="string" name="Hostname"/>
          <field type="ident" def="string" name="LogFile"/>
          <field type="ident" def="string" name="LogLevel"/>
          <field type="ident" def="string" name="BindAddress"/>
          <field type="ident" def="string" name="WalDir"/>
          <field type="ident" def="int" name="WalFlushAfterRequests"/>
          <field type="ident" def="int" name="WalBookmarkAfterRequests"/>
          <field type="ident" def="int" name="WalIndexAfterRequests"/>
          <field type="ident" def="int" name="WalRequestsPerLogFile"/>
          <field type="ident" def="int" name="LocalStoreWriteBufferSize"/>
          <field type="ident" def="int" name="PerServerWriteBufferSize"/>
          <field type="ident" def="int" name="ClusterMaxResponseBufferSize"/>
          <field type="ident" def="int" name="ConcurrentShardQueryLimit"/>
          <field type="ident" def="bool" name="ReportingDisabled"/>
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="InfluxDBVersion"/>
        </type>
      </types>
      <functions>
        <function name="UnmarshalText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Size"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="duration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadConfiguration">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AdminHttpPortString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ApiHttpPortString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ApiHttpSslPortString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GraphiteBindString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CollectdBindString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UdpInputPortString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HostnameOrDetect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtobufConnectionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RaftConnectionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtobufListenString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RaftListenString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Configuration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ONE_MEGABYTE"/>
        <name value="ONE_GIGABYTE"/>
        <name value="MAX_INT"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/api/graphite">
      <types>
        <type type="struct" name="GraphiteMetric">
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="bool" name="isInt"/>
          <field type="ident" def="int64" name="integerValue"/>
          <field type="ident" def="float64" name="floatValue"/>
          <field type="ident" def="int64" name="timestamp"/>
        </type>
        <type type="struct" name="Server">
          <field type="ident" def="string" name="listenAddress"/>
          <field type="ident" def="string" name="database"/>
          <field type="selector" name="coordinator">
            <prefix value="api"/>
            <item value="Coordinator"/>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="pointer" name="udpConn">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPConn"/>
            </type>
          </field>
          <field type="pointer" name="user">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterAdmin"/>
            </type>
          </field>
          <field type="channel" dir="3" name="writeSeries">
            <type type="ident" def="Record"/>
          </field>
          <field type="channel" dir="3" name="allCommitted">
            <type type="ident" def="bool"/>
          </field>
          <field type="channel" dir="3" name="connClosed">
            <type type="ident" def="bool"/>
          </field>
          <field type="ident" def="bool" name="udpEnabled"/>
          <field type="selector" name="writers">
            <prefix value="sync"/>
            <item value="WaitGroup"/>
          </field>
        </type>
        <type type="struct" name="Record">
          <field type="ident" def="string" name="Name"/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GraphiteMetric"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Coordinator"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeUdp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="UDPConn"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/common">
      <types>
        <type name="User" type="interface">
          <method name="GetName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="IsDeleted">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="IsClusterAdmin">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="IsDbAdmin">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetDb">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="HasWriteAccess">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetWritePermission">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="HasReadAccess">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetReadPermission">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type name="Type" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="SerializedSeries">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Columns">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Points">
            <elmtype type="slice">
              <elmtype type="interface"/>
            </elmtype>
          </field>
        </type>
        <type name="SerializedSeriesCollection" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="SerializedSeries"/>
          </elmtype>
        </type>
        <type type="struct" name="BySerializedSeriesNameAsc">
          <field type="ident" def="SerializedSeriesCollection" name=""/>
        </type>
        <type name="TimePrecision" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="ApiSeries" type="interface">
          <method name="GetName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="GetColumns">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="GetPoints">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="slice">
                  <elmtype type="interface"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ErrorWithStacktrace">
          <field type="ident" def="string" name="msg"/>
          <field type="ident" def="string" name="stacktrace"/>
          <field type="ident" def="error" name="cause"/>
        </type>
        <type type="struct" name="QueryError">
          <field type="ident" def="int" name="ErrorCode"/>
          <field type="ident" def="string" name="ErrorMsg"/>
        </type>
        <type name="AuthenticationError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="AuthorizationError" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="DatabaseExistsError" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TimeToMicroseconds">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="TimeFromMicroseconds">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="SortSerializedSeries">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SerializedSeries"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SerializedSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetColumns">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SerializedSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPoints">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SerializedSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="interface"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="SerializedSeriesCollection"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="SerializedSeriesCollection"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="BySerializedSeriesNameAsc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ConvertToDataStoreSeries">
          <recvList/>
          <paramsList>
            <type type="ident" def="ApiSeries"/>
            <type type="ident" def="TimePrecision"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SerializeSeries">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </valtype>
            </type>
            <type type="ident" def="TimePrecision"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SerializedSeries"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="RecoverFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="interface"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MergeSeries">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ParseTimeDuration">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsIrregularInterval">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFileSize">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StringToSeriesArray">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CurrentTime">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="NewErrorWithStacktrace">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ErrorWithStacktrace"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrorWithStacktrace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewQueryError">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="QueryError"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="AuthenticationError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewAuthenticationError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthenticationError"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="AuthorizationError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewAuthorizationError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthorizationError"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="DatabaseExistsError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewDatabaseExistsError">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="DatabaseExistsError"/>
          </resultsList>
        </function>
        <function name="CoerceValues">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="interface"/>
            <type type="ident" def="Type"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="TYPE_UNKNOWN"/>
        <name value="TYPE_INT"/>
        <name value="TYPE_STRING"/>
        <name value="TYPE_BOOL"/>
        <name value="TYPE_DOUBLE"/>
        <name value="TRUE"/>
        <name value="FALSE"/>
        <name value="MicrosecondPrecision"/>
        <name value="MillisecondPrecision"/>
        <name value="SecondPrecision"/>
        <name value="Day"/>
        <name value="Week"/>
        <name value="Month"/>
        <name value="Year"/>
        <name value="WrongNumberOfArguments"/>
        <name value="InvalidArgument"/>
        <name value="InternalError"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/cluster">
      <types>
        <type type="struct" name="WriteBuffer">
          <field type="ident" def="Writer" name="writer"/>
          <field type="ident" def="WAL" name="wal"/>
          <field type="ident" def="uint32" name="serverId"/>
          <field type="channel" dir="3" name="writes">
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </field>
          <field type="channel" dir="3" name="stoppedWrites">
            <type type="ident" def="uint32"/>
          </field>
          <field type="ident" def="int" name="bufferSize"/>
          <field type="map" name="shardIds">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="map" name="shardLastRequestNumber">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="uint32"/>
          </field>
          <field type="map" name="shardCommitedRequestNumber">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="uint32"/>
          </field>
          <field type="ident" def="string" name="writerInfo"/>
        </type>
        <type name="Writer" type="interface">
          <method name="Write">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Matcher">
          <field type="ident" def="bool" name="IsRegex"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="CommonUser">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Hash"/>
          <field type="ident" def="bool" name="IsUserDeleted"/>
          <field type="ident" def="string" name="CacheKey"/>
        </type>
        <type type="struct" name="ClusterAdmin">
          <field type="ident" def="CommonUser" name=""/>
        </type>
        <type type="struct" name="DbUser">
          <field type="ident" def="CommonUser" name=""/>
          <field type="ident" def="string" name="Db"/>
          <field type="slice" name="ReadFrom">
            <elmtype type="pointer">
              <type type="ident" def="Matcher"/>
            </elmtype>
          </field>
          <field type="slice" name="WriteTo">
            <elmtype type="pointer">
              <type type="ident" def="Matcher"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="IsAdmin"/>
        </type>
        <type type="struct" name="ShardSpace">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Regex"/>
          <field type="pointer" name="compiledRegex">
            <type type="selector">
              <prefix value="regexp"/>
              <item value="Regexp"/>
            </type>
          </field>
          <field type="ident" def="string" name="RetentionPolicy"/>
          <field type="ident" def="string" name="ShardDuration"/>
          <field type="ident" def="uint32" name="ReplicationFactor"/>
          <field type="ident" def="uint32" name="Split"/>
          <field type="slice" name="shards">
            <elmtype type="pointer">
              <type type="ident" def="ShardData"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="ShardIdInserterProcessor">
          <field type="ident" def="uint32" name="id"/>
          <field type="selector" name="next">
            <prefix value="engine"/>
            <item value="Processor"/>
          </field>
        </type>
        <type name="Shard" type="interface">
          <method name="Id">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint32"/>
            </resultsList>
          </method>
          <method name="StartTime">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="EndTime">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="Write">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SyncWrite">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Query">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="QuerySpec"/>
                </type>
              </type>
              <type type="channel" dir="1">
                <type type="pointer">
                  <type type="selector">
                    <prefix value="p"/>
                    <item value="Response"/>
                  </type>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ReplicationFactor">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="IsMicrosecondInRange">
            <paramsList>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="NewShardData">
          <field type="ident" def="uint32" name="Id"/>
          <field type="ident" def="string" name="SpaceName"/>
          <field type="ident" def="string" name="Database"/>
          <field type="selector" name="StartTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="EndTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="slice" name="ServerIds">
            <elmtype type="ident" def="uint32"/>
          </field>
        </type>
        <type name="ShardType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ShardData">
          <field type="ident" def="uint32" name="id"/>
          <field type="selector" name="startTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int64" name="startMicro"/>
          <field type="ident" def="int64" name="endMicro"/>
          <field type="selector" name="endTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="WAL" name="wal"/>
          <field type="slice" name="servers">
            <elmtype type="selector">
              <prefix value="wal"/>
              <item value="Server"/>
            </elmtype>
          </field>
          <field type="slice" name="clusterServers">
            <elmtype type="pointer">
              <type type="ident" def="ClusterServer"/>
            </elmtype>
          </field>
          <field type="ident" def="LocalShardStore" name="store"/>
          <field type="slice" name="serverIds">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="selector" name="shardDuration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="uint64" name="shardNanoseconds"/>
          <field type="ident" def="uint32" name="localServerId"/>
          <field type="ident" def="bool" name="IsLocal"/>
          <field type="ident" def="string" name="SpaceName"/>
          <field type="ident" def="string" name="Database"/>
        </type>
        <type name="LocalShardDb" type="interface">
          <method name="Write">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="p"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Query">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="QuerySpec"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="engine"/>
                <item value="Processor"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DropFields">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="metastore"/>
                    <item value="Field"/>
                  </type>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="IsClosed">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="LocalShardStore" type="interface">
          <method name="Write">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="SetWriteBuffer">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="WriteBuffer"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="BufferWrite">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="GetOrCreateShard">
            <paramsList>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="LocalShardDb"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ReturnShard">
            <paramsList>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="DeleteShard">
            <paramsList>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Shards" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="ShardData"/>
          </elmtype>
        </type>
        <type name="ShardCollection" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="ShardData"/>
          </elmtype>
        </type>
        <type type="struct" name="ByShardTimeDesc">
          <field type="ident" def="ShardCollection" name=""/>
        </type>
        <type type="struct" name="ByShardTimeAsc">
          <field type="ident" def="ShardCollection" name=""/>
        </type>
        <type name="ResponseChannel" type="interface">
          <method name="Yield">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Response"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ResponseChannelWrapper">
          <field type="channel" dir="1" name="c">
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Response"/>
              </type>
            </type>
          </field>
        </type>
        <type type="struct" name="ResponseChannelProcessor">
          <field type="ident" def="ResponseChannel" name="r"/>
        </type>
        <type type="struct" name="NilProcessor"/>
        <type type="struct" name="ClusterServer">
          <field type="ident" def="uint32" name="Id"/>
          <field type="ident" def="string" name="RaftName"/>
          <field type="ident" def="ServerState" name="State"/>
          <field type="ident" def="string" name="RaftConnectionString"/>
          <field type="ident" def="string" name="ProtobufConnectionString"/>
          <field type="ident" def="ServerConnection" name="connection"/>
          <field type="selector" name="HeartbeatInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Backoff">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="MinBackoff">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="MaxBackoff">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="isUp"/>
          <field type="pointer" name="writeBuffer">
            <type type="ident" def="WriteBuffer"/>
          </field>
          <field type="ident" def="bool" name="heartbeatStarted"/>
        </type>
        <type name="ServerConnection" type="interface">
          <method name="Connect">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="ClearRequests">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="MakeRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="ResponseChannel"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CancelRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="ServerState" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="QuerySpec" type="interface">
          <method name="GetStartTime">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="GetEndTime">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
          <method name="Database">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TableNames">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="TableNamesAndRegex">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="regexp"/>
                  <item value="Regexp"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="GetGroupByInterval">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="time"/>
                  <item value="Duration"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="AllShardsQuery">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="IsRegex">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="WAL" type="interface">
          <method name="AssignSequenceNumbersAndLog">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="wal"/>
                <item value="Shard"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="AssignSequenceNumbers">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Commit">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateCheckpoint">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RecoverServerFromRequestNumber">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="slice">
                <elmtype type="ident" def="uint32"/>
              </type>
              <type type="func">
                <paramsList>
                  <type type="pointer">
                    <type type="selector">
                      <prefix value="protocol"/>
                      <item value="Request"/>
                    </type>
                  </type>
                  <type type="ident" def="uint32"/>
                </paramsList>
                <resultsList>
                  <type type="ident" def="error"/>
                </resultsList>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RecoverServerFromLastCommit">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="slice">
                <elmtype type="ident" def="uint32"/>
              </type>
              <type type="func">
                <paramsList>
                  <type type="pointer">
                    <type type="selector">
                      <prefix value="protocol"/>
                      <item value="Request"/>
                    </type>
                  </type>
                  <type type="ident" def="uint32"/>
                </paramsList>
                <resultsList>
                  <type type="ident" def="error"/>
                </resultsList>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="ShardCreator" type="interface">
          <method name="CreateShards">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="NewShardData"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="ShardData"/>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateShardSpace">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="ShardSpace"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="ClusterConfiguration">
          <field type="selector" name="createDatabaseLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="DatabaseReplicationFactors">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="selector" name="usersLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="clusterAdmins">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </valtype>
          </field>
          <field type="map" name="dbUsers">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="DbUser"/>
              </valtype>
            </valtype>
          </field>
          <field type="slice" name="servers">
            <elmtype type="pointer">
              <type type="ident" def="ClusterServer"/>
            </elmtype>
          </field>
          <field type="ident" def="uint32" name="lastServerIdUsed"/>
          <field type="selector" name="serversLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="continuousQueries">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ContinuousQuery"/>
              </elmtype>
            </valtype>
          </field>
          <field type="selector" name="continuousQueriesLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="ParsedContinuousQueries">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="uint32"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="SelectQuery"/>
                </type>
              </valtype>
            </valtype>
          </field>
          <field type="selector" name="continuousQueryTimestamp">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="pointer" name="LocalServer">
            <type type="ident" def="ClusterServer"/>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="channel" dir="3" name="addedLocalServerWait">
            <type type="ident" def="bool"/>
          </field>
          <field type="ident" def="bool" name="addedLocalServer"/>
          <field type="func" name="connectionCreator">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="ServerConnection"/>
            </resultsList>
          </field>
          <field type="ident" def="LocalShardStore" name="shardStore"/>
          <field type="ident" def="WAL" name="wal"/>
          <field type="ident" def="uint32" name="lastShardIdUsed"/>
          <field type="pointer" name="random">
            <type type="selector">
              <prefix value="rand"/>
              <item value="Rand"/>
            </type>
          </field>
          <field type="pointer" name="lastServerToGetShard">
            <type type="ident" def="ClusterServer"/>
          </field>
          <field type="ident" def="ShardCreator" name="shardCreator"/>
          <field type="selector" name="shardLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="shardsById">
            <keytype type="ident" def="uint32"/>
            <valtype type="pointer">
              <type type="ident" def="ShardData"/>
            </valtype>
          </field>
          <field type="ident" def="string" name="LocalRaftName"/>
          <field type="slice" name="writeBuffers">
            <elmtype type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </elmtype>
          </field>
          <field type="pointer" name="MetaStore">
            <type type="selector">
              <prefix value="metastore"/>
              <item value="Store"/>
            </type>
          </field>
          <field type="map" name="databaseShardSpaces">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardSpace"/>
              </elmtype>
            </valtype>
          </field>
        </type>
        <type type="struct" name="ContinuousQuery">
          <field type="ident" def="uint32" name="Id"/>
          <field type="ident" def="string" name="Query"/>
        </type>
        <type type="struct" name="Database">
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="SavedConfiguration">
          <field type="map" name="Databases">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="uint8"/>
          </field>
          <field type="map" name="Admins">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </valtype>
          </field>
          <field type="map" name="DbUsers">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="DbUser"/>
              </valtype>
            </valtype>
          </field>
          <field type="slice" name="Servers">
            <elmtype type="pointer">
              <type type="ident" def="ClusterServer"/>
            </elmtype>
          </field>
          <field type="map" name="ContinuousQueries">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ContinuousQuery"/>
              </elmtype>
            </valtype>
          </field>
          <field type="pointer" name="MetaStore">
            <type type="selector">
              <prefix value="metastore"/>
              <item value="Store"/>
            </type>
          </field>
          <field type="ident" def="uint32" name="LastShardIdUsed"/>
          <field type="ident" def="uint32" name="LastServerIdUsed"/>
          <field type="map" name="DatabaseShardSpaces">
            <keytype type="ident" def="string"/>
            <valtype type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardSpace"/>
              </elmtype>
            </valtype>
          </field>
          <field type="slice" name="Shards">
            <elmtype type="pointer">
              <type type="ident" def="NewShardData"/>
            </elmtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewWriteBuffer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Writer"/>
            <type type="ident" def="WAL"/>
            <type type="ident" def="uint32"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </type>
          </resultsList>
        </function>
        <function name="ShardsRequestNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="uint32"/>
              <valtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="HasUncommitedWrites">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Matches">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Matcher"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsDeleted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ChangePassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDbAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDb">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HasWriteAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasReadAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDbAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasWriteAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetWritePermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HasReadAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetReadPermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsDbAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasWriteAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetWritePermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="HasReadAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetReadPermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDb">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ChangePermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HashPassword">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewShardSpace">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </resultsList>
        </function>
        <function name="Validate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDefaults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MatchesSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SecondsOfDuration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="ParsedRetentionPeriod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="ParsedShardDuration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="UpdateFromSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewShardIdInserterProcessor">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Processor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ShardIdInserterProcessor"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="ident" def="ShardIdInserterProcessor"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="ident" def="ShardIdInserterProcessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="ShardIdInserterProcessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewShard">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="WAL"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </resultsList>
        </function>
        <function name="Id">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="StartMicro">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="StartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="EndMicro">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="EndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="IsMicrosecondInRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetServers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ClusterServer"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReplicationFactor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="SetLocalStore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LocalShardStore"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServerIds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="DropFields">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="metastore"/>
                  <item value="Field"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SyncWrite">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteLocalOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ShouldAggregateLocally">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ShouldAggregateLocally">
          <recvList>
            <type type="ident" def="Shards"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="QueryResponseBufferSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="LogAndHandleDestructiveQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleDestructiveQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="p"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ToNewShardData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NewShardData"/>
            </type>
          </resultsList>
        </function>
        <function name="SortShardsByTimeAscending">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SortShardsByTimeDescending">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="ShardCollection"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="ShardCollection"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByShardTimeAsc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByShardTimeDesc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewResponseChannelWrapper">
          <recvList/>
          <paramsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="ResponseChannel"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Response"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelWrapper"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewResponseChannelProcessor">
          <recvList/>
          <paramsList>
            <type type="ident" def="ResponseChannel"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelProcessor"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelProcessor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelProcessor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseChannelProcessor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="ident" def="NilProcessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="ident" def="NilProcessor"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="ident" def="NilProcessor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStateName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewClusterServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="ServerConnection"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="c"/>
                <item value="Configuration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </resultsList>
        </function>
        <function name="StartHeartbeat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetWriteBuffer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="WriteBuffer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Connect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MakeRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BufferWrite">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsUp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewClusterConfiguration">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="ident" def="WAL"/>
            <type type="ident" def="LocalShardStore"/>
            <type type="func">
              <paramsList>
                <type type="ident" def="string"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="ServerConnection"/>
              </resultsList>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="metastore"/>
                <item value="Store"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </resultsList>
        </function>
        <function name="ShardSpaceExists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetShardCreator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ShardCreator"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetShardSpaces">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardSpace"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetShardSpacesForDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardSpace"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExpiredShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ServerId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="IsSingleServer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Servers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ClusterServer"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="WaitForLocalServerLoaded">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetServerByRaftName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </resultsList>
        </function>
        <function name="GetServerById">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </resultsList>
        </function>
        <function name="GetServerByProtobufConnectionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </resultsList>
        </function>
        <function name="HasUncommitedWrites">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ChangeProtobufConnectionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveServer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddPotentialServer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClusterServer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DatabasesExists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDatabases">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Database"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="DatabaseExists">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CreateDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetContinuousQueryTimestamp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ContinuousQuery"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetLocalConfiguration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetDbUsers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </resultsList>
        </function>
        <function name="SaveDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="DbUser"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ChangeDbUserPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeDbUserPermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetClusterAdmins">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </resultsList>
        </function>
        <function name="SaveClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ClusterAdmin"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SerializableConfiguration">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SavedConfiguration"/>
            </type>
          </resultsList>
        </function>
        <function name="Recovery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HasContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="LastContinuousQueryRunTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="SetLastContinuousQueryRunTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetShardToWriteToBySeriesAndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateCheckpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetShardsForQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Shards"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetShard">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </resultsList>
        </function>
        <function name="HashDbAndSeriesToInt">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="AddShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="NewShardData"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalNewShardArrayToShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="NewShardData"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ShardData"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetLocalShardById">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ShardData"/>
            </type>
          </resultsList>
        </function>
        <function name="DropShard">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverFromWAL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ShardSpace"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ClusterConfiguration"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SEVEN_DAYS"/>
        <name value="DEFAULT_SPLIT"/>
        <name value="DEFAULT_REPLICATION_FACTOR"/>
        <name value="DEFAULT_SHARD_DURATION"/>
        <name value="DEFAULT_RETENTION_POLICY_DURATION"/>
        <name value="LONG_TERM"/>
        <name value="SHORT_TERM"/>
        <name value="PER_SERVER_BUFFER_SIZE"/>
        <name value="LOCAL_WRITE_BUFFER_SIZE"/>
        <name value="HEARTBEAT_TIMEOUT"/>
        <name value="LoadingRingData"/>
        <name value="SendingRingData"/>
        <name value="DeletingOldData"/>
        <name value="Running"/>
        <name value="Potential"/>
        <name value="HEARTBEAT_TYPE"/>
        <name value="DEFAULT_SHARD_SPACE_NAME"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/api">
      <types>
        <type name="Coordinator" type="interface">
          <method name="ForceCompaction">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RunQuery">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="engine"/>
                <item value="Processor"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="WriteSeriesData">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="CreateDatabase">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="ListDatabases">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="cluster"/>
                    <item value="Database"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DropDatabase">
            <paramsList>
              <type type="selector">
                <prefix value="cmn"/>
                <item value="User"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/api/collectd">
      <types>
        <type type="struct" name="Server">
          <field type="ident" def="string" name="listenAddress"/>
          <field type="ident" def="string" name="database"/>
          <field type="selector" name="coordinator">
            <prefix value="api"/>
            <item value="Coordinator"/>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="pointer" name="conn">
            <type type="selector">
              <prefix value="net"/>
              <item value="UDPConn"/>
            </type>
          </field>
          <field type="channel" dir="3" name="shutdown">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="user">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterAdmin"/>
            </type>
          </field>
          <field type="selector" name="typesdb">
            <prefix value="collectd"/>
            <item value="Types"/>
          </field>
          <field type="ident" def="string" name="typesdbpath"/>
        </type>
      </types>
      <functions>
        <function name="NewServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="api"/>
              <item value="Coordinator"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </resultsList>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HandleSocket">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Server"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="UDPConn"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/protocol">
      <types>
        <type name="PointsCollection" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Point"/>
          </elmtype>
        </type>
        <type type="struct" name="ByPointTimeDesc">
          <field type="ident" def="PointsCollection" name=""/>
        </type>
        <type type="struct" name="ByPointTimeAsc">
          <field type="ident" def="PointsCollection" name=""/>
        </type>
      </types>
      <functions>
        <function name="DecodePoint">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetTimestampInMicroseconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="SetTimestampInMicroseconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFieldValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="GetFieldValueAsString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Point"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeResponse">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bytes"/>
                <item value="Buffer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="PointsCollection"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="PointsCollection"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByPointTimeAsc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByPointTimeDesc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFieldIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Series"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="SortPointsTimeAscending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Series"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SortPointsTimeDescending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Series"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GreaterOrEqual">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="String"/>
        <name value="Float64"/>
        <name value="Int64"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/wal">
      <types>
        <type type="struct" name="WAL">
          <field type="pointer" name="state">
            <type type="ident" def="GlobalState"/>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="slice" name="logFiles">
            <elmtype type="pointer">
              <type type="ident" def="log"/>
            </elmtype>
          </field>
          <field type="slice" name="logIndex">
            <elmtype type="pointer">
              <type type="ident" def="index"/>
            </elmtype>
          </field>
          <field type="ident" def="uint32" name="serverId"/>
          <field type="ident" def="uint32" name="nextLogFileSuffix"/>
          <field type="channel" dir="3" name="entries">
            <type type="interface"/>
          </field>
          <field type="ident" def="int" name="requestsSinceLastFlush"/>
          <field type="ident" def="int" name="requestsSinceLastBookmark"/>
          <field type="ident" def="int" name="requestsSinceLastIndex"/>
          <field type="ident" def="int" name="requestsSinceRotation"/>
        </type>
        <type name="Shard" type="interface">
          <method name="Id">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint32"/>
            </resultsList>
          </method>
        </type>
        <type name="Server" type="interface">
          <method name="GetId">
            <paramsList/>
            <resultsList>
              <type type="ident" def="uint32"/>
            </resultsList>
          </method>
        </type>
        <type name="RequestNumberOrder" type="interface">
          <method name="isAfter">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="isAfterOrEqual">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="isBefore">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="isBeforeOrEqual">
            <paramsList>
              <type type="ident" def="uint32"/>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="GlobalState">
          <field type="ident" def="uint32" name="CurrentFileSuffix"/>
          <field type="ident" def="int64" name="CurrentFileOffset"/>
          <field type="ident" def="uint32" name="LargestRequestNumber"/>
          <field type="ident" def="uint32" name="FirstSuffix"/>
          <field type="map" name="ShardLastSequenceNumber">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="uint64"/>
          </field>
          <field type="map" name="ServerLastRequestNumber">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="uint32"/>
          </field>
          <field type="ident" def="string" name="path"/>
        </type>
      </types>
      <functions>
        <function name="NewWAL">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetServerId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Commit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverServerFromLastCommit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Request"/>
                  </type>
                </type>
                <type type="ident" def="uint32"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RecoverServerFromRequestNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Request"/>
                  </type>
                </type>
                <type type="ident" def="uint32"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssignSequenceNumbersAndLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="ident" def="Shard"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssignSequenceNumbers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateCheckpoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WAL"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="sortableLogSlice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="sortableLogSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="sortableLogSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NumberOfRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="indexEntry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="LowestCommitedRequestNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GlobalState"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="entryHeader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="entryHeader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="HOST_ID_OFFSET"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/coordinator">
      <types>
        <type name="ShardAwareObject" type="interface">
          <method name="GetShards">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="QuerySpec"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="selector">
                  <prefix value="cluster"/>
                  <item value="Shard"/>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="CanCollateShards">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="QuerySpec"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="GetShardById">
            <paramsList>
              <type type="ident" def="uint32"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="cluster"/>
                <item value="Shard"/>
              </type>
            </resultsList>
          </method>
          <method name="GetShardToWriteToBySeriesAndTime">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ident" def="int64"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="cluster"/>
                <item value="Shard"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="RaftServer">
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="string" name="bind_address"/>
          <field type="pointer" name="router">
            <type type="selector">
              <prefix value="mux"/>
              <item value="Router"/>
            </type>
          </field>
          <field type="selector" name="raftServer">
            <prefix value="raft"/>
            <item value="Server"/>
          </field>
          <field type="pointer" name="httpServer">
            <type type="selector">
              <prefix value="http"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="selector" name="mutex">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="selector" name="listener">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="ident" def="bool" name="closing"/>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="channel" dir="3" name="notLeader">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="coordinator">
            <type type="ident" def="Coordinator"/>
          </field>
          <field type="ident" def="bool" name="processContinuousQueries"/>
        </type>
        <type type="struct" name="ProtobufServer">
          <field type="selector" name="listener">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="ident" def="string" name="port"/>
          <field type="ident" def="Handler" name="requestHandler"/>
          <field type="selector" name="connectionMapLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="connectionMap">
            <keytype type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </keytype>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
        <type type="struct" name="ProtobufRequestHandler">
          <field type="pointer" name="coordinator">
            <type type="ident" def="Coordinator"/>
          </field>
          <field type="pointer" name="clusterConfig">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ProtobufClient">
          <field type="selector" name="connLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Conn"/>
          </field>
          <field type="ident" def="string" name="hostAndPort"/>
          <field type="selector" name="requestBufferLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="requestBuffer">
            <keytype type="ident" def="uint32"/>
            <valtype type="pointer">
              <type type="ident" def="runningRequest"/>
            </valtype>
          </field>
          <field type="selector" name="reconnectWait">
            <prefix value="sync"/>
            <item value="WaitGroup"/>
          </field>
          <field type="ident" def="bool" name="connectCalled"/>
          <field type="ident" def="uint32" name="lastRequestId"/>
          <field type="selector" name="writeTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="attempts"/>
          <field type="ident" def="bool" name="stopped"/>
          <field type="channel" dir="3" name="reconChan">
            <type type="struct" name=""/>
          </field>
          <field type="pointer" name="reconGroup">
            <type type="selector">
              <prefix value="sync"/>
              <item value="WaitGroup"/>
            </type>
          </field>
          <field type="pointer" name="once">
            <type type="selector">
              <prefix value="sync"/>
              <item value="Once"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Permissions"/>
        <type type="struct" name="MergeChannelProcessor">
          <field type="selector" name="next">
            <prefix value="engine"/>
            <item value="Processor"/>
          </field>
          <field type="channel" dir="3" name="c">
            <type type="parenthesis">
              <type type="channel" dir="2">
                <type type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Response"/>
                  </type>
                </type>
              </type>
            </type>
          </field>
          <field type="channel" dir="3" name="e">
            <type type="ident" def="error"/>
          </field>
        </type>
        <type name="Handler" type="interface">
          <method name="HandleRequest">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="selector">
                <prefix value="net"/>
                <item value="Conn"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Coordinator">
          <field type="pointer" name="clusterConfiguration">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterConfiguration"/>
            </type>
          </field>
          <field type="pointer" name="raftServer">
            <type type="ident" def="RaftServer"/>
          </field>
          <field type="pointer" name="config">
            <type type="selector">
              <prefix value="configuration"/>
              <item value="Configuration"/>
            </type>
          </field>
          <field type="ident" def="Permissions" name="permissions"/>
        </type>
        <type type="struct" name="ContinuousQueryWriter">
          <field type="pointer" name="c">
            <type type="ident" def="Coordinator"/>
          </field>
          <field type="pointer" name="query">
            <type type="selector">
              <prefix value="parser"/>
              <item value="SelectQuery"/>
            </type>
          </field>
          <field type="ident" def="string" name="db"/>
          <field type="ident" def="string" name="target"/>
        </type>
        <type type="struct" name="SetContinuousQueryTimestampCommand">
          <field type="selector" name="Timestamp">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="CreateContinuousQueryCommand">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Query"/>
        </type>
        <type type="struct" name="DeleteContinuousQueryCommand">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="uint32" name="Id"/>
        </type>
        <type type="struct" name="DropDatabaseCommand">
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="CreateDatabaseCommand">
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="SaveDbUserCommand">
          <field type="pointer" name="User">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="DbUser"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ChangeDbUserPassword">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="Hash"/>
        </type>
        <type type="struct" name="ChangeDbUserPermissions">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Username"/>
          <field type="ident" def="string" name="ReadPermissions"/>
          <field type="ident" def="string" name="WritePermissions"/>
        </type>
        <type type="struct" name="SaveClusterAdminCommand">
          <field type="pointer" name="User">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ClusterAdmin"/>
            </type>
          </field>
        </type>
        <type type="struct" name="InfluxJoinCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="ConnectionString"/>
          <field type="ident" def="string" name="ProtobufConnectionString"/>
        </type>
        <type type="struct" name="InfluxForceLeaveCommand">
          <field type="ident" def="uint32" name="Id"/>
        </type>
        <type type="struct" name="InfluxChangeConnectionStringCommand">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="bool" name="Force"/>
          <field type="ident" def="string" name="ConnectionString"/>
          <field type="ident" def="string" name="ProtobufConnectionString"/>
        </type>
        <type type="struct" name="CreateShardsCommand">
          <field type="slice" name="Shards">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="NewShardData"/>
              </type>
            </elmtype>
          </field>
          <field type="ident" def="string" name="SpaceName"/>
        </type>
        <type type="struct" name="DropShardCommand">
          <field type="ident" def="uint32" name="ShardId"/>
          <field type="slice" name="ServerIds">
            <elmtype type="ident" def="uint32"/>
          </field>
        </type>
        <type type="struct" name="CreateSeriesFieldIdsCommand">
          <field type="ident" def="string" name="Database"/>
          <field type="slice" name="Series">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="DropSeriesCommand">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Series"/>
        </type>
        <type type="struct" name="CreateShardSpaceCommand">
          <field type="pointer" name="ShardSpace">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ShardSpace"/>
            </type>
          </field>
        </type>
        <type type="struct" name="DropShardSpaceCommand">
          <field type="ident" def="string" name="Database"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="UpdateShardSpaceCommand">
          <field type="pointer" name="ShardSpace">
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ShardSpace"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewRaftServer">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRaftName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetLeaderRaftName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsLeaderByRaftName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLeaderRaftConnectString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SendCommandToServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Command"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="DbUser"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeDbUserPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeDbUserPermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveClusterAdminUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterAdmin"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateRootUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetContinuousQueryTimestamp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeConnectionString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AssignCoordinator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceLogCompaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompactLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CommittedAllChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="StartProcessingContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Serve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HandleFunc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="http"/>
                  <item value="ResponseWriter"/>
                </type>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="http"/>
                    <item value="Request"/>
                  </type>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveServer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Join">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="cluster"/>
                  <item value="NewShardData"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="cluster"/>
                  <item value="ShardData"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropShard">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetOrSetFieldIdsForSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ShardSpace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateShardSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ShardSpace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewProtobufServer">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Handler"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ProtobufServer"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ListenAndServe">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufServer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewProtobufRequestHandler">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ProtobufRequestHandler"/>
            </type>
          </resultsList>
        </function>
        <function name="HandleRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufRequestHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufRequestHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Response"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewProtobufClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </resultsList>
        </function>
        <function name="Connect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ClearRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CancelRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MakeRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtobufClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Request"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="cluster"/>
              <item value="ResponseChannel"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckQueryPermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeSelectQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="QuerySpec"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDeleteQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDropSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeCreateContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDeleteContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeListContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeCreateDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeListDatabases">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDropDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeListClusterAdmins">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeCreateClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDeleteClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeChangeClusterAdminPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeCreateDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeDeleteDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeListDbUsers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeGetDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeChangeDbUserPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeChangeDbUserPermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="AuthorizeGrantDbUserAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Permissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="selector">
              <prefix value="common"/>
              <item value="AuthorizationError"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMergeChannelProcessor">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Processor"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MergeChannelProcessor"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeChannelProcessor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NextChannel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeChannelProcessor"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="channel" dir="1">
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Response"/>
                </type>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeChannelProcessor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProcessChannels">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeChannelProcessor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewCoordinator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="configuration"/>
                <item value="Configuration"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="RaftServer"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterConfiguration"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </resultsList>
        </function>
        <function name="RunQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="engine"/>
              <item value="Processor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceCompaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteSeriesData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProcessContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InterpolateValuesAndCommit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CommitSeriesData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListContinuousQueries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListDatabases">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="cluster"/>
                  <item value="Database"/>
                </type>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AuthenticateClusterAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListClusterAdmins">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateClusterAdminUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteClusterAdminUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeClusterAdminPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CreateDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListDbUsers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="common"/>
                <item value="User"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetDbUser">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeDbUserPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ChangeDbUserPermissions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDbAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConnectToProtobufServers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewContinuousQueryWriter">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Coordinator"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ContinuousQueryWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContinuousQueryWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContinuousQueryWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ContinuousQueryWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewSetContinuousQueryTimestampCommand">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SetContinuousQueryTimestampCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetContinuousQueryTimestampCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetContinuousQueryTimestampCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCreateContinuousQueryCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CreateContinuousQueryCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateContinuousQueryCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateContinuousQueryCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDeleteContinuousQueryCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteContinuousQueryCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteContinuousQueryCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteContinuousQueryCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDropDatabaseCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DropDatabaseCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropDatabaseCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropDatabaseCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCreateDatabaseCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CreateDatabaseCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateDatabaseCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateDatabaseCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSaveDbUserCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="DbUser"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SaveDbUserCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SaveDbUserCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SaveDbUserCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewChangeDbUserPasswordCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPassword"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPassword"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPassword"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewChangeDbUserPermissionsCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPermissions"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPermissions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChangeDbUserPermissions"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSaveClusterAdminCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ClusterAdmin"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SaveClusterAdminCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SaveClusterAdminCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SaveClusterAdminCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxJoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxJoinCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxJoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxForceLeaveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxForceLeaveCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxChangeConnectionStringCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxChangeConnectionStringCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfluxChangeConnectionStringCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewCreateShardsCommand">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="cluster"/>
                  <item value="NewShardData"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CreateShardsCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardsCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDropShardCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DropShardCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropShardCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropShardCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCreateSeriesFieldIdsCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CreateSeriesFieldIdsCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateSeriesFieldIdsCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateSeriesFieldIdsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateSeriesFieldIdsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateSeriesFieldIdsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDropSeriesCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DropSeriesCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropSeriesCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropSeriesCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCreateShardSpaceCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ShardSpace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CreateShardSpaceCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDropShardSpaceCommand">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DropShardSpaceCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewUpdateShardSpaceCommand">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="cluster"/>
                <item value="ShardSpace"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="UpdateShardSpaceCommand"/>
            </type>
          </resultsList>
        </function>
        <function name="CommandName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpdateShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UpdateShardSpaceCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="raft"/>
              <item value="Server"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DEFAULT_ROOT_PWD"/>
        <name value="DEFAULT_ROOT_PWD_ENVKEY"/>
        <name value="RAFT_NAME_SIZE"/>
        <name value="MAX_SIZE"/>
        <name value="KILOBYTE"/>
        <name value="MEGABYTE"/>
        <name value="MAX_REQUEST_SIZE"/>
        <name value="REQUEST_RETRY_ATTEMPTS"/>
        <name value="MAX_RESPONSE_SIZE"/>
        <name value="MAX_REQUEST_TIME"/>
        <name value="RECONNECT_RETRY_WAIT"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/parser">
      <types>
        <type type="struct" name="WhereCondition">
          <field type="ident" def="bool" name="isBooleanExpression"/>
          <field type="interface" name="Left"/>
          <field type="ident" def="string" name="Operation"/>
          <field type="pointer" name="Right">
            <type type="ident" def="WhereCondition"/>
          </field>
        </type>
        <type name="Values" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Value"/>
          </elmtype>
        </type>
        <type name="ValueType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Value">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Alias"/>
          <field type="ident" def="ValueType" name="Type"/>
          <field type="slice" name="Elems">
            <elmtype type="pointer">
              <type type="ident" def="Value"/>
            </elmtype>
          </field>
          <field type="pointer" name="compiledRegex">
            <type type="selector">
              <prefix value="regexp"/>
              <item value="Regexp"/>
            </type>
          </field>
          <field type="ident" def="bool" name="IsInsensitive"/>
        </type>
        <type name="RegexMatcher" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </type>
        <type name="QueryType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="QuerySpec">
          <field type="pointer" name="query">
            <type type="ident" def="Query"/>
          </field>
          <field type="ident" def="string" name="database"/>
          <field type="ident" def="bool" name="isRegex"/>
          <field type="pointer" name="regex">
            <type type="selector">
              <prefix value="regexp"/>
              <item value="Regexp"/>
            </type>
          </field>
          <field type="slice" name="names">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="selector" name="user">
            <prefix value="common"/>
            <item value="User"/>
          </field>
          <field type="selector" name="startTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="endTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="map" name="seriesValuesAndColumns">
            <keytype type="pointer">
              <type type="ident" def="Value"/>
            </keytype>
            <valtype type="slice">
              <elmtype type="ident" def="string"/>
            </valtype>
          </field>
          <field type="ident" def="bool" name="RunAgainstAllServersInShard"/>
          <field type="ident" def="bool" name="GroupByIrregularInterval"/>
          <field type="pointer" name="groupByInterval">
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </field>
          <field type="ident" def="int" name="groupByColumnCount"/>
        </type>
        <type type="struct" name="QueryError">
          <field type="ident" def="string" name="queryString"/>
          <field type="ident" def="int" name="firstLine"/>
          <field type="ident" def="int" name="firstColumn"/>
          <field type="ident" def="int" name="lastLine"/>
          <field type="ident" def="int" name="lastColumn"/>
          <field type="ident" def="string" name="errorString"/>
        </type>
        <type type="struct" name="From">
          <field type="ident" def="string" name="TableName"/>
        </type>
        <type name="Operation" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="IntoClause">
          <field type="pointer" name="Target">
            <type type="ident" def="Value"/>
          </field>
          <field type="ident" def="bool" name="Backfill"/>
          <field type="pointer" name="BackfillValue">
            <type type="ident" def="Value"/>
          </field>
        </type>
        <type type="struct" name="BasicQuery">
          <field type="selector" name="startTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="endTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="bool" name="startTimeSpecified"/>
        </type>
        <type type="struct" name="SelectDeleteCommonQuery">
          <field type="ident" def="BasicQuery" name=""/>
          <field type="pointer" name="FromClause">
            <type type="ident" def="FromClause"/>
          </field>
          <field type="pointer" name="Condition">
            <type type="ident" def="WhereCondition"/>
          </field>
        </type>
        <type type="struct" name="SelectQuery">
          <field type="ident" def="SelectDeleteCommonQuery" name=""/>
          <field type="slice" name="ColumnNames">
            <elmtype type="pointer">
              <type type="ident" def="Value"/>
            </elmtype>
          </field>
          <field type="pointer" name="groupByClause">
            <type type="ident" def="GroupByClause"/>
          </field>
          <field type="pointer" name="IntoClause">
            <type type="ident" def="IntoClause"/>
          </field>
          <field type="ident" def="int" name="Limit"/>
          <field type="ident" def="bool" name="Ascending"/>
          <field type="ident" def="bool" name="Explain"/>
        </type>
        <type name="ListType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ListQuery">
          <field type="ident" def="ListType" name="Type"/>
          <field type="pointer" name="value">
            <type type="ident" def="Value"/>
          </field>
          <field type="ident" def="bool" name="IncludeSpaces"/>
        </type>
        <type type="struct" name="DropQuery">
          <field type="ident" def="int" name="Id"/>
        </type>
        <type type="struct" name="DropSeriesQuery">
          <field type="ident" def="string" name="tableName"/>
        </type>
        <type type="struct" name="DeleteQuery">
          <field type="ident" def="SelectDeleteCommonQuery" name=""/>
        </type>
        <type type="struct" name="Query">
          <field type="pointer" name="SelectQuery">
            <type type="ident" def="SelectQuery"/>
          </field>
          <field type="pointer" name="DeleteQuery">
            <type type="ident" def="DeleteQuery"/>
          </field>
          <field type="pointer" name="ListQuery">
            <type type="ident" def="ListQuery"/>
          </field>
          <field type="pointer" name="DropSeriesQuery">
            <type type="ident" def="DropSeriesQuery"/>
          </field>
          <field type="pointer" name="DropQuery">
            <type type="ident" def="DropQuery"/>
          </field>
          <field type="ident" def="QueryType" name="qType"/>
        </type>
        <type type="struct" name="GroupByClause">
          <field type="ident" def="bool" name="FillWithZero"/>
          <field type="pointer" name="FillValue">
            <type type="ident" def="Value"/>
          </field>
          <field type="slice" name="Elems">
            <elmtype type="pointer">
              <type type="ident" def="Value"/>
            </elmtype>
          </field>
        </type>
        <type name="FromClauseType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="TableName">
          <field type="pointer" name="Name">
            <type type="ident" def="Value"/>
          </field>
          <field type="ident" def="string" name="Alias"/>
        </type>
        <type type="struct" name="FromClause">
          <field type="ident" def="FromClauseType" name="Type"/>
          <field type="slice" name="Names">
            <elmtype type="pointer">
              <type type="ident" def="TableName"/>
            </elmtype>
          </field>
          <field type="pointer" name="Regex">
            <type type="selector">
              <prefix value="regexp"/>
              <item value="Regexp"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="GetBoolExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLeftWhereCondition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="ident" def="Values"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsFunctionCall">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCompiledRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RewriteMergeQuery">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
            <type type="ident" def="RegexMatcher"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="QueryType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewQuerySpec">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </resultsList>
        </function>
        <function name="AllShardsQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Database">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="User">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="common"/>
              <item value="User"/>
            </type>
          </resultsList>
        </function>
        <function name="DeleteQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteQuery"/>
            </type>
          </resultsList>
        </function>
        <function name="TableNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TableNamesAndRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="SeriesValuesAndColumns">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="pointer">
                <type type="ident" def="Value"/>
              </keytype>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFromClause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FromClause"/>
            </type>
          </resultsList>
        </function>
        <function name="GetGroupByInterval">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetGroupByColumnCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="IsRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasReadAccess">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsSinglePointQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsExplainQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SelectQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </resultsList>
        </function>
        <function name="IsListSeriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDeleteFromSeriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetQueryString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQueryStringWithTimeCondition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsDropSeriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="IsAscending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ReadsFromMultipleSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsDestructiveQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasAggregates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QuerySpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="PrettyPrint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WillReturnSingleSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectDeleteCommonQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTableAliases">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectDeleteCommonQuery"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ContainsArithmeticOperators">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasAggregates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetReferencedColumns">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="pointer">
                <type type="ident" def="Value"/>
              </keytype>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetResultColumns">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="pointer">
                <type type="ident" def="Value"/>
              </keytype>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BasicQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="IsStartTimeSpecified">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BasicQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BasicQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTableName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DropSeriesQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IntoClause"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="QueryType"/>
          </resultsList>
        </function>
        <function name="GetQueryString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQueryStringWithTimeCondition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsListQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsExplainQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetListSeriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ListQuery"/>
            </type>
          </resultsList>
        </function>
        <function name="IsListSeriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsListContinuousQueriesQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="HasRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsCaseSensitive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetQueryString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteQuery"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Value"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="IsExplainQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetQueryString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQueryStringWithTimeCondition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQueryStringWithTimes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQueryStringWithTimesAndNoIntoClause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsSinglePointQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSinglePointQuerySequenceNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsValidContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsNonRecursiveContinuousQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetIntoClause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IntoClause"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFromClause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectDeleteCommonQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FromClause"/>
            </type>
          </resultsList>
        </function>
        <function name="GetGroupByClause">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="groupby_clause"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupByClause"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetValueArray">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="value_array"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Value"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetStringArray">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="array"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Value"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetTableName">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="table_name"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TableName"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetTableNameArray">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="table_name_array"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TableName"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetFromClause">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="from_clause"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FromClause"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetIntoClause">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="into_clause"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IntoClause"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetWhereCondition">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="condition"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetWhereCondition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectDeleteCommonQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWhereConditionWithTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectDeleteCommonQuery"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="WhereCondition"/>
            </type>
          </resultsList>
        </function>
        <function name="GetGroupByClause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupByClause"/>
            </type>
          </resultsList>
        </function>
        <function name="ParseSelectQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SelectQuery"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Query"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetGroupByTime">
          <recvList>
            <type type="ident" def="GroupByClause"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupByClause"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TableName"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAliasString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TableName"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FromClause"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ValueRegex"/>
        <name value="ValueInt"/>
        <name value="ValueBool"/>
        <name value="ValueFloat"/>
        <name value="ValueString"/>
        <name value="ValueIntoName"/>
        <name value="ValueTableName"/>
        <name value="ValueSimpleName"/>
        <name value="ValueDuration"/>
        <name value="ValueWildcard"/>
        <name value="ValueFunctionCall"/>
        <name value="ValueExpression"/>
        <name value="Select"/>
        <name value="Delete"/>
        <name value="DropContinuousQuery"/>
        <name value="ListSeries"/>
        <name value="ListContinuousQueries"/>
        <name value="DropSeries"/>
        <name value="Continuous"/>
        <name value="Series"/>
        <name value="ContinuousQueries"/>
        <name value="SeriesWithRegex"/>
        <name value="FromClauseArray"/>
        <name value="FromClauseMerge"/>
        <name value="FromClauseInnerJoin"/>
        <name value="FromClauseMergeRegex"/>
      </names>
    </package>
    <package importpath="github.com/influxdb/influxdb/statik">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/metastore">
      <types>
        <type type="struct" name="Store">
          <field type="selector" name="fieldsLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="StringsToIds">
            <keytype type="ident" def="string"/>
            <valtype type="map">
              <keytype type="ident" def="string"/>
              <valtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="uint64"/>
              </valtype>
            </valtype>
          </field>
          <field type="ident" def="uint64" name="LastIdUsed"/>
          <field type="ident" def="ClusterConsensus" name="clusterConsensus"/>
        </type>
        <type type="struct" name="Field">
          <field type="ident" def="uint64" name="Id"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type name="ClusterConsensus" type="interface">
          <method name="GetOrSetFieldIdsForSeries">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="Series"/>
                  </type>
                </elmtype>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewStore">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </resultsList>
        </function>
        <function name="NewStoreFromJson">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ToJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateFromSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetClusterConsensus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ClusterConsensus"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ReplaceFieldNamesWithFieldIds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetOrSetFieldIds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetSeriesForDatabaseAndRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="regexp"/>
                <item value="Regexp"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSeriesForDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFieldsForDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFieldsForSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="DropSeries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DropDatabase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Store"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/influxdb/influxdb/engine">
      <types>
        <type type="struct" name="Trie">
          <field type="ident" def="int" name="numLevels"/>
          <field type="ident" def="int" name="numStates"/>
          <field type="pointer" name="rootNode">
            <type type="ident" def="Node"/>
          </field>
        </type>
        <type name="Nodes" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Node"/>
          </elmtype>
        </type>
        <type type="struct" name="Node">
          <field type="ident" def="bool" name="isLeaf"/>
          <field type="pointer" name="value">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="slice" name="states">
            <elmtype type="interface"/>
          </field>
          <field type="ident" def="Nodes" name="childNodes"/>
        </type>
        <type name="StreamQuery" type="interface">
          <method name="HasPoint">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Next">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </resultsList>
          </method>
          <method name="Closed">
            <paramsList/>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
        </type>
        <type name="StreamUpdate" type="interface">
          <method name="Close">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="Yield">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Stream">
          <field type="pointer" name="s">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Series"/>
            </type>
          </field>
          <field type="ident" def="bool" name="closed"/>
        </type>
        <type type="struct" name="Value">
          <field type="ident" def="int" name="streamId"/>
          <field type="pointer" name="s">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Series"/>
            </type>
          </field>
        </type>
        <type type="struct" name="MinValueSlice">
          <field type="slice" name="values">
            <elmtype type="ident" def="Value"/>
          </field>
        </type>
        <type type="struct" name="MaxValueSlice">
          <field type="pointer" name="">
            <type type="ident" def="MinValueSlice"/>
          </field>
        </type>
        <type type="struct" name="SeriesHeap">
          <field type="ident" def="bool" name="Ascending"/>
          <field type="pointer" name="values">
            <type type="ident" def="MinValueSlice"/>
          </field>
        </type>
        <type name="Processor" type="interface">
          <method name="Yield">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Close">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="PointRange">
          <field type="ident" def="int64" name="startTime"/>
          <field type="ident" def="int64" name="endTime"/>
        </type>
        <type type="struct" name="Passthrough">
          <field type="ident" def="Processor" name="next"/>
          <field type="pointer" name="series">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Series"/>
            </type>
          </field>
          <field type="ident" def="int" name="maxPointsInResponse"/>
          <field type="pointer" name="limiter">
            <type type="ident" def="Limiter"/>
          </field>
          <field type="ident" def="float64" name="runStartTime"/>
          <field type="ident" def="float64" name="runEndTime"/>
          <field type="ident" def="int64" name="pointsRead"/>
          <field type="ident" def="int64" name="pointsWritten"/>
          <field type="ident" def="int" name="shardId"/>
          <field type="ident" def="bool" name="shardLocal"/>
        </type>
        <type type="struct" name="Merger">
          <field type="ident" def="string" name="name"/>
          <field type="slice" name="s">
            <elmtype type="ident" def="StreamQuery"/>
          </field>
          <field type="ident" def="int" name="size"/>
          <field type="ident" def="SeriesHeap" name="h"/>
          <field type="ident" def="Processor" name="n"/>
          <field type="ident" def="int" name="lastStreamIdx"/>
          <field type="ident" def="bool" name="initializing"/>
          <field type="ident" def="bool" name="mergeColumns"/>
          <field type="map" name="fields">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="slice" name="resultFields">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="resultFieldsPerStream">
            <keytype type="ident" def="int"/>
            <valtype type="slice">
              <elmtype type="ident" def="int"/>
            </valtype>
          </field>
        </type>
        <type type="struct" name="MergeEngine">
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="Processor" name="next"/>
        </type>
        <type type="struct" name="Limiter">
          <field type="ident" def="bool" name="shouldLimit"/>
          <field type="ident" def="int" name="limit"/>
          <field type="map" name="limits">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
        </type>
        <type type="struct" name="JoinEngine">
          <field type="pointer" name="query">
            <type type="selector">
              <prefix value="parser"/>
              <item value="SelectQuery"/>
            </type>
          </field>
          <field type="ident" def="Processor" name="next"/>
          <field type="ident" def="string" name="table1"/>
          <field type="ident" def="string" name="table2"/>
          <field type="ident" def="string" name="name"/>
          <field type="pointer" name="lastPoint1">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
          <field type="pointer" name="lastPoint2">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
          <field type="slice" name="lastFields1">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="lastFields2">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="FilteringEngine">
          <field type="pointer" name="query">
            <type type="selector">
              <prefix value="parser"/>
              <item value="SelectQuery"/>
            </type>
          </field>
          <field type="ident" def="Processor" name="processor"/>
          <field type="ident" def="bool" name="shouldFilter"/>
        </type>
        <type type="struct" name="CommonMergeEngine">
          <field type="pointer" name="merger">
            <type type="ident" def="Merger"/>
          </field>
          <field type="map" name="streams">
            <keytype type="ident" def="uint32"/>
            <valtype type="ident" def="StreamUpdate"/>
          </field>
          <field type="ident" def="Processor" name="next"/>
        </type>
        <type name="OperatorResult" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="BooleanOperation" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="FieldValue"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type name="ArithmeticOperator" type="func">
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="Value"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="ArithmeticEngine">
          <field type="ident" def="Processor" name="next"/>
          <field type="map" name="names">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </valtype>
          </field>
        </type>
        <type name="PointSlice" type="slice">
          <elmtype type="selector">
            <prefix value="protocol"/>
            <item value="Point"/>
          </elmtype>
        </type>
        <type name="Aggregator" type="interface">
          <method name="AggregatePoint">
            <paramsList>
              <type type="interface"/>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Point"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="interface"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="InitializeFieldsMetadata">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="Series"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="GetValues">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="slice">
                  <elmtype type="pointer">
                    <type type="selector">
                      <prefix value="protocol"/>
                      <item value="FieldValue"/>
                    </type>
                  </elmtype>
                </elmtype>
              </type>
            </resultsList>
          </method>
          <method name="CalculateSummaries">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="ColumnNames">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="AggregatorInitializer" type="func">
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="AbstractAggregator">
          <field type="ident" def="Aggregator" name=""/>
          <field type="pointer" name="value">
            <type type="selector">
              <prefix value="parser"/>
              <item value="Value"/>
            </type>
          </field>
          <field type="slice" name="columns">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="Operation" type="func">
          <paramsList>
            <type type="ident" def="float64"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </type>
        <type name="CumulativeArithmeticAggregatorState" type="ident">
          <type type="ident" def="float64"/>
        </type>
        <type type="struct" name="CumulativeArithmeticAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="Operation" name="operation"/>
          <field type="ident" def="float64" name="initialValue"/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
        </type>
        <type type="struct" name="CompositeAggregatorState">
          <field type="interface" name="rightState"/>
          <field type="interface" name="leftState"/>
        </type>
        <type type="struct" name="CompositeAggregator">
          <field type="ident" def="Aggregator" name="left"/>
          <field type="ident" def="Aggregator" name="right"/>
        </type>
        <type type="struct" name="StandardDeviationRunning">
          <field type="ident" def="int" name="count"/>
          <field type="ident" def="float64" name="totalX2"/>
          <field type="ident" def="float64" name="totalX"/>
        </type>
        <type type="struct" name="StandardDeviationAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type type="struct" name="DerivativeAggregatorState">
          <field type="pointer" name="firstValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
          <field type="pointer" name="lastValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
        </type>
        <type type="struct" name="DerivativeAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="duration">
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </field>
          <field type="pointer" name="lastState">
            <type type="ident" def="DerivativeAggregatorState"/>
          </field>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type type="struct" name="DifferenceAggregatorState">
          <field type="pointer" name="firstValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
          <field type="pointer" name="lastValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="Point"/>
            </type>
          </field>
        </type>
        <type type="struct" name="DifferenceAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type name="HistogramAggregatorState" type="map">
          <keytype type="ident" def="int"/>
          <valtype type="ident" def="int"/>
        </type>
        <type type="struct" name="HistogramAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="ident" def="float64" name="bucketSize"/>
          <field type="ident" def="float64" name="bucketStart"/>
          <field type="ident" def="bool" name="explicitBucketStart"/>
          <field type="ident" def="int" name="bucketStopIdx"/>
          <field type="slice" name="columnNames">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
        </type>
        <type type="struct" name="CountAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type name="CountAggregatorState" type="ident">
          <type type="ident" def="int64"/>
        </type>
        <type type="struct" name="MeanAggregatorState">
          <field type="ident" def="float64" name="mean"/>
          <field type="ident" def="float64" name="count"/>
        </type>
        <type type="struct" name="MeanAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type type="struct" name="PercentileAggregatorState">
          <field type="slice" name="values">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="ident" def="float64" name="percentileValue"/>
        </type>
        <type type="struct" name="PercentileAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="ident" def="string" name="functionName"/>
          <field type="ident" def="float64" name="percentile"/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type type="struct" name="ModeAggregatorState">
          <field type="map" name="counts">
            <keytype type="interface"/>
            <valtype type="ident" def="int"/>
          </field>
        </type>
        <type type="struct" name="ModeAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
          <field type="ident" def="int" name="size"/>
        </type>
        <type type="struct" name="DistinctAggregatorState">
          <field type="map" name="counts">
            <keytype type="interface"/>
            <valtype type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="DistinctAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
        </type>
        <type name="FirstOrLastAggregatorState" type="pointer">
          <type type="pointer">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </type>
        </type>
        <type type="struct" name="FirstOrLastAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="bool" name="isFirst"/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
        </type>
        <type type="struct" name="ByPointColumnDesc">
          <field type="selector" name="">
            <prefix value="protocol"/>
            <item value="PointsCollection"/>
          </field>
        </type>
        <type type="struct" name="ByPointColumnAsc">
          <field type="selector" name="">
            <prefix value="protocol"/>
            <item value="PointsCollection"/>
          </field>
        </type>
        <type type="struct" name="TopOrBottomAggregatorState">
          <field type="selector" name="values">
            <prefix value="protocol"/>
            <item value="PointsCollection"/>
          </field>
          <field type="ident" def="int64" name="counter"/>
        </type>
        <type type="struct" name="TopOrBottomAggregator">
          <field type="ident" def="AbstractAggregator" name=""/>
          <field type="ident" def="string" name="name"/>
          <field type="ident" def="bool" name="isTop"/>
          <field type="pointer" name="defaultValue">
            <type type="selector">
              <prefix value="protocol"/>
              <item value="FieldValue"/>
            </type>
          </field>
          <field type="ident" def="string" name="alias"/>
          <field type="ident" def="int64" name="limit"/>
          <field type="ident" def="string" name="target"/>
        </type>
        <type type="struct" name="SeriesState">
          <field type="ident" def="bool" name="started"/>
          <field type="pointer" name="trie">
            <type type="ident" def="Trie"/>
          </field>
          <field type="pointer" name="pointsRange">
            <type type="ident" def="PointRange"/>
          </field>
          <field type="ident" def="int64" name="lastTimestamp"/>
        </type>
        <type type="struct" name="AggregatorEngine">
          <field type="ident" def="bool" name="ascending"/>
          <field type="slice" name="fields">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="isFillQuery"/>
          <field type="ident" def="bool" name="startTimeSpecified"/>
          <field type="ident" def="int64" name="startTime"/>
          <field type="ident" def="int64" name="endTime"/>
          <field type="ident" def="Processor" name="next"/>
          <field type="slice" name="aggregators">
            <elmtype type="ident" def="Aggregator"/>
          </field>
          <field type="slice" name="elems">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </elmtype>
          </field>
          <field type="pointer" name="duration">
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </field>
          <field type="ident" def="bool" name="irregularInterval"/>
          <field type="map" name="seriesStates">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="SeriesState"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewTrie">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </resultsList>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CountLeafNodes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Traverse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="slice">
                  <elmtype type="pointer">
                    <type type="selector">
                      <prefix value="protocol"/>
                      <item value="FieldValue"/>
                    </type>
                  </elmtype>
                </type>
                <type type="pointer">
                  <type type="ident" def="Node"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TraverseLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="func">
              <paramsList>
                <type type="slice">
                  <elmtype type="pointer">
                    <type type="selector">
                      <prefix value="protocol"/>
                      <item value="FieldValue"/>
                    </type>
                  </elmtype>
                </type>
                <type type="pointer">
                  <type type="ident" def="Node"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetNode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="FieldValue"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </resultsList>
        </function>
        <function name="CountLeafNodes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetChildNode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </resultsList>
        </function>
        <function name="NewStream">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HasPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Closed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Stream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinValueSlice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinValueSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinValueSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinValueSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinValueSlice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="MaxValueSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewSeriesHeap">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="SeriesHeap"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="ident" def="SeriesHeap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="SeriesHeap"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Next">
          <recvList>
            <type type="ident" def="SeriesHeap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="UpdateRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PointRange"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewPassthroughEngine">
          <recvList/>
          <paramsList>
            <type type="ident" def="Processor"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Passthrough"/>
            </type>
          </resultsList>
        </function>
        <function name="NewPassthroughEngineWithLimit">
          <recvList/>
          <paramsList>
            <type type="ident" def="Processor"/>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Passthrough"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Passthrough"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Passthrough"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Passthrough"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewCME">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="StreamQuery"/>
            </type>
            <type type="ident" def="SeriesHeap"/>
            <type type="ident" def="Processor"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Merger"/>
            </type>
          </resultsList>
        </function>
        <function name="Update">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Merger"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMergeEngine">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Processor"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergeEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewLimiter">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Limiter"/>
            </type>
          </resultsList>
        </function>
        <function name="NewJoinEngine">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Processor"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Filter">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFilteringEngine">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FilteringEngine"/>
            </type>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FilteringEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="p"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FilteringEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FilteringEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewQueryEngine">
          <recvList/>
          <paramsList>
            <type type="ident" def="Processor"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Processor"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCommonMergeEngine">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CommonMergeEngine"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonMergeEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonMergeEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommonMergeEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EqualityOperator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegexMatcherOperator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GreaterThanOrEqualOperator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GreaterThanOperator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InOperator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="protocol"/>
                  <item value="FieldValue"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="OperatorResult"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PlusOperator">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="Value"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MinusOperator">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="Value"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MultiplyOperator">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="Value"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DivideOperator">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="parser"/>
                  <item value="Value"/>
                </type>
              </elmtype>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="FieldValue"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewArithmeticEngine">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ArithmeticEngine"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ArithmeticEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ArithmeticEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ArithmeticEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetRegisteredAggregators">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="InitializeFieldsMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AbstractAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CalculateSummaries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AbstractAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CumulativeArithmeticAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CumulativeArithmeticAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CumulativeArithmeticAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewCumulativeArithmeticAggregator">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="ident" def="float64"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="ident" def="Operation"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMaxAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMinAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSumAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="CalculateSummaries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="InitializeFieldsMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCompositeAggregator">
          <recvList/>
          <paramsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="Aggregator"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StandardDeviationAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StandardDeviationAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StandardDeviationAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewStandardDeviationAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DerivativeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DerivativeAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DerivativeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewDerivativeAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DifferenceAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DifferenceAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DifferenceAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewDifferenceAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HistogramAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewHistogramAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CountAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CountAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CountAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="InitializeFieldsMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CountAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCountAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MeanAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MeanAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MeanAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewMeanAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMedianAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PercentileAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PercentileAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PercentileAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="CalculateSummaries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PercentileAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewPercentileAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModeAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModeAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewModeAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DistinctAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DistinctAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DistinctAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewDistinctAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FirstOrLastAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FirstOrLastAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FirstOrLastAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="NewFirstOrLastAggregator">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFirstAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLastAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByPointColumnDesc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="ByPointColumnAsc"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AggregatePoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TopOrBottomAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Point"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ColumnNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TopOrBottomAggregator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValues">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TopOrBottomAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="pointer">
                  <type type="selector">
                    <prefix value="protocol"/>
                    <item value="FieldValue"/>
                  </type>
                </elmtype>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="InitializeFieldsMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TopOrBottomAggregator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTopOrBottomAggregator">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewTopAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewBottomAggregator">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="Value"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Aggregator"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregatorEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregatorEngine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Yield">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AggregatorEngine"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="protocol"/>
                <item value="Series"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAggregatorEngine">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="parser"/>
                <item value="SelectQuery"/>
              </type>
            </type>
            <type type="ident" def="Processor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AggregatorEngine"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MaxInt"/>
        <name value="MATCH"/>
        <name value="NO_MATCH"/>
        <name value="INVALID"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="math"/>
    <import path="os"/>
    <import path="path"/>
    <import path="sort"/>
    <import path="strings"/>
    <import path="code.google.com/p/goprotobuf/proto"/>
    <import path="code.google.com/p/log4go"/>
    <import path="github.com/influxdb/influxdb/configuration"/>
    <import path="github.com/influxdb/influxdb/protocol"/>
    <import path="github.com/influxdb/influxdb/common"/>
    <import path="io"/>
    <import path="strconv"/>
    <import path="io/ioutil"/>
    <import path="bufio"/>
    <import path="encoding/gob"/>
    <import path="encoding/binary"/>
    <import path="crypto/rand"/>
    <import path="crypto/tls"/>
    <import path="flag"/>
    <import path="math/rand"/>
    <import path="net"/>
    <import path="net/http"/>
    <import path="runtime"/>
    <import path="sync"/>
    <import path="time"/>
    <import path="github.com/BurntSushi/toml"/>
    <import path="github.com/influxdb/influxdb/client"/>
    <import path="bytes"/>
    <import path="os/exec"/>
    <import path="github.com/influxdb/influxdb/datastore/storage"/>
    <import path="github.com/rakyll/statik/fs"/>
    <import path="github.com/influxdb/influxdb/admin"/>
    <import path="github.com/influxdb/influxdb/api/collectd"/>
    <import path="github.com/influxdb/influxdb/api/graphite"/>
    <import path="github.com/influxdb/influxdb/api/http"/>
    <import path="github.com/influxdb/influxdb/api/udp"/>
    <import path="github.com/influxdb/influxdb/cluster"/>
    <import path="github.com/influxdb/influxdb/coordinator"/>
    <import path="github.com/influxdb/influxdb/datastore"/>
    <import path="github.com/influxdb/influxdb/metastore"/>
    <import path="github.com/influxdb/influxdb/wal"/>
    <import path="C"/>
    <import path="regexp"/>
    <import path="reflect"/>
    <import path="unsafe"/>
    <import path="encoding/json"/>
    <import path="net/url"/>
    <import path="path/filepath"/>
    <import path="launchpad.net/gocheck"/>
    <import path="container/heap"/>
    <import path="github.com/influxdb/influxdb/parser"/>
    <import path="errors"/>
    <import path="log/syslog"/>
    <import path="os/signal"/>
    <import path="runtime/pprof"/>
    <import path="syscall"/>
    <import path="github.com/influxdb/influxdb/server"/>
    <import path="github.com/jmhodges/levigo"/>
    <import path="github.com/gorilla/mux"/>
    <import path="github.com/influxdb/influxdb/_vendor/raft"/>
    <import path="sync/atomic"/>
    <import path="github.com/influxdb/influxdb/engine"/>
    <import path="math/big"/>
    <import path="code.google.com/p/go.crypto/bcrypt"/>
    <import path="github.com/influxdb/go-cache"/>
    <import path="crypto/sha1"/>
    <import path="github.com/influxdb/influxdb/api"/>
    <import path="net/http/pprof"/>
    <import path="compress/gzip"/>
    <import path="compress/zlib"/>
    <import path="encoding/base64"/>
    <import path="github.com/bmizerany/pat"/>
    <import path="github.com/kimor79/gollectd"/>
    <import path="github.com/influxdb/influxdb/statik"/>
  </imports>
</project>
