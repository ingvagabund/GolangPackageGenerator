<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-syndtr-gocapability-0-0.11.git8e4cdcb.fc24">
  <packages>
    <package importpath="github.com/syndtr/gocapability/capability">
      <types>
        <type name="CapType" type="ident">
          <type type="ident" def="uint"/>
        </type>
        <type name="Cap" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Capabilities" type="interface">
          <method name="Get">
            <paramsList>
              <type type="ident" def="CapType"/>
              <type type="ident" def="Cap"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Empty">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Full">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Set">
            <paramsList>
              <type type="ident" def="CapType"/>
              <type type="ellipsis">
                <type type="ident" def="Cap"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Unset">
            <paramsList>
              <type type="ident" def="CapType"/>
              <type type="ellipsis">
                <type type="ident" def="Cap"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Fill">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Clear">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="StringCap">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Load">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Apply">
            <paramsList>
              <type type="ident" def="CapType"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="CapType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Cap"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ident" def="Cap"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Full">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Unset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StringCap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV1"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ident" def="Cap"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Full">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Unset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StringCap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsV3"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ident" def="Cap"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Full">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Unset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
            <type type="ellipsis">
              <type type="ident" def="Cap"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fill">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StringCap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Apply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="capsFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="CapType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPid">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Capabilities"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Capabilities"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="EFFECTIVE"/>
        <name value="PERMITTED"/>
        <name value="INHERITABLE"/>
        <name value="BOUNDING"/>
        <name value="CAPS"/>
        <name value="BOUNDS"/>
        <name value="CAP_CHOWN"/>
        <name value="CAP_DAC_OVERRIDE"/>
        <name value="CAP_DAC_READ_SEARCH"/>
        <name value="CAP_FOWNER"/>
        <name value="CAP_FSETID"/>
        <name value="CAP_KILL"/>
        <name value="CAP_SETGID"/>
        <name value="CAP_SETUID"/>
        <name value="CAP_SETPCAP"/>
        <name value="CAP_LINUX_IMMUTABLE"/>
        <name value="CAP_NET_BIND_SERVICE"/>
        <name value="CAP_NET_BROADCAST"/>
        <name value="CAP_NET_ADMIN"/>
        <name value="CAP_NET_RAW"/>
        <name value="CAP_IPC_LOCK"/>
        <name value="CAP_IPC_OWNER"/>
        <name value="CAP_SYS_MODULE"/>
        <name value="CAP_SYS_RAWIO"/>
        <name value="CAP_SYS_CHROOT"/>
        <name value="CAP_SYS_PTRACE"/>
        <name value="CAP_SYS_PACCT"/>
        <name value="CAP_SYS_ADMIN"/>
        <name value="CAP_SYS_BOOT"/>
        <name value="CAP_SYS_NICE"/>
        <name value="CAP_SYS_RESOURCE"/>
        <name value="CAP_SYS_TIME"/>
        <name value="CAP_SYS_TTY_CONFIG"/>
        <name value="CAP_MKNOD"/>
        <name value="CAP_LEASE"/>
        <name value="CAP_AUDIT_WRITE"/>
        <name value="CAP_AUDIT_CONTROL"/>
        <name value="CAP_SETFCAP"/>
        <name value="CAP_MAC_OVERRIDE"/>
        <name value="CAP_MAC_ADMIN"/>
        <name value="CAP_SYSLOG"/>
        <name value="CAP_WAKE_ALARM"/>
        <name value="CAP_BLOCK_SUSPEND"/>
        <name value="CAP_AUDIT_READ"/>
        <name value="CAP_LAST_CAP"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="syscall"/>
    <import path="unsafe"/>
    <import path="errors"/>
    <import path="bufio"/>
    <import path="fmt"/>
    <import path="io"/>
    <import path="os"/>
    <import path="strings"/>
  </imports>
</project>
