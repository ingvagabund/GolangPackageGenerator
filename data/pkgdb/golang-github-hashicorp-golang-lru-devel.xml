<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-hashicorp-golang-lru-0-0.2.gitd85392d.fc24">
  <packages>
    <package importpath="github.com/hashicorp/golang-lru">
      <types>
        <type type="struct" name="Cache">
          <field type="ident" def="int" name="size"/>
          <field type="pointer" name="evictList">
            <type type="selector">
              <prefix value="list"/>
              <item value="List"/>
            </type>
          </field>
          <field type="map" name="items">
            <keytype type="interface"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="list"/>
                <item value="Element"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="func" name="onEvicted">
            <paramsList>
              <type type="interface"/>
              <type type="interface"/>
            </paramsList>
            <resultsList/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewWithEvict">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="func">
              <paramsList>
                <type type="interface"/>
                <type type="interface"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Purge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveOldest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Keys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cache"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="container/list"/>
    <import path="errors"/>
    <import path="sync"/>
  </imports>
</project>
