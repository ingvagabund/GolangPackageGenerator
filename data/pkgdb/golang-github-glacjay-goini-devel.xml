<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-glacjay-goini-0-0.3.git5261baf.fc24">
  <packages>
    <package importpath="github.com/rakyll/goini">
      <types>
        <type name="Dict" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="map">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </valtype>
        </type>
        <type name="Error" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Load">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dict"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Dict"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetBool">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetBool">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetString">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetString">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetInt">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetInt">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetDouble">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetDouble">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetSections">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/glacjay/goini">
      <types>
        <type name="Dict" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="map">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </valtype>
        </type>
        <type name="Error" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="MustLoadReader">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dict"/>
          </resultsList>
        </function>
        <function name="MustLoad">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dict"/>
          </resultsList>
        </function>
        <function name="LoadReader">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dict"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dict"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Dict"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="Error"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetBool">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetBool">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetString">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetString">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetInt">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetInt">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetDouble">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="float64"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetDouble">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Delete">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetSections">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Dict"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="bufio"/>
    <import path="bytes"/>
    <import path="fmt"/>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="regexp"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="unicode"/>
  </imports>
</project>
