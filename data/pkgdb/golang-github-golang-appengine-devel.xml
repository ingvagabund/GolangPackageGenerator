<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-golang-appengine-0-0.3.git1c3fdc5.fc24">
  <packages>
    <package importpath="google.golang.org/appengine/file">
      <types/>
      <functions>
        <function name="DefaultBucketName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/search">
      <types>
        <type type="struct" name="ErrFieldMismatch">
          <field type="ident" def="string" name="FieldName"/>
          <field type="ident" def="string" name="Reason"/>
        </type>
        <type name="Atom" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type name="HTML" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="Index">
          <field type="selector" name="spec">
            <prefix value="pb"/>
            <item value="IndexSpec"/>
          </field>
        </type>
        <type type="struct" name="ListOptions">
          <field type="ident" def="string" name="StartID"/>
          <field type="ident" def="int" name="Limit"/>
          <field type="ident" def="bool" name="IDsOnly"/>
        </type>
        <type type="struct" name="SearchOptions">
          <field type="ident" def="int" name="Limit"/>
          <field type="ident" def="bool" name="IDsOnly"/>
          <field type="pointer" name="Sort">
            <type type="ident" def="SortOptions"/>
          </field>
          <field type="slice" name="Fields">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Expressions">
            <elmtype type="ident" def="FieldExpression"/>
          </field>
        </type>
        <type type="struct" name="FieldExpression">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Expr"/>
        </type>
        <type type="struct" name="SortOptions">
          <field type="slice" name="Expressions">
            <elmtype type="ident" def="SortExpression"/>
          </field>
          <field type="ident" def="Scorer" name="Scorer"/>
          <field type="ident" def="int" name="Limit"/>
        </type>
        <type type="struct" name="SortExpression">
          <field type="ident" def="string" name="Expr"/>
          <field type="ident" def="bool" name="Reverse"/>
          <field type="interface" name="Default"/>
        </type>
        <type name="Scorer" type="interface">
          <method name="toProto">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="pb"/>
                  <item value="ScorerSpec"/>
                </type>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Iterator">
          <field type="selector" name="c">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="pointer" name="index">
            <type type="ident" def="Index"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="slice" name="listRes">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="pb"/>
                <item value="Document"/>
              </type>
            </elmtype>
          </field>
          <field type="ident" def="string" name="listStartID"/>
          <field type="ident" def="bool" name="listInclusive"/>
          <field type="slice" name="searchRes">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="pb"/>
                <item value="SearchResult"/>
              </type>
            </elmtype>
          </field>
          <field type="ident" def="string" name="searchQuery"/>
          <field type="pointer" name="searchCursor">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="sort">
            <type type="ident" def="SortOptions"/>
          </field>
          <field type="slice" name="fields">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="exprs">
            <elmtype type="ident" def="FieldExpression"/>
          </field>
          <field type="func" name="more">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Iterator"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="ident" def="int" name="count"/>
          <field type="ident" def="int" name="limit"/>
          <field type="ident" def="bool" name="idsOnly"/>
        </type>
        <type type="struct" name="Field">
          <field type="ident" def="string" name="Name"/>
          <field type="interface" name="Value"/>
          <field type="ident" def="string" name="Language"/>
          <field type="ident" def="bool" name="Derived"/>
        </type>
        <type type="struct" name="DocumentMetadata">
          <field type="ident" def="int" name="Rank"/>
        </type>
        <type name="FieldLoadSaver" type="interface">
          <method name="Load">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="Field"/>
              </type>
              <type type="pointer">
                <type type="ident" def="DocumentMetadata"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Save">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Field"/>
              </type>
              <type type="pointer">
                <type type="ident" def="DocumentMetadata"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="FieldList" type="slice">
          <elmtype type="ident" def="Field"/>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrFieldMismatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Open">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="List">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ListOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </resultsList>
        </function>
        <function name="Search">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="SearchOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </resultsList>
        </function>
        <function name="Count">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
            <type type="pointer">
              <type type="ident" def="DocumentMetadata"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
            <type type="pointer">
              <type type="ident" def="DocumentMetadata"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="ident" def="structFLS"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
            <type type="pointer">
              <type type="ident" def="DocumentMetadata"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="ident" def="structFLS"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
            <type type="pointer">
              <type type="ident" def="DocumentMetadata"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Field"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrInvalidDocumentType"/>
        <name value="ErrNoSuchDocument"/>
        <name value="MatchScorer"/>
        <name value="RescoringMatchScorer"/>
        <name value="Done"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/channel">
      <types>
        <type name="ChannelServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="ChannelServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateChannelRequest">
          <field type="pointer" name="ApplicationKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DurationMinutes">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateChannelResponse">
          <field type="pointer" name="Token">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DurationMinutes">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SendMessageRequest">
          <field type="pointer" name="ApplicationKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Message">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ChannelServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ChannelServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ChannelServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChannelServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChannelServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ChannelServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetApplicationKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDurationMinutes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDurationMinutes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateChannelResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SendMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SendMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetApplicationKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SendMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SendMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ChannelServiceError_OK"/>
        <name value="ChannelServiceError_INTERNAL_ERROR"/>
        <name value="ChannelServiceError_INVALID_CHANNEL_KEY"/>
        <name value="ChannelServiceError_BAD_MESSAGE"/>
        <name value="ChannelServiceError_INVALID_CHANNEL_TOKEN_DURATION"/>
        <name value="ChannelServiceError_APPID_ALIAS_REQUIRED"/>
        <name value="ChannelServiceError_ErrorCode_name"/>
        <name value="ChannelServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/module">
      <types/>
      <functions>
        <function name="List">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NumInstances">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetNumInstances">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Versions">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultVersion">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/urlfetch">
      <types>
        <type name="URLFetchServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="URLFetchRequest_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="URLFetchServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchRequest">
          <field type="pointer" name="Method">
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </field>
          <field type="pointer" name="Url">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </elmtype>
          </field>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="FollowRedirects">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deadline">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MustValidateServerCertificate">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchRequest_Header">
          <field type="pointer" name="Key">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchResponse">
          <field type="slice" name="Content">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="StatusCode">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </elmtype>
          </field>
          <field type="pointer" name="ContentWasTruncated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ExternalBytesSent">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ExternalBytesReceived">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="FinalUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ApiCpuMilliseconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ApiBytesSent">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ApiBytesReceived">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="URLFetchResponse_Header">
          <field type="pointer" name="Key">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="URLFetchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLFetchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_RequestMethod"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="URLFetchRequest_RequestMethod"/>
          </resultsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="URLFetchRequest_Header"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFollowRedirects">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetMustValidateServerCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStatusCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="URLFetchResponse_Header"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetContentWasTruncated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetExternalBytesSent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetExternalBytesReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetFinalUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetApiCpuMilliseconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetApiBytesSent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetApiBytesReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="URLFetchResponse_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="URLFetchServiceError_OK"/>
        <name value="URLFetchServiceError_INVALID_URL"/>
        <name value="URLFetchServiceError_FETCH_ERROR"/>
        <name value="URLFetchServiceError_UNSPECIFIED_ERROR"/>
        <name value="URLFetchServiceError_RESPONSE_TOO_LARGE"/>
        <name value="URLFetchServiceError_DEADLINE_EXCEEDED"/>
        <name value="URLFetchServiceError_SSL_CERTIFICATE_ERROR"/>
        <name value="URLFetchServiceError_DNS_ERROR"/>
        <name value="URLFetchServiceError_CLOSED"/>
        <name value="URLFetchServiceError_INTERNAL_TRANSIENT_ERROR"/>
        <name value="URLFetchServiceError_TOO_MANY_REDIRECTS"/>
        <name value="URLFetchServiceError_MALFORMED_REPLY"/>
        <name value="URLFetchServiceError_CONNECTION_ERROR"/>
        <name value="URLFetchServiceError_ErrorCode_name"/>
        <name value="URLFetchServiceError_ErrorCode_value"/>
        <name value="URLFetchRequest_GET"/>
        <name value="URLFetchRequest_POST"/>
        <name value="URLFetchRequest_HEAD"/>
        <name value="URLFetchRequest_PUT"/>
        <name value="URLFetchRequest_DELETE"/>
        <name value="URLFetchRequest_PATCH"/>
        <name value="URLFetchRequest_RequestMethod_name"/>
        <name value="URLFetchRequest_RequestMethod_value"/>
        <name value="Default_URLFetchRequest_FollowRedirects"/>
        <name value="Default_URLFetchRequest_MustValidateServerCertificate"/>
        <name value="Default_URLFetchResponse_ContentWasTruncated"/>
        <name value="Default_URLFetchResponse_ApiCpuMilliseconds"/>
        <name value="Default_URLFetchResponse_ApiBytesSent"/>
        <name value="Default_URLFetchResponse_ApiBytesReceived"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/demos/guestbook">
      <types>
        <type type="struct" name="Greeting">
          <field type="ident" def="string" name="Author"/>
          <field type="ident" def="string" name="Content"/>
          <field type="selector" name="Date">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
      </types>
      <functions/>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/delay">
      <types>
        <type type="struct" name="Function">
          <field type="selector" name="fv">
            <prefix value="reflect"/>
            <item value="Value"/>
          </field>
          <field type="ident" def="string" name="key"/>
          <field type="ident" def="error" name="err"/>
        </type>
      </types>
      <functions>
        <function name="Func">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </resultsList>
        </function>
        <function name="Call">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Task">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Function"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="taskqueue"/>
                <item value="Task"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/modules">
      <types>
        <type name="ModulesServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="ModulesServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetModulesRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetModulesResponse">
          <field type="slice" name="Module">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetVersionsRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetVersionsResponse">
          <field type="slice" name="Version">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultVersionRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultVersionResponse">
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetNumInstancesRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetNumInstancesResponse">
          <field type="pointer" name="Instances">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetNumInstancesRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Instances">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetNumInstancesResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StartModuleRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StartModuleResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StopModuleRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="StopModuleResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetHostnameRequest">
          <field type="pointer" name="Module">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Instance">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetHostnameResponse">
          <field type="pointer" name="Hostname">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ModulesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ModulesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ModulesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetModulesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetVersionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultVersionResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetInstances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInstances">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetNumInstancesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StartModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StopModuleResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInstance">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetHostnameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ModulesServiceError_OK"/>
        <name value="ModulesServiceError_INVALID_MODULE"/>
        <name value="ModulesServiceError_INVALID_VERSION"/>
        <name value="ModulesServiceError_INVALID_INSTANCES"/>
        <name value="ModulesServiceError_TRANSIENT_ERROR"/>
        <name value="ModulesServiceError_UNEXPECTED_STATE"/>
        <name value="ModulesServiceError_ErrorCode_name"/>
        <name value="ModulesServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/urlfetch">
      <types>
        <type type="struct" name="Transport">
          <field type="selector" name="Context">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="selector" name="Deadline">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="AllowInvalidServerCertificate"/>
        </type>
      </types>
      <functions>
        <function name="Client">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bodyReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="bodyReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrTruncatedBody"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/search">
      <types>
        <type name="Scope_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Entry_Permission" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldValue_ContentType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FacetValue_ContentType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Document_Storage" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Consistency" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Source" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexSpec_Mode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="IndexDocumentParams_Freshness" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="ScorerSpec_Scorer" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchParams_CursorType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="SearchParams_ParsingMode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Scope">
          <field type="pointer" name="Type">
            <type type="ident" def="Scope_Type"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Entry">
          <field type="pointer" name="Scope">
            <type type="ident" def="Scope"/>
          </field>
          <field type="pointer" name="Permission">
            <type type="ident" def="Entry_Permission"/>
          </field>
          <field type="pointer" name="DisplayName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AccessControlList">
          <field type="pointer" name="Owner">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Entries">
            <elmtype type="pointer">
              <type type="ident" def="Entry"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldValue">
          <field type="pointer" name="Type">
            <type type="ident" def="FieldValue_ContentType"/>
          </field>
          <field type="pointer" name="Language">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Geo">
            <type type="ident" def="FieldValue_Geo"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldValue_Geo">
          <field type="pointer" name="Lat">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Lng">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Field">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="FieldValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldTypes">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Type">
            <elmtype type="ident" def="FieldValue_ContentType"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetValue">
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Facet">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="FacetValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Document">
          <field type="pointer" name="Id">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Language">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="Field"/>
            </elmtype>
          </field>
          <field type="pointer" name="OrderId">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Storage">
            <type type="ident" def="Document_Storage"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="AccessControlList"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Facet">
            <elmtype type="pointer">
              <type type="ident" def="Facet"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequestStatus">
          <field type="pointer" name="Code">
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </field>
          <field type="pointer" name="ErrorDetail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexSpec">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Consistency">
            <type type="ident" def="IndexSpec_Consistency"/>
          </field>
          <field type="pointer" name="Namespace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="IndexSpec_Mode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexMetadata">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="FieldTypes"/>
            </elmtype>
          </field>
          <field type="pointer" name="Storage">
            <type type="ident" def="IndexMetadata_Storage"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexMetadata_Storage">
          <field type="pointer" name="AmountUsed">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentParams">
          <field type="slice" name="Document">
            <elmtype type="pointer">
              <type type="ident" def="Document"/>
            </elmtype>
          </field>
          <field type="pointer" name="Freshness">
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </field>
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="IndexDocumentParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexDocumentResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="DocId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentParams">
          <field type="slice" name="DocId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="DeleteDocumentParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteDocumentResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsParams">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="pointer" name="StartDocId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IncludeStartDoc">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="ListDocumentsParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListDocumentsResponse">
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="slice" name="Document">
            <elmtype type="pointer">
              <type type="ident" def="Document"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesParams">
          <field type="pointer" name="FetchSchema">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Namespace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartIndexName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IncludeStartIndex">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IndexNamePrefix">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="ListIndexesParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ListIndexesResponse">
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="slice" name="IndexMetadata">
            <elmtype type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaParams">
          <field type="pointer" name="Source">
            <type type="ident" def="IndexSpec_Source"/>
          </field>
          <field type="slice" name="IndexSpec">
            <elmtype type="pointer">
              <type type="ident" def="IndexSpec"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="DeleteSchemaParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteSchemaResponse">
          <field type="slice" name="Status">
            <elmtype type="pointer">
              <type type="ident" def="RequestStatus"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SortSpec">
          <field type="pointer" name="SortExpression">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="SortDescending">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="DefaultValueText">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DefaultValueNumeric">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ScorerSpec">
          <field type="pointer" name="Scorer">
            <type type="ident" def="ScorerSpec_Scorer"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="MatchScorerParameters">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldSpec">
          <field type="slice" name="Name">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Expression">
            <elmtype type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldSpec_Expression">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Expression">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRange">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Start">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRequestParam">
          <field type="pointer" name="ValueLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Range">
            <elmtype type="pointer">
              <type type="ident" def="FacetRange"/>
            </elmtype>
          </field>
          <field type="slice" name="ValueConstraint">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetAutoDetectParam">
          <field type="pointer" name="ValueLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRequest">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="Params">
            <type type="ident" def="FacetRequestParam"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetRefine">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Start">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchParams">
          <field type="pointer" name="IndexSpec">
            <type type="ident" def="IndexSpec"/>
          </field>
          <field type="pointer" name="Query">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="CursorType">
            <type type="ident" def="SearchParams_CursorType"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="MatchedCountAccuracy">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="SortSpec">
            <elmtype type="pointer">
              <type type="ident" def="SortSpec"/>
            </elmtype>
          </field>
          <field type="pointer" name="ScorerSpec">
            <type type="ident" def="ScorerSpec"/>
          </field>
          <field type="pointer" name="FieldSpec">
            <type type="ident" def="FieldSpec"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ParsingMode">
            <type type="ident" def="SearchParams_ParsingMode"/>
          </field>
          <field type="pointer" name="AutoDiscoverFacetCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="IncludeFacet">
            <elmtype type="pointer">
              <type type="ident" def="FacetRequest"/>
            </elmtype>
          </field>
          <field type="slice" name="FacetRefine">
            <elmtype type="pointer">
              <type type="ident" def="FacetRefine"/>
            </elmtype>
          </field>
          <field type="pointer" name="FacetAutoDetectParam">
            <type type="ident" def="FacetAutoDetectParam"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchRequest">
          <field type="pointer" name="Params">
            <type type="ident" def="SearchParams"/>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetResultValue">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FacetResult">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FacetValue_ContentType"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchResult">
          <field type="pointer" name="Document">
            <type type="ident" def="Document"/>
          </field>
          <field type="slice" name="Expression">
            <elmtype type="pointer">
              <type type="ident" def="Field"/>
            </elmtype>
          </field>
          <field type="slice" name="Score">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SearchResponse">
          <field type="slice" name="Result">
            <elmtype type="pointer">
              <type type="ident" def="SearchResult"/>
            </elmtype>
          </field>
          <field type="pointer" name="MatchedCount">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="RequestStatus"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="FacetResult">
            <elmtype type="pointer">
              <type type="ident" def="FacetResult"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Scope_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scope_Type"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Scope_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Entry_Permission"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Entry_Permission"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Entry_Permission"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry_Permission"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldValue_ContentType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldValue_ContentType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldValue_ContentType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_ContentType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FacetValue_ContentType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FacetValue_ContentType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FacetValue_ContentType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue_ContentType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Document_Storage"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Document_Storage"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Document_Storage"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document_Storage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Consistency"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Consistency"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Source"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Source"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Source"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Source"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexSpec_Mode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Mode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexSpec_Mode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec_Mode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams_Freshness"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams_Freshness"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec_Scorer"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec_Scorer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchParams_CursorType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SearchParams_CursorType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchParams_CursorType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams_CursorType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SearchParams_ParsingMode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams_ParsingMode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Scope_Type"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Scope"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPermission">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Entry_Permission"/>
          </resultsList>
        </function>
        <function name="GetDisplayName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOwner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEntries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Entry"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldValue_ContentType"/>
          </resultsList>
        </function>
        <function name="GetLanguage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetGeo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetLng">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldValue_Geo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Field"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldValue"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldTypes"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="FieldValue_ContentType"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Facet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FacetValue"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetLanguage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOrderId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetStorage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Document_Storage"/>
          </resultsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AccessControlList"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetFacet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Facet"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SearchServiceError_ErrorCode"/>
          </resultsList>
        </function>
        <function name="GetErrorDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexSpec_Consistency"/>
          </resultsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexSpec_Source"/>
          </resultsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexSpec_Mode"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldTypes"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetStorage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAmountUsed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexMetadata_Storage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Document"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFreshness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexDocumentParams_Freshness"/>
          </resultsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteDocumentResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartDocId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIncludeStartDoc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListDocumentsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Document"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFetchSchema">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetNamespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStartIndexName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIncludeStartIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetIndexNamePrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexSpec_Source"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ListIndexesParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIndexMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ListIndexesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="IndexMetadata"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="IndexSpec_Source"/>
          </resultsList>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="IndexSpec"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteSchemaResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestStatus"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSortExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSortDescending">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDefaultValueText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDefaultValueNumeric">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SortSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetScorer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ScorerSpec_Scorer"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetMatchScorerParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldSpec_Expression"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldSpec_Expression"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValueLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetValueConstraint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValueLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </resultsList>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FacetRequestParam"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetRefine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="IndexSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCursorType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SearchParams_CursorType"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetMatchedCountAccuracy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetSortSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SortSpec"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetScorerSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ScorerSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFieldSpec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldSpec"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetParsingMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SearchParams_ParsingMode"/>
          </resultsList>
        </function>
        <function name="GetAutoDiscoverFacetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIncludeFacet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRequest"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFacetRefine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetRefine"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFacetAutoDetectParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FacetAutoDetectParam"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SearchParams"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResultValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FacetValue_ContentType"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FacetResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetResultValue"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDocument">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Document"/>
            </type>
          </resultsList>
        </function>
        <function name="GetExpression">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Field"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetScore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SearchResult"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMatchedCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RequestStatus"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFacetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SearchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FacetResult"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Scope_USER_BY_CANONICAL_ID"/>
        <name value="Scope_USER_BY_EMAIL"/>
        <name value="Scope_GROUP_BY_CANONICAL_ID"/>
        <name value="Scope_GROUP_BY_EMAIL"/>
        <name value="Scope_GROUP_BY_DOMAIN"/>
        <name value="Scope_ALL_USERS"/>
        <name value="Scope_ALL_AUTHENTICATED_USERS"/>
        <name value="Scope_Type_name"/>
        <name value="Scope_Type_value"/>
        <name value="Entry_READ"/>
        <name value="Entry_WRITE"/>
        <name value="Entry_FULL_CONTROL"/>
        <name value="Entry_Permission_name"/>
        <name value="Entry_Permission_value"/>
        <name value="FieldValue_TEXT"/>
        <name value="FieldValue_HTML"/>
        <name value="FieldValue_ATOM"/>
        <name value="FieldValue_DATE"/>
        <name value="FieldValue_NUMBER"/>
        <name value="FieldValue_GEO"/>
        <name value="FieldValue_ContentType_name"/>
        <name value="FieldValue_ContentType_value"/>
        <name value="FacetValue_ATOM"/>
        <name value="FacetValue_DATE"/>
        <name value="FacetValue_NUMBER"/>
        <name value="FacetValue_ContentType_name"/>
        <name value="FacetValue_ContentType_value"/>
        <name value="Document_DISK"/>
        <name value="Document_Storage_name"/>
        <name value="Document_Storage_value"/>
        <name value="SearchServiceError_OK"/>
        <name value="SearchServiceError_INVALID_REQUEST"/>
        <name value="SearchServiceError_TRANSIENT_ERROR"/>
        <name value="SearchServiceError_INTERNAL_ERROR"/>
        <name value="SearchServiceError_PERMISSION_DENIED"/>
        <name value="SearchServiceError_TIMEOUT"/>
        <name value="SearchServiceError_CONCURRENT_TRANSACTION"/>
        <name value="SearchServiceError_ErrorCode_name"/>
        <name value="SearchServiceError_ErrorCode_value"/>
        <name value="IndexSpec_GLOBAL"/>
        <name value="IndexSpec_PER_DOCUMENT"/>
        <name value="IndexSpec_Consistency_name"/>
        <name value="IndexSpec_Consistency_value"/>
        <name value="IndexSpec_SEARCH"/>
        <name value="IndexSpec_DATASTORE"/>
        <name value="IndexSpec_CLOUD_STORAGE"/>
        <name value="IndexSpec_Source_name"/>
        <name value="IndexSpec_Source_value"/>
        <name value="IndexSpec_PRIORITY"/>
        <name value="IndexSpec_BACKGROUND"/>
        <name value="IndexSpec_Mode_name"/>
        <name value="IndexSpec_Mode_value"/>
        <name value="IndexDocumentParams_SYNCHRONOUSLY"/>
        <name value="IndexDocumentParams_WHEN_CONVENIENT"/>
        <name value="IndexDocumentParams_Freshness_name"/>
        <name value="IndexDocumentParams_Freshness_value"/>
        <name value="ScorerSpec_RESCORING_MATCH_SCORER"/>
        <name value="ScorerSpec_MATCH_SCORER"/>
        <name value="ScorerSpec_Scorer_name"/>
        <name value="ScorerSpec_Scorer_value"/>
        <name value="SearchParams_NONE"/>
        <name value="SearchParams_SINGLE"/>
        <name value="SearchParams_PER_RESULT"/>
        <name value="SearchParams_CursorType_name"/>
        <name value="SearchParams_CursorType_value"/>
        <name value="SearchParams_STRICT"/>
        <name value="SearchParams_RELAXED"/>
        <name value="SearchParams_ParsingMode_name"/>
        <name value="SearchParams_ParsingMode_value"/>
        <name value="Default_FieldValue_Type"/>
        <name value="Default_FieldValue_Language"/>
        <name value="Default_FacetValue_Type"/>
        <name value="Default_Document_Language"/>
        <name value="Default_Document_Storage"/>
        <name value="Default_IndexSpec_Consistency"/>
        <name value="Default_IndexSpec_Source"/>
        <name value="Default_IndexSpec_Mode"/>
        <name value="Default_IndexDocumentParams_Freshness"/>
        <name value="Default_ListDocumentsParams_IncludeStartDoc"/>
        <name value="Default_ListDocumentsParams_Limit"/>
        <name value="Default_ListIndexesParams_Limit"/>
        <name value="Default_ListIndexesParams_IncludeStartIndex"/>
        <name value="Default_ListIndexesParams_Source"/>
        <name value="Default_DeleteSchemaParams_Source"/>
        <name value="Default_SortSpec_SortDescending"/>
        <name value="Default_ScorerSpec_Scorer"/>
        <name value="Default_ScorerSpec_Limit"/>
        <name value="Default_FacetAutoDetectParam_ValueLimit"/>
        <name value="Default_SearchParams_CursorType"/>
        <name value="Default_SearchParams_Limit"/>
        <name value="Default_SearchParams_ParsingMode"/>
        <name value="Default_SearchParams_AutoDiscoverFacetCount"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/taskqueue">
      <types>
        <type type="struct" name="RetryOptions">
          <field type="ident" def="int32" name="RetryLimit"/>
          <field type="selector" name="AgeLimit">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="MinBackoff">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="MaxBackoff">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int32" name="MaxDoublings"/>
          <field type="ident" def="bool" name="ApplyZeroMaxDoublings"/>
        </type>
        <type type="struct" name="Task">
          <field type="ident" def="string" name="Path"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="Header">
            <prefix value="http"/>
            <item value="Header"/>
          </field>
          <field type="ident" def="string" name="Method"/>
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Delay">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ETA">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int32" name="RetryCount"/>
          <field type="ident" def="string" name="Tag"/>
          <field type="pointer" name="RetryOptions">
            <type type="ident" def="RetryOptions"/>
          </field>
        </type>
        <type type="struct" name="QueueStatistics">
          <field type="ident" def="int" name="Tasks"/>
          <field type="selector" name="OldestETA">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Executed1Minute"/>
          <field type="ident" def="int" name="InFlight"/>
          <field type="ident" def="float64" name="EnforcedRate"/>
        </type>
      </types>
      <functions>
        <function name="NewPOSTTask">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Task"/>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Task"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Task"/>
              </elmtype>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lease">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Task"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaseByTag">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Task"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Purge">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ModifyLease">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Task"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="QueueStats">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="QueueStatistics"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrTaskAlreadyAdded"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/xmpp">
      <types>
        <type type="struct" name="Message">
          <field type="ident" def="string" name="Sender"/>
          <field type="slice" name="To">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Body"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="bool" name="RawXML"/>
        </type>
        <type type="struct" name="Presence">
          <field type="ident" def="string" name="Sender"/>
          <field type="ident" def="string" name="To"/>
          <field type="ident" def="string" name="Type"/>
          <field type="ident" def="string" name="State"/>
          <field type="ident" def="string" name="Status"/>
        </type>
      </types>
      <functions>
        <function name="Handle">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="context"/>
                  <item value="Context"/>
                </type>
                <type type="pointer">
                  <type type="ident" def="Message"/>
                </type>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Invite">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Presence"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPresence">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetPresenceMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrPresenceUnavailable"/>
        <name value="ErrInvalidJID"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/memcache">
      <types>
        <type type="struct" name="Item">
          <field type="ident" def="string" name="Key"/>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="interface" name="Object"/>
          <field type="ident" def="uint32" name="Flags"/>
          <field type="selector" name="Expiration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="uint64" name="casID"/>
        </type>
        <type type="struct" name="Codec">
          <field type="func" name="Marshal">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="Statistics">
          <field type="ident" def="uint64" name="Hits"/>
          <field type="ident" def="uint64" name="Misses"/>
          <field type="ident" def="uint64" name="ByteHits"/>
          <field type="ident" def="uint64" name="Items"/>
          <field type="ident" def="uint64" name="Bytes"/>
          <field type="ident" def="int64" name="Oldest"/>
        </type>
      </types>
      <functions>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Item"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Increment">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncrementExisting">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwap">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwapMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulti">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddMulti">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwap">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Item"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompareAndSwapMulti">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Item"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Statistics"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrCacheMiss"/>
        <name value="ErrCASConflict"/>
        <name value="ErrNoStats"/>
        <name value="ErrNotStored"/>
        <name value="ErrServerError"/>
        <name value="Gob"/>
        <name value="JSON"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/mail">
      <types>
        <type name="MailServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="MailServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailAttachment">
          <field type="pointer" name="FileName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ContentID">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailHeader">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MailMessage">
          <field type="pointer" name="Sender">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ReplyTo">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="To">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Bcc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Subject">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TextBody">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HtmlBody">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Attachment">
            <elmtype type="pointer">
              <type type="ident" def="MailAttachment"/>
            </elmtype>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="MailHeader"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MailServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MailServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MailServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFileName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetContentID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailAttachment"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSender">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetReplyTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBcc">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSubject">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTextBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetHtmlBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAttachment">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MailAttachment"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MailMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MailHeader"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MailServiceError_OK"/>
        <name value="MailServiceError_INTERNAL_ERROR"/>
        <name value="MailServiceError_BAD_REQUEST"/>
        <name value="MailServiceError_UNAUTHORIZED_SENDER"/>
        <name value="MailServiceError_INVALID_ATTACHMENT_TYPE"/>
        <name value="MailServiceError_INVALID_HEADER_NAME"/>
        <name value="MailServiceError_INVALID_CONTENT_ID"/>
        <name value="MailServiceError_ErrorCode_name"/>
        <name value="MailServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/aetesting">
      <types/>
      <functions>
        <function name="FakeSingleContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine">
      <types>
        <type type="struct" name="Certificate">
          <field type="ident" def="string" name="KeyName"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="MultiError" type="slice">
          <elmtype type="ident" def="error"/>
        </type>
        <type name="BlobKey" type="ident">
          <type type="ident" def="string"/>
        </type>
        <type type="struct" name="GeoPoint">
          <field type="ident" def="float64" name="Lat"/>
          <field type="ident" def="float64" name="Lng"/>
        </type>
      </types>
      <functions>
        <function name="IsTimeoutError">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DefaultVersionHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ModuleName">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ModuleHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VersionID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="InstanceID">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Datacenter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ServerSoftware">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RequestID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AccessToken">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PublicCertificates">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServiceAccount">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SignBytes">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsOverQuota">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="ident" def="MultiError"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsDevAppServer">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="ident" def="GeoPoint"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/datastore">
      <types>
        <type type="struct" name="TransactionOptions">
          <field type="ident" def="bool" name="XG"/>
        </type>
        <type type="struct" name="Query">
          <field type="ident" def="string" name="kind"/>
          <field type="pointer" name="ancestor">
            <type type="ident" def="Key"/>
          </field>
          <field type="slice" name="filter">
            <elmtype type="ident" def="filter"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="order"/>
          </field>
          <field type="slice" name="projection">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="distinct"/>
          <field type="ident" def="bool" name="keysOnly"/>
          <field type="ident" def="bool" name="eventual"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="ident" def="int32" name="offset"/>
          <field type="pointer" name="start">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
          <field type="pointer" name="end">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
          <field type="ident" def="error" name="err"/>
        </type>
        <type type="struct" name="Iterator">
          <field type="selector" name="c">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="selector" name="res">
            <prefix value="pb"/>
            <item value="QueryResult"/>
          </field>
          <field type="ident" def="int" name="i"/>
          <field type="ident" def="int32" name="limit"/>
          <field type="pointer" name="q">
            <type type="ident" def="Query"/>
          </field>
          <field type="pointer" name="prevCC">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Cursor">
          <field type="pointer" name="cc">
            <type type="selector">
              <prefix value="pb"/>
              <item value="CompiledCursor"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="ident" def="string" name="Name"/>
          <field type="interface" name="Value"/>
          <field type="ident" def="bool" name="NoIndex"/>
          <field type="ident" def="bool" name="Multiple"/>
        </type>
        <type name="ByteString" type="slice">
          <elmtype type="ident" def="byte"/>
        </type>
        <type name="PropertyLoadSaver" type="interface">
          <method name="Load">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Save">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Property"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="PropertyList" type="slice">
          <elmtype type="ident" def="Property"/>
        </type>
        <type type="struct" name="Key">
          <field type="ident" def="string" name="kind"/>
          <field type="ident" def="string" name="stringID"/>
          <field type="ident" def="int64" name="intID"/>
          <field type="pointer" name="parent">
            <type type="ident" def="Key"/>
          </field>
          <field type="ident" def="string" name="appID"/>
          <field type="ident" def="string" name="namespace"/>
        </type>
        <type type="struct" name="ErrFieldMismatch">
          <field type="selector" name="StructType">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="ident" def="string" name="FieldName"/>
          <field type="ident" def="string" name="Reason"/>
        </type>
      </types>
      <functions>
        <function name="RunInTransaction">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="context"/>
                  <item value="Context"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
            <type type="pointer">
              <type type="ident" def="TransactionOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewQuery">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Ancestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="EventualConsistency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Filter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Order">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Project">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Distinct">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="KeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Limit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Offset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="End">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Cursor"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </resultsList>
        </function>
        <function name="Count">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Cursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Iterator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Cursor"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeCursor">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Cursor"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Save">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SaveStruct">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Load">
          <recvList>
            <type type="ident" def="structPLS"/>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Property"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Kind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="StringID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IntID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Parent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </resultsList>
        </function>
        <function name="AppID">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Namespace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Incomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GobEncode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GobDecode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewIncompleteKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </resultsList>
        </function>
        <function name="NewKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="int64"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </resultsList>
        </function>
        <function name="AllocateIDs">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrFieldMismatch"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Put">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PutMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Delete">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Key"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteMulti">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Key"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrConcurrentTransaction"/>
        <name value="Done"/>
        <name value="ErrInvalidEntityType"/>
        <name value="ErrInvalidKey"/>
        <name value="ErrNoSuchEntity"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/channel">
      <types/>
      <functions>
        <function name="Create">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Send">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendJSON">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/user">
      <types>
        <type type="struct" name="User">
          <field type="ident" def="string" name="Email"/>
          <field type="ident" def="string" name="AuthDomain"/>
          <field type="ident" def="bool" name="Admin"/>
          <field type="ident" def="string" name="ID"/>
          <field type="ident" def="string" name="FederatedIdentity"/>
          <field type="ident" def="string" name="FederatedProvider"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="LoginURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoginURLFederated">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LogoutURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Current">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </resultsList>
        </function>
        <function name="IsAdmin">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="CurrentOAuth">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OAuthConsumerKey">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/xmpp">
      <types>
        <type name="XmppServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PresenceResponse_SHOW" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="XmppMessageResponse_XmppMessageStatus" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="XmppServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PresenceRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PresenceResponse">
          <field type="pointer" name="IsAvailable">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Presence">
            <type type="ident" def="PresenceResponse_SHOW"/>
          </field>
          <field type="pointer" name="Valid">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BulkPresenceRequest">
          <field type="slice" name="Jid">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BulkPresenceResponse">
          <field type="slice" name="PresenceResponse">
            <elmtype type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppMessageRequest">
          <field type="slice" name="Jid">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Body">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="RawXml">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppMessageResponse">
          <field type="slice" name="Status">
            <elmtype type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppSendPresenceRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Show">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppSendPresenceResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppInviteRequest">
          <field type="pointer" name="Jid">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FromJid">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="XmppInviteResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="XmppServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="XmppServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse_SHOW"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse_SHOW"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIsAvailable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPresence">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="PresenceResponse_SHOW"/>
          </resultsList>
        </function>
        <function name="GetValid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPresenceResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BulkPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PresenceResponse"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetRawXml">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppMessageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="XmppMessageResponse_XmppMessageStatus"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetShow">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppSendPresenceResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFromJid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="XmppInviteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="XmppServiceError_UNSPECIFIED_ERROR"/>
        <name value="XmppServiceError_INVALID_JID"/>
        <name value="XmppServiceError_NO_BODY"/>
        <name value="XmppServiceError_INVALID_XML"/>
        <name value="XmppServiceError_INVALID_TYPE"/>
        <name value="XmppServiceError_INVALID_SHOW"/>
        <name value="XmppServiceError_EXCEEDED_MAX_SIZE"/>
        <name value="XmppServiceError_APPID_ALIAS_REQUIRED"/>
        <name value="XmppServiceError_NONDEFAULT_MODULE"/>
        <name value="XmppServiceError_ErrorCode_name"/>
        <name value="XmppServiceError_ErrorCode_value"/>
        <name value="PresenceResponse_NORMAL"/>
        <name value="PresenceResponse_AWAY"/>
        <name value="PresenceResponse_DO_NOT_DISTURB"/>
        <name value="PresenceResponse_CHAT"/>
        <name value="PresenceResponse_EXTENDED_AWAY"/>
        <name value="PresenceResponse_SHOW_name"/>
        <name value="PresenceResponse_SHOW_value"/>
        <name value="XmppMessageResponse_NO_ERROR"/>
        <name value="XmppMessageResponse_INVALID_JID"/>
        <name value="XmppMessageResponse_OTHER_ERROR"/>
        <name value="XmppMessageResponse_XmppMessageStatus_name"/>
        <name value="XmppMessageResponse_XmppMessageStatus_value"/>
        <name value="Default_XmppMessageRequest_RawXml"/>
        <name value="Default_XmppMessageRequest_Type"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/remote_api">
      <types/>
      <functions>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rawMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rawMessage"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rawMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="rawMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewRemoteContext">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="headerAddingRoundTripper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/datastore">
      <types>
        <type name="Property_Meaning" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Property_FtsTokenizationOption" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="EntityProto_Kind" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Index_Property_Direction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="CompositeIndex_State" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Snapshot_Status" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Query_Hint" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Query_Filter_Operator" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Query_Order_Direction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Error_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="PutRequest_AutoIdPolicy" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Action">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyValue">
          <field type="pointer" name="Int64Value">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="BooleanValue">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="StringValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DoubleValue">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Pointvalue">
            <type type="ident" def="PropertyValue_PointValue"/>
          </field>
          <field type="pointer" name="Uservalue">
            <type type="ident" def="PropertyValue_UserValue"/>
          </field>
          <field type="pointer" name="Referencevalue">
            <type type="ident" def="PropertyValue_ReferenceValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyValue_PointValue">
          <field type="pointer" name="X">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="Y">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyValue_UserValue">
          <field type="pointer" name="Email">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Nickname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedIdentity">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedProvider">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyValue_ReferenceValue">
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Pathelement">
            <elmtype type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PropertyValue_ReferenceValue_PathElement">
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Id">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Property">
          <field type="pointer" name="Meaning">
            <type type="ident" def="Property_Meaning"/>
          </field>
          <field type="pointer" name="MeaningUri">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="PropertyValue"/>
          </field>
          <field type="pointer" name="Multiple">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Searchable">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="FtsTokenizationOption">
            <type type="ident" def="Property_FtsTokenizationOption"/>
          </field>
          <field type="pointer" name="Locale">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Path">
          <field type="slice" name="Element">
            <elmtype type="pointer">
              <type type="ident" def="Path_Element"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Path_Element">
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Id">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reference">
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Path">
            <type type="ident" def="Path"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="User">
          <field type="pointer" name="Email">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Nickname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedIdentity">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedProvider">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EntityProto">
          <field type="pointer" name="Key">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="EntityGroup">
            <type type="ident" def="Path"/>
          </field>
          <field type="pointer" name="Owner">
            <type type="ident" def="User"/>
          </field>
          <field type="pointer" name="Kind">
            <type type="ident" def="EntityProto_Kind"/>
          </field>
          <field type="pointer" name="KindUri">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Property">
            <elmtype type="pointer">
              <type type="ident" def="Property"/>
            </elmtype>
          </field>
          <field type="slice" name="RawProperty">
            <elmtype type="pointer">
              <type type="ident" def="Property"/>
            </elmtype>
          </field>
          <field type="pointer" name="Rank">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompositeProperty">
          <field type="pointer" name="IndexId">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Index">
          <field type="pointer" name="EntityType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Ancestor">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Property">
            <elmtype type="pointer">
              <type type="ident" def="Index_Property"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Index_Property">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Direction">
            <type type="ident" def="Index_Property_Direction"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompositeIndex">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Id">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Definition">
            <type type="ident" def="Index"/>
          </field>
          <field type="pointer" name="State">
            <type type="ident" def="CompositeIndex_State"/>
          </field>
          <field type="pointer" name="OnlyUseIfRequired">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexPostfix">
          <field type="slice" name="IndexValue">
            <elmtype type="pointer">
              <type type="ident" def="IndexPostfix_IndexValue"/>
            </elmtype>
          </field>
          <field type="pointer" name="Key">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="Before">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexPostfix_IndexValue">
          <field type="pointer" name="PropertyName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="PropertyValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="IndexPosition">
          <field type="pointer" name="Key">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Before">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Snapshot">
          <field type="pointer" name="Ts">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="InternalHeader">
          <field type="pointer" name="Qos">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Transaction">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="Handle">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="MarkChanges">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Query">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Kind">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Ancestor">
            <type type="ident" def="Reference"/>
          </field>
          <field type="slice" name="Filter">
            <elmtype type="pointer">
              <type type="ident" def="Query_Filter"/>
            </elmtype>
          </field>
          <field type="pointer" name="SearchQuery">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Order">
            <elmtype type="pointer">
              <type type="ident" def="Query_Order"/>
            </elmtype>
          </field>
          <field type="pointer" name="Hint">
            <type type="ident" def="Query_Hint"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="CompiledCursor">
            <type type="ident" def="CompiledCursor"/>
          </field>
          <field type="pointer" name="EndCompiledCursor">
            <type type="ident" def="CompiledCursor"/>
          </field>
          <field type="slice" name="CompositeIndex">
            <elmtype type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </elmtype>
          </field>
          <field type="pointer" name="RequirePerfectPlan">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Transaction">
            <type type="ident" def="Transaction"/>
          </field>
          <field type="pointer" name="Compile">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="FailoverMs">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Strong">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="PropertyName">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="GroupByPropertyName">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Distinct">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MinSafeTimeSeconds">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="SafeReplicaName">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="PersistOffset">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Query_Filter">
          <field type="pointer" name="Op">
            <type type="ident" def="Query_Filter_Operator"/>
          </field>
          <field type="slice" name="Property">
            <elmtype type="pointer">
              <type type="ident" def="Property"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Query_Order">
          <field type="pointer" name="Property">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Direction">
            <type type="ident" def="Query_Order_Direction"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledQuery">
          <field type="pointer" name="Primaryscan">
            <type type="ident" def="CompiledQuery_PrimaryScan"/>
          </field>
          <field type="slice" name="Mergejoinscan">
            <elmtype type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </elmtype>
          </field>
          <field type="pointer" name="IndexDef">
            <type type="ident" def="Index"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="PropertyName">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="DistinctInfixSize">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Entityfilter">
            <type type="ident" def="CompiledQuery_EntityFilter"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledQuery_PrimaryScan">
          <field type="pointer" name="IndexName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartInclusive">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="EndKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="EndInclusive">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="StartPostfixValue">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="EndPostfixValue">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="EndUnappliedLogTimestampUs">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledQuery_MergeJoinScan">
          <field type="pointer" name="IndexName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="PrefixValue">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="ValuePrefix">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledQuery_EntityFilter">
          <field type="pointer" name="Distinct">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Kind">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Ancestor">
            <type type="ident" def="Reference"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledCursor">
          <field type="pointer" name="Position">
            <type type="ident" def="CompiledCursor_Position"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledCursor_Position">
          <field type="pointer" name="StartKey">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Indexvalue">
            <elmtype type="pointer">
              <type type="ident" def="CompiledCursor_Position_IndexValue"/>
            </elmtype>
          </field>
          <field type="pointer" name="Key">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="StartInclusive">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompiledCursor_Position_IndexValue">
          <field type="pointer" name="Property">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="PropertyValue"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Cursor">
          <field type="pointer" name="Cursor">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Error">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Cost">
          <field type="pointer" name="IndexWrites">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IndexWriteBytes">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EntityWrites">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EntityWriteBytes">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Commitcost">
            <type type="ident" def="Cost_CommitCost"/>
          </field>
          <field type="pointer" name="ApproximateStorageDelta">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IdSequenceUpdates">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Cost_CommitCost">
          <field type="pointer" name="RequestedEntityPuts">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="RequestedEntityDeletes">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="pointer" name="Transaction">
            <type type="ident" def="Transaction"/>
          </field>
          <field type="pointer" name="FailoverMs">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Strong">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="AllowDeferred">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetResponse">
          <field type="slice" name="Entity">
            <elmtype type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </elmtype>
          </field>
          <field type="slice" name="Deferred">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="pointer" name="InOrder">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetResponse_Entity">
          <field type="pointer" name="Entity">
            <type type="ident" def="EntityProto"/>
          </field>
          <field type="pointer" name="Key">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PutRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="slice" name="Entity">
            <elmtype type="pointer">
              <type type="ident" def="EntityProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Transaction">
            <type type="ident" def="Transaction"/>
          </field>
          <field type="slice" name="CompositeIndex">
            <elmtype type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </elmtype>
          </field>
          <field type="pointer" name="Trusted">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Force">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MarkChanges">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Snapshot">
            <elmtype type="pointer">
              <type type="ident" def="Snapshot"/>
            </elmtype>
          </field>
          <field type="pointer" name="AutoIdPolicy">
            <type type="ident" def="PutRequest_AutoIdPolicy"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PutResponse">
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="pointer" name="Cost">
            <type type="ident" def="Cost"/>
          </field>
          <field type="slice" name="Version">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TouchRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="slice" name="CompositeIndex">
            <elmtype type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </elmtype>
          </field>
          <field type="pointer" name="Force">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Snapshot">
            <elmtype type="pointer">
              <type type="ident" def="Snapshot"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TouchResponse">
          <field type="pointer" name="Cost">
            <type type="ident" def="Cost"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="slice" name="Key">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="pointer" name="Transaction">
            <type type="ident" def="Transaction"/>
          </field>
          <field type="pointer" name="Trusted">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Force">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MarkChanges">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Snapshot">
            <elmtype type="pointer">
              <type type="ident" def="Snapshot"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DeleteResponse">
          <field type="pointer" name="Cost">
            <type type="ident" def="Cost"/>
          </field>
          <field type="slice" name="Version">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NextRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="Cursor">
            <type type="ident" def="Cursor"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Compile">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="QueryResult">
          <field type="pointer" name="Cursor">
            <type type="ident" def="Cursor"/>
          </field>
          <field type="slice" name="Result">
            <elmtype type="pointer">
              <type type="ident" def="EntityProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="SkippedResults">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="MoreResults">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="KeysOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IndexOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="SmallOps">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CompiledQuery">
            <type type="ident" def="CompiledQuery"/>
          </field>
          <field type="pointer" name="CompiledCursor">
            <type type="ident" def="CompiledCursor"/>
          </field>
          <field type="slice" name="Index">
            <elmtype type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </elmtype>
          </field>
          <field type="slice" name="Version">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AllocateIdsRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="ModelKey">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="Size">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Max">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Reserve">
            <elmtype type="pointer">
              <type type="ident" def="Reference"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AllocateIdsResponse">
          <field type="pointer" name="Start">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Cost">
            <type type="ident" def="Cost"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompositeIndices">
          <field type="slice" name="Index">
            <elmtype type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AddActionsRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="Transaction">
            <type type="ident" def="Transaction"/>
          </field>
          <field type="slice" name="Action">
            <elmtype type="pointer">
              <type type="ident" def="Action"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AddActionsResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BeginTransactionRequest">
          <field type="pointer" name="Header">
            <type type="ident" def="InternalHeader"/>
          </field>
          <field type="pointer" name="App">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AllowMultipleEg">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CommitResponse">
          <field type="pointer" name="Cost">
            <type type="ident" def="Cost"/>
          </field>
          <field type="slice" name="Version">
            <elmtype type="pointer">
              <type type="ident" def="CommitResponse_Version"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CommitResponse_Version">
          <field type="pointer" name="RootEntityKey">
            <type type="ident" def="Reference"/>
          </field>
          <field type="pointer" name="Version">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Property_Meaning"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Property_Meaning"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Property_Meaning"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property_Meaning"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Property_FtsTokenizationOption"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Property_FtsTokenizationOption"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Property_FtsTokenizationOption"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property_FtsTokenizationOption"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="EntityProto_Kind"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EntityProto_Kind"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="EntityProto_Kind"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto_Kind"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Index_Property_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Index_Property_Direction"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Index_Property_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index_Property_Direction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="CompositeIndex_State"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex_State"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="CompositeIndex_State"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex_State"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Snapshot_Status"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Snapshot_Status"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Snapshot_Status"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot_Status"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Query_Hint"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query_Hint"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Query_Hint"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Hint"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Query_Filter_Operator"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query_Filter_Operator"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Query_Filter_Operator"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Filter_Operator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Query_Order_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Query_Order_Direction"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Query_Order_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Order_Direction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Error_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Error_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Error_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Error_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="PutRequest_AutoIdPolicy"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PutRequest_AutoIdPolicy"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="PutRequest_AutoIdPolicy"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest_AutoIdPolicy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Action"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Action"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetInt64Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetBooleanValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDoubleValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetPointvalue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_PointValue"/>
            </type>
          </resultsList>
        </function>
        <function name="GetUservalue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </resultsList>
        </function>
        <function name="GetReferencevalue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_PointValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_PointValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_PointValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_PointValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNickname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFederatedIdentity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFederatedProvider">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_UserValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPathelement">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PropertyValue_ReferenceValue_PathElement"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMeaning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Property_Meaning"/>
          </resultsList>
        </function>
        <function name="GetMeaningUri">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMultiple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSearchable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFtsTokenizationOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Property_FtsTokenizationOption"/>
          </resultsList>
        </function>
        <function name="GetLocale">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetElement">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Path_Element"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path_Element"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path_Element"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path_Element"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path_Element"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Path_Element"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Path"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNickname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFederatedIdentity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFederatedProvider">
          <recvList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEntityGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Path"/>
            </type>
          </resultsList>
        </function>
        <function name="GetOwner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="User"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="EntityProto_Kind"/>
          </resultsList>
        </function>
        <function name="GetKindUri">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Property"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRawProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Property"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRank">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeProperty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeProperty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeProperty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeProperty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEntityType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAncestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Index_Property"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index_Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index_Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index_Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDirection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Index_Property"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Index_Property_Direction"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetDefinition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </resultsList>
        </function>
        <function name="GetState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="CompositeIndex_State"/>
          </resultsList>
        </function>
        <function name="GetOnlyUseIfRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndex"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="IndexPostfix_IndexValue"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBefore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPropertyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPostfix_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPosition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPosition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPosition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetBefore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IndexPosition"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshot"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQos">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHandle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMarkChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAncestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Query_Filter"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetSearchQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOrder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Query_Order"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetHint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Query_Hint"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCompiledCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEndCompiledCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCompositeIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeIndex"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRequirePerfectPlan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCompile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetFailoverMs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetStrong">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPropertyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetGroupByPropertyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDistinct">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMinSafeTimeSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetSafeReplicaName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPersistOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Query_Filter_Operator"/>
          </resultsList>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Filter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Property"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Order"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Order"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Order"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDirection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query_Order"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Query_Order_Direction"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPrimaryscan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMergejoinscan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompiledQuery_MergeJoinScan"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetIndexDef">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Index"/>
            </type>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPropertyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDistinctInfixSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEntityfilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStartKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStartInclusive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetEndKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetEndInclusive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetStartPostfixValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEndPostfixValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEndUnappliedLogTimestampUs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_PrimaryScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPrefixValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValuePrefix">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_MergeJoinScan"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDistinct">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAncestor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery_EntityFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPosition">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStartKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIndexvalue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompiledCursor_Position_IndexValue"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartInclusive">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetProperty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor_Position_IndexValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PropertyValue"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Error"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Error"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndexWrites">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIndexWriteBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEntityWrites">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEntityWriteBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCommitcost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost_CommitCost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetApproximateStorageDelta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIdSequenceUpdates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost_CommitCost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost_CommitCost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequestedEntityPuts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost_CommitCost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetRequestedEntityDeletes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cost_CommitCost"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFailoverMs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetStrong">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAllowDeferred">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEntity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GetResponse_Entity"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeferred">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetInOrder">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEntity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EntityProto"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetResponse_Entity"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEntity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EntityProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCompositeIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeIndex"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetTrusted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetForce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMarkChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Snapshot"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetAutoIdPolicy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="PutRequest_AutoIdPolicy"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PutResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCompositeIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeIndex"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetForce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Snapshot"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TouchResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTrusted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetForce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMarkChanges">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSnapshot">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Snapshot"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCompile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NextRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cursor"/>
            </type>
          </resultsList>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EntityProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetSkippedResults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetMoreResults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetKeysOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetIndexOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetSmallOps">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCompiledQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledQuery"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCompiledCursor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompiledCursor"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeIndex"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetModelKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMax">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetReserve">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reference"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AllocateIdsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndices"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndices"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeIndices"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeIndex"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Transaction"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Action"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AddActionsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InternalHeader"/>
            </type>
          </resultsList>
        </function>
        <function name="GetApp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAllowMultipleEg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BeginTransactionRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cost"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CommitResponse_Version"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse_Version"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse_Version"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRootEntityKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse_Version"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reference"/>
            </type>
          </resultsList>
        </function>
        <function name="GetVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CommitResponse_Version"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Property_NO_MEANING"/>
        <name value="Property_BLOB"/>
        <name value="Property_TEXT"/>
        <name value="Property_BYTESTRING"/>
        <name value="Property_ATOM_CATEGORY"/>
        <name value="Property_ATOM_LINK"/>
        <name value="Property_ATOM_TITLE"/>
        <name value="Property_ATOM_CONTENT"/>
        <name value="Property_ATOM_SUMMARY"/>
        <name value="Property_ATOM_AUTHOR"/>
        <name value="Property_GD_WHEN"/>
        <name value="Property_GD_EMAIL"/>
        <name value="Property_GEORSS_POINT"/>
        <name value="Property_GD_IM"/>
        <name value="Property_GD_PHONENUMBER"/>
        <name value="Property_GD_POSTALADDRESS"/>
        <name value="Property_GD_RATING"/>
        <name value="Property_BLOBKEY"/>
        <name value="Property_ENTITY_PROTO"/>
        <name value="Property_INDEX_VALUE"/>
        <name value="Property_Meaning_name"/>
        <name value="Property_Meaning_value"/>
        <name value="Property_HTML"/>
        <name value="Property_ATOM"/>
        <name value="Property_FtsTokenizationOption_name"/>
        <name value="Property_FtsTokenizationOption_value"/>
        <name value="EntityProto_GD_CONTACT"/>
        <name value="EntityProto_GD_EVENT"/>
        <name value="EntityProto_GD_MESSAGE"/>
        <name value="EntityProto_Kind_name"/>
        <name value="EntityProto_Kind_value"/>
        <name value="Index_Property_ASCENDING"/>
        <name value="Index_Property_DESCENDING"/>
        <name value="Index_Property_Direction_name"/>
        <name value="Index_Property_Direction_value"/>
        <name value="CompositeIndex_WRITE_ONLY"/>
        <name value="CompositeIndex_READ_WRITE"/>
        <name value="CompositeIndex_DELETED"/>
        <name value="CompositeIndex_ERROR"/>
        <name value="CompositeIndex_State_name"/>
        <name value="CompositeIndex_State_value"/>
        <name value="Snapshot_INACTIVE"/>
        <name value="Snapshot_ACTIVE"/>
        <name value="Snapshot_Status_name"/>
        <name value="Snapshot_Status_value"/>
        <name value="Query_ORDER_FIRST"/>
        <name value="Query_ANCESTOR_FIRST"/>
        <name value="Query_FILTER_FIRST"/>
        <name value="Query_Hint_name"/>
        <name value="Query_Hint_value"/>
        <name value="Query_Filter_LESS_THAN"/>
        <name value="Query_Filter_LESS_THAN_OR_EQUAL"/>
        <name value="Query_Filter_GREATER_THAN"/>
        <name value="Query_Filter_GREATER_THAN_OR_EQUAL"/>
        <name value="Query_Filter_EQUAL"/>
        <name value="Query_Filter_IN"/>
        <name value="Query_Filter_EXISTS"/>
        <name value="Query_Filter_Operator_name"/>
        <name value="Query_Filter_Operator_value"/>
        <name value="Query_Order_ASCENDING"/>
        <name value="Query_Order_DESCENDING"/>
        <name value="Query_Order_Direction_name"/>
        <name value="Query_Order_Direction_value"/>
        <name value="Error_BAD_REQUEST"/>
        <name value="Error_CONCURRENT_TRANSACTION"/>
        <name value="Error_INTERNAL_ERROR"/>
        <name value="Error_NEED_INDEX"/>
        <name value="Error_TIMEOUT"/>
        <name value="Error_PERMISSION_DENIED"/>
        <name value="Error_BIGTABLE_ERROR"/>
        <name value="Error_COMMITTED_BUT_STILL_APPLYING"/>
        <name value="Error_CAPABILITY_DISABLED"/>
        <name value="Error_TRY_ALTERNATE_BACKEND"/>
        <name value="Error_SAFE_TIME_TOO_OLD"/>
        <name value="Error_ErrorCode_name"/>
        <name value="Error_ErrorCode_value"/>
        <name value="PutRequest_CURRENT"/>
        <name value="PutRequest_SEQUENTIAL"/>
        <name value="PutRequest_AutoIdPolicy_name"/>
        <name value="PutRequest_AutoIdPolicy_value"/>
        <name value="Default_Property_Meaning"/>
        <name value="Default_Property_Searchable"/>
        <name value="Default_Property_Locale"/>
        <name value="Default_Index_Property_Direction"/>
        <name value="Default_CompositeIndex_OnlyUseIfRequired"/>
        <name value="Default_IndexPostfix_Before"/>
        <name value="Default_IndexPosition_Before"/>
        <name value="Default_Transaction_MarkChanges"/>
        <name value="Default_Query_Offset"/>
        <name value="Default_Query_RequirePerfectPlan"/>
        <name value="Default_Query_KeysOnly"/>
        <name value="Default_Query_Compile"/>
        <name value="Default_Query_PersistOffset"/>
        <name value="Default_Query_Order_Direction"/>
        <name value="Default_CompiledQuery_Offset"/>
        <name value="Default_CompiledQuery_MergeJoinScan_ValuePrefix"/>
        <name value="Default_CompiledQuery_EntityFilter_Distinct"/>
        <name value="Default_CompiledCursor_Position_StartInclusive"/>
        <name value="Default_GetRequest_AllowDeferred"/>
        <name value="Default_GetResponse_InOrder"/>
        <name value="Default_PutRequest_Trusted"/>
        <name value="Default_PutRequest_Force"/>
        <name value="Default_PutRequest_MarkChanges"/>
        <name value="Default_PutRequest_AutoIdPolicy"/>
        <name value="Default_TouchRequest_Force"/>
        <name value="Default_DeleteRequest_Trusted"/>
        <name value="Default_DeleteRequest_Force"/>
        <name value="Default_DeleteRequest_MarkChanges"/>
        <name value="Default_NextRequest_Offset"/>
        <name value="Default_NextRequest_Compile"/>
        <name value="Default_BeginTransactionRequest_AllowMultipleEg"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/user">
      <types>
        <type name="UserServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="UserServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLoginURLRequest">
          <field type="pointer" name="DestinationUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FederatedIdentity">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLoginURLResponse">
          <field type="pointer" name="LoginUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLogoutURLRequest">
          <field type="pointer" name="DestinationUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CreateLogoutURLResponse">
          <field type="pointer" name="LogoutUrl">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetOAuthUserRequest">
          <field type="pointer" name="Scope">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetOAuthUserResponse">
          <field type="pointer" name="Email">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="AuthDomain">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserOrganization">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IsAdmin">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ClientId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CheckOAuthSignatureRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CheckOAuthSignatureResponse">
          <field type="pointer" name="OauthConsumerKey">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="UserServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="UserServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="UserServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDestinationUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFederatedIdentity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLoginUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLoginURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDestinationUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLogoutUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CreateLogoutURLResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetScopes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUserId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetAuthDomain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUserOrganization">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIsAdmin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetClientId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetScopes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetOAuthUserResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOauthConsumerKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CheckOAuthSignatureResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="UserServiceError_OK"/>
        <name value="UserServiceError_REDIRECT_URL_TOO_LONG"/>
        <name value="UserServiceError_NOT_ALLOWED"/>
        <name value="UserServiceError_OAUTH_INVALID_TOKEN"/>
        <name value="UserServiceError_OAUTH_INVALID_REQUEST"/>
        <name value="UserServiceError_OAUTH_ERROR"/>
        <name value="UserServiceError_ErrorCode_name"/>
        <name value="UserServiceError_ErrorCode_value"/>
        <name value="Default_GetOAuthUserResponse_IsAdmin"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/image">
      <types>
        <type name="ImagesServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="ImagesServiceTransform_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="InputSettings_ORIENTATION_CORRECTION_TYPE" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="OutputSettings_MIME_TYPE" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="CompositeImageOptions_ANCHOR" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="ImagesServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesServiceTransform">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Transform">
          <field type="pointer" name="Width">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Height">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="CropToFit">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CropOffsetX">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="CropOffsetY">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Rotate">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="HorizontalFlip">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="VerticalFlip">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CropLeftX">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="CropTopY">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="CropRightX">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="CropBottomY">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Autolevels">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="AllowStretch">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImageData">
          <field type="slice" name="Content">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="BlobKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Width">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Height">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="InputSettings">
          <field type="pointer" name="CorrectExifOrientation">
            <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
          </field>
          <field type="pointer" name="ParseMetadata">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="TransparentSubstitutionRgb">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OutputSettings">
          <field type="pointer" name="MimeType">
            <type type="ident" def="OutputSettings_MIME_TYPE"/>
          </field>
          <field type="pointer" name="Quality">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesTransformRequest">
          <field type="pointer" name="Image">
            <type type="ident" def="ImageData"/>
          </field>
          <field type="slice" name="Transform">
            <elmtype type="pointer">
              <type type="ident" def="Transform"/>
            </elmtype>
          </field>
          <field type="pointer" name="Output">
            <type type="ident" def="OutputSettings"/>
          </field>
          <field type="pointer" name="Input">
            <type type="ident" def="InputSettings"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesTransformResponse">
          <field type="pointer" name="Image">
            <type type="ident" def="ImageData"/>
          </field>
          <field type="pointer" name="SourceMetadata">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CompositeImageOptions">
          <field type="pointer" name="SourceIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="XOffset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="YOffset">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Opacity">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Anchor">
            <type type="ident" def="CompositeImageOptions_ANCHOR"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesCanvas">
          <field type="pointer" name="Width">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Height">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Output">
            <type type="ident" def="OutputSettings"/>
          </field>
          <field type="pointer" name="Color">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesCompositeRequest">
          <field type="slice" name="Image">
            <elmtype type="pointer">
              <type type="ident" def="ImageData"/>
            </elmtype>
          </field>
          <field type="slice" name="Options">
            <elmtype type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </elmtype>
          </field>
          <field type="pointer" name="Canvas">
            <type type="ident" def="ImagesCanvas"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesCompositeResponse">
          <field type="pointer" name="Image">
            <type type="ident" def="ImageData"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesHistogramRequest">
          <field type="pointer" name="Image">
            <type type="ident" def="ImageData"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesHistogram">
          <field type="slice" name="Red">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Green">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Blue">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesHistogramResponse">
          <field type="pointer" name="Histogram">
            <type type="ident" def="ImagesHistogram"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesGetUrlBaseRequest">
          <field type="pointer" name="BlobKey">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="CreateSecureUrl">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesGetUrlBaseResponse">
          <field type="pointer" name="Url">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesDeleteUrlBaseRequest">
          <field type="pointer" name="BlobKey">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ImagesDeleteUrlBaseResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ImagesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ImagesServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="ImagesServiceTransform_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceTransform_Type"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ImagesServiceTransform_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceTransform_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="OutputSettings_MIME_TYPE"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="OutputSettings_MIME_TYPE"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="OutputSettings_MIME_TYPE"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputSettings_MIME_TYPE"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="CompositeImageOptions_ANCHOR"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions_ANCHOR"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="CompositeImageOptions_ANCHOR"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions_ANCHOR"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceTransform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesServiceTransform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetWidth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHeight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCropToFit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCropOffsetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetCropOffsetY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetRotate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHorizontalFlip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetVerticalFlip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCropLeftX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetCropTopY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetCropRightX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetCropBottomY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetAutolevels">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAllowStretch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transform"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBlobKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetWidth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHeight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCorrectExifOrientation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="InputSettings_ORIENTATION_CORRECTION_TYPE"/>
          </resultsList>
        </function>
        <function name="GetParseMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTransparentSubstitutionRgb">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMimeType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="OutputSettings_MIME_TYPE"/>
          </resultsList>
        </function>
        <function name="GetQuality">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTransform">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Transform"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOutput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InputSettings"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSourceMetadata">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesTransformResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSourceIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetXOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetYOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOpacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetAnchor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CompositeImageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="CompositeImageOptions_ANCHOR"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetWidth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHeight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOutput">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="OutputSettings"/>
            </type>
          </resultsList>
        </function>
        <function name="GetColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ImageData"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CompositeImageOptions"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCanvas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImagesCanvas"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesCompositeResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetImage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImageData"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetGreen">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBlue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHistogram">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogramResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ImagesHistogram"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBlobKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCreateSecureUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesGetUrlBaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesDeleteUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesDeleteUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBlobKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesDeleteUrlBaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesDeleteUrlBaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImagesDeleteUrlBaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ImagesServiceError_UNSPECIFIED_ERROR"/>
        <name value="ImagesServiceError_BAD_TRANSFORM_DATA"/>
        <name value="ImagesServiceError_NOT_IMAGE"/>
        <name value="ImagesServiceError_BAD_IMAGE_DATA"/>
        <name value="ImagesServiceError_IMAGE_TOO_LARGE"/>
        <name value="ImagesServiceError_INVALID_BLOB_KEY"/>
        <name value="ImagesServiceError_ACCESS_DENIED"/>
        <name value="ImagesServiceError_OBJECT_NOT_FOUND"/>
        <name value="ImagesServiceError_ErrorCode_name"/>
        <name value="ImagesServiceError_ErrorCode_value"/>
        <name value="ImagesServiceTransform_RESIZE"/>
        <name value="ImagesServiceTransform_ROTATE"/>
        <name value="ImagesServiceTransform_HORIZONTAL_FLIP"/>
        <name value="ImagesServiceTransform_VERTICAL_FLIP"/>
        <name value="ImagesServiceTransform_CROP"/>
        <name value="ImagesServiceTransform_IM_FEELING_LUCKY"/>
        <name value="ImagesServiceTransform_Type_name"/>
        <name value="ImagesServiceTransform_Type_value"/>
        <name value="InputSettings_UNCHANGED_ORIENTATION"/>
        <name value="InputSettings_CORRECT_ORIENTATION"/>
        <name value="InputSettings_ORIENTATION_CORRECTION_TYPE_name"/>
        <name value="InputSettings_ORIENTATION_CORRECTION_TYPE_value"/>
        <name value="OutputSettings_PNG"/>
        <name value="OutputSettings_JPEG"/>
        <name value="OutputSettings_WEBP"/>
        <name value="OutputSettings_MIME_TYPE_name"/>
        <name value="OutputSettings_MIME_TYPE_value"/>
        <name value="CompositeImageOptions_TOP_LEFT"/>
        <name value="CompositeImageOptions_TOP"/>
        <name value="CompositeImageOptions_TOP_RIGHT"/>
        <name value="CompositeImageOptions_LEFT"/>
        <name value="CompositeImageOptions_CENTER"/>
        <name value="CompositeImageOptions_RIGHT"/>
        <name value="CompositeImageOptions_BOTTOM_LEFT"/>
        <name value="CompositeImageOptions_BOTTOM"/>
        <name value="CompositeImageOptions_BOTTOM_RIGHT"/>
        <name value="CompositeImageOptions_ANCHOR_name"/>
        <name value="CompositeImageOptions_ANCHOR_value"/>
        <name value="Default_Transform_CropToFit"/>
        <name value="Default_Transform_CropOffsetX"/>
        <name value="Default_Transform_CropOffsetY"/>
        <name value="Default_Transform_Rotate"/>
        <name value="Default_Transform_HorizontalFlip"/>
        <name value="Default_Transform_VerticalFlip"/>
        <name value="Default_Transform_CropLeftX"/>
        <name value="Default_Transform_CropTopY"/>
        <name value="Default_Transform_CropRightX"/>
        <name value="Default_Transform_CropBottomY"/>
        <name value="Default_Transform_Autolevels"/>
        <name value="Default_Transform_AllowStretch"/>
        <name value="Default_InputSettings_CorrectExifOrientation"/>
        <name value="Default_InputSettings_ParseMetadata"/>
        <name value="Default_OutputSettings_MimeType"/>
        <name value="Default_ImagesCanvas_Color"/>
        <name value="Default_ImagesGetUrlBaseRequest_CreateSecureUrl"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/app_identity">
      <types>
        <type name="AppIdentityServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="AppIdentityServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SignForAppRequest">
          <field type="slice" name="BytesToSign">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SignForAppResponse">
          <field type="pointer" name="KeyName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="SignatureBytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetPublicCertificateForAppRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PublicCertificate">
          <field type="pointer" name="KeyName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="X509CertificatePem">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetPublicCertificateForAppResponse">
          <field type="slice" name="PublicCertificateList">
            <elmtype type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </elmtype>
          </field>
          <field type="pointer" name="MaxClientCacheTimeInSecond">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetServiceAccountNameRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetServiceAccountNameResponse">
          <field type="pointer" name="ServiceAccountName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetAccessTokenRequest">
          <field type="slice" name="Scope">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="ServiceAccountId">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ServiceAccountName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetAccessTokenResponse">
          <field type="pointer" name="AccessToken">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ExpirationTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultGcsBucketNameRequest">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GetDefaultGcsBucketNameResponse">
          <field type="pointer" name="DefaultGcsBucketName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppIdentityServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBytesToSign">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKeyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSignatureBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SignForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKeyName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetX509CertificatePem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PublicCertificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPublicCertificateList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PublicCertificate"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxClientCacheTimeInSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetPublicCertificateForAppResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetServiceAccountName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetServiceAccountNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetScope">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetServiceAccountId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetServiceAccountName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAccessToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetExpirationTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetAccessTokenResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDefaultGcsBucketName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GetDefaultGcsBucketNameResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="AppIdentityServiceError_SUCCESS"/>
        <name value="AppIdentityServiceError_UNKNOWN_SCOPE"/>
        <name value="AppIdentityServiceError_BLOB_TOO_LARGE"/>
        <name value="AppIdentityServiceError_DEADLINE_EXCEEDED"/>
        <name value="AppIdentityServiceError_NOT_A_VALID_APP"/>
        <name value="AppIdentityServiceError_UNKNOWN_ERROR"/>
        <name value="AppIdentityServiceError_NOT_ALLOWED"/>
        <name value="AppIdentityServiceError_NOT_IMPLEMENTED"/>
        <name value="AppIdentityServiceError_ErrorCode_name"/>
        <name value="AppIdentityServiceError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/mail">
      <types>
        <type type="struct" name="Message">
          <field type="ident" def="string" name="Sender"/>
          <field type="ident" def="string" name="ReplyTo"/>
          <field type="slice" name="To">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Cc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Bcc">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Subject"/>
          <field type="ident" def="string" name="Body"/>
          <field type="ident" def="string" name="HTMLBody"/>
          <field type="slice" name="Attachments">
            <elmtype type="ident" def="Attachment"/>
          </field>
          <field type="selector" name="Headers">
            <prefix value="mail"/>
            <item value="Header"/>
          </field>
        </type>
        <type type="struct" name="Attachment">
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="ContentID"/>
        </type>
      </types>
      <functions>
        <function name="Send">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SendToAdmins">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/log">
      <types>
        <type type="struct" name="Query">
          <field type="selector" name="StartTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="EndTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="slice" name="Offset">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="Incomplete"/>
          <field type="ident" def="bool" name="AppLogs"/>
          <field type="ident" def="bool" name="ApplyMinLevel"/>
          <field type="ident" def="int" name="MinLevel"/>
          <field type="slice" name="Versions">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="RequestIDs">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="AppLog">
          <field type="selector" name="Time">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="int" name="Level"/>
          <field type="ident" def="string" name="Message"/>
        </type>
        <type type="struct" name="Record">
          <field type="ident" def="string" name="AppID"/>
          <field type="ident" def="string" name="ModuleID"/>
          <field type="ident" def="string" name="VersionID"/>
          <field type="slice" name="RequestID">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="IP"/>
          <field type="ident" def="string" name="Nickname"/>
          <field type="ident" def="string" name="AppEngineRelease"/>
          <field type="selector" name="StartTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="EndTime">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="slice" name="Offset">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="Latency">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int64" name="MCycles"/>
          <field type="ident" def="string" name="Method"/>
          <field type="ident" def="string" name="Resource"/>
          <field type="ident" def="string" name="HTTPVersion"/>
          <field type="ident" def="int32" name="Status"/>
          <field type="ident" def="int64" name="ResponseSize"/>
          <field type="ident" def="string" name="Referrer"/>
          <field type="ident" def="string" name="UserAgent"/>
          <field type="ident" def="string" name="URLMapEntry"/>
          <field type="ident" def="string" name="Combined"/>
          <field type="ident" def="string" name="Host"/>
          <field type="ident" def="float64" name="Cost"/>
          <field type="ident" def="string" name="TaskQueueName"/>
          <field type="ident" def="string" name="TaskName"/>
          <field type="ident" def="bool" name="WasLoadingRequest"/>
          <field type="selector" name="PendingTime">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="Finished"/>
          <field type="slice" name="AppLogs">
            <elmtype type="ident" def="AppLog"/>
          </field>
          <field type="ident" def="string" name="InstanceID"/>
        </type>
        <type type="struct" name="Result">
          <field type="slice" name="logs">
            <elmtype type="pointer">
              <type type="ident" def="Record"/>
            </elmtype>
          </field>
          <field type="selector" name="context">
            <prefix value="context"/>
            <item value="Context"/>
          </field>
          <field type="pointer" name="request">
            <type type="selector">
              <prefix value="pb"/>
              <item value="LogReadRequest"/>
            </type>
          </field>
          <field type="ident" def="bool" name="resultsSeen"/>
          <field type="ident" def="error" name="err"/>
        </type>
      </types>
      <functions>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Record"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Result"/>
            </type>
          </resultsList>
        </function>
        <function name="Debugf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Criticalf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="Done"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/memcache">
      <types>
        <type name="MemcacheServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheSetRequest_SetPolicy" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheSetResponse_SetStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheDeleteResponse_DeleteStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheIncrementRequest_Direction" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MemcacheIncrementResponse_IncrementStatusCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="MemcacheServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="AppOverride">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="NumMemcachegBackends">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IgnoreShardlock">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MemcachePoolHint">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="MemcacheShardingStrategy">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetRequest">
          <field type="slice" name="Key">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ForCas">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGetResponse_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CasId">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ExpiresInSeconds">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetRequest">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetRequest_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="SetPolicy">
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </field>
          <field type="pointer" name="ExpirationTime">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CasId">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ForCas">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheSetResponse">
          <field type="slice" name="SetStatus">
            <elmtype type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteRequest">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </elmtype>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteRequest_Item">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="DeleteTime">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheDeleteResponse">
          <field type="slice" name="DeleteStatus">
            <elmtype type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheIncrementRequest">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Delta">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Direction">
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </field>
          <field type="pointer" name="InitialValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="InitialFlags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheIncrementResponse">
          <field type="pointer" name="NewValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="IncrementStatus">
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheBatchIncrementRequest">
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </elmtype>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheBatchIncrementResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheFlushRequest">
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheFlushResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheStatsRequest">
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MergedNamespaceStats">
          <field type="pointer" name="Hits">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Misses">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="ByteHits">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Items">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Bytes">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="OldestItemAge">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheStatsResponse">
          <field type="pointer" name="Stats">
            <type type="ident" def="MergedNamespaceStats"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailRequest">
          <field type="pointer" name="ItemCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="NameSpace">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Override">
            <type type="ident" def="AppOverride"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailResponse">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MemcacheGrabTailResponse_Item">
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Flags">
            <type type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest_Direction"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest_Direction"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumMemcachegBackends">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIgnoreShardlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMemcachePoolHint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMemcacheShardingStrategy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetForCas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheGetResponse_Item"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetCasId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetExpiresInSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGetResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheSetRequest_Item"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetSetPolicy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MemcacheSetRequest_SetPolicy"/>
          </resultsList>
        </function>
        <function name="GetExpirationTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetCasId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetForCas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheSetResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MemcacheSetResponse_SetStatusCode"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheDeleteRequest_Item"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDeleteTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteRequest_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDeleteStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="MemcacheDeleteResponse_DeleteStatusCode"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDelta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetDirection">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MemcacheIncrementRequest_Direction"/>
          </resultsList>
        </function>
        <function name="GetInitialValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetInitialFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNewValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetIncrementStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MemcacheIncrementResponse_IncrementStatusCode"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheIncrementRequest"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheBatchIncrementResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheIncrementResponse"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheFlushResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetMisses">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetByteHits">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetItems">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetOldestItemAge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MergedNamespaceStats"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItemCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetNameSpace">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AppOverride"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetItem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MemcacheGrabTailResponse_Item"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MemcacheGrabTailResponse_Item"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MemcacheServiceError_OK"/>
        <name value="MemcacheServiceError_UNSPECIFIED_ERROR"/>
        <name value="MemcacheServiceError_NAMESPACE_NOT_SET"/>
        <name value="MemcacheServiceError_PERMISSION_DENIED"/>
        <name value="MemcacheServiceError_INVALID_VALUE"/>
        <name value="MemcacheServiceError_ErrorCode_name"/>
        <name value="MemcacheServiceError_ErrorCode_value"/>
        <name value="MemcacheSetRequest_SET"/>
        <name value="MemcacheSetRequest_ADD"/>
        <name value="MemcacheSetRequest_REPLACE"/>
        <name value="MemcacheSetRequest_CAS"/>
        <name value="MemcacheSetRequest_SetPolicy_name"/>
        <name value="MemcacheSetRequest_SetPolicy_value"/>
        <name value="MemcacheSetResponse_STORED"/>
        <name value="MemcacheSetResponse_NOT_STORED"/>
        <name value="MemcacheSetResponse_ERROR"/>
        <name value="MemcacheSetResponse_EXISTS"/>
        <name value="MemcacheSetResponse_SetStatusCode_name"/>
        <name value="MemcacheSetResponse_SetStatusCode_value"/>
        <name value="MemcacheDeleteResponse_DELETED"/>
        <name value="MemcacheDeleteResponse_NOT_FOUND"/>
        <name value="MemcacheDeleteResponse_DeleteStatusCode_name"/>
        <name value="MemcacheDeleteResponse_DeleteStatusCode_value"/>
        <name value="MemcacheIncrementRequest_INCREMENT"/>
        <name value="MemcacheIncrementRequest_DECREMENT"/>
        <name value="MemcacheIncrementRequest_Direction_name"/>
        <name value="MemcacheIncrementRequest_Direction_value"/>
        <name value="MemcacheIncrementResponse_OK"/>
        <name value="MemcacheIncrementResponse_NOT_CHANGED"/>
        <name value="MemcacheIncrementResponse_ERROR"/>
        <name value="MemcacheIncrementResponse_IncrementStatusCode_name"/>
        <name value="MemcacheIncrementResponse_IncrementStatusCode_value"/>
        <name value="Default_MemcacheSetRequest_Item_SetPolicy"/>
        <name value="Default_MemcacheSetRequest_Item_ExpirationTime"/>
        <name value="Default_MemcacheDeleteRequest_Item_DeleteTime"/>
        <name value="Default_MemcacheIncrementRequest_Delta"/>
        <name value="Default_MemcacheIncrementRequest_Direction"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/image">
      <types>
        <type type="struct" name="ServingURLOptions">
          <field type="ident" def="bool" name="Secure"/>
          <field type="ident" def="int" name="Size"/>
          <field type="ident" def="bool" name="Crop"/>
        </type>
      </types>
      <functions>
        <function name="ServingURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="appengine"/>
              <item value="BlobKey"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ServingURLOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeleteServingURL">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="selector">
              <prefix value="appengine"/>
              <item value="BlobKey"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/log">
      <types>
        <type name="LogServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="LogServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UserAppLogLine">
          <field type="pointer" name="TimestampUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Level">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Message">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UserAppLogGroup">
          <field type="slice" name="LogLine">
            <elmtype type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FlushRequest">
          <field type="slice" name="Logs">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SetStatusRequest">
          <field type="pointer" name="Status">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogOffset">
          <field type="slice" name="RequestId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogLine">
          <field type="pointer" name="Time">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Level">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="LogMessage">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequestLog">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ModuleId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="RequestId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="pointer" name="Ip">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Nickname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Latency">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Mcycles">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Resource">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HttpVersion">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Status">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="ResponseSize">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Referrer">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UserAgent">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="UrlMapEntry">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Combined">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ApiMcycles">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Host">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Cost">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="TaskQueueName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TaskName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="WasLoadingRequest">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="PendingTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ReplicaIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Finished">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="CloneKey">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Line">
            <elmtype type="pointer">
              <type type="ident" def="LogLine"/>
            </elmtype>
          </field>
          <field type="pointer" name="LinesIncomplete">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="AppEngineRelease">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ExitReason">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="WasThrottledForTime">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="WasThrottledForRequests">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ThrottledTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="ServerName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogModuleVersion">
          <field type="pointer" name="ModuleId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogReadRequest">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="VersionId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="ModuleVersion">
            <elmtype type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </elmtype>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="slice" name="RequestId">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="MinimumLogLevel">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeIncomplete">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="CombinedLogRegex">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="HostRegex">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="ReplicaIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeAppLogs">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="AppLogsPerRequest">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="IncludeHost">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="IncludeAll">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CacheIterator">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="NumShards">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogReadResponse">
          <field type="slice" name="Log">
            <elmtype type="pointer">
              <type type="ident" def="RequestLog"/>
            </elmtype>
          </field>
          <field type="pointer" name="Offset">
            <type type="ident" def="LogOffset"/>
          </field>
          <field type="pointer" name="LastEndTime">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageRecord">
          <field type="pointer" name="VersionId">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="TotalSize">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Records">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageRequest">
          <field type="pointer" name="AppId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="VersionId">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="StartTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EndTime">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="ResolutionHours">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="CombineVersions">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="UsageVersion">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="VersionsOnly">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="LogUsageResponse">
          <field type="slice" name="Usage">
            <elmtype type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </elmtype>
          </field>
          <field type="pointer" name="Summary">
            <type type="ident" def="LogUsageRecord"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="LogServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="LogServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTimestampUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLogLine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UserAppLogGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UserAppLogLine"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FlushRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SetStatusRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLogMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogLine"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetModuleId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIp">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNickname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLatency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMcycles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetResource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetHttpVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStatus">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetResponseSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetReferrer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUserAgent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetUrlMapEntry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCombined">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetApiMcycles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetTaskQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetWasLoadingRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPendingTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetReplicaIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetFinished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCloneKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLine">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogLine"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetLinesIncomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAppEngineRelease">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetExitReason">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetWasThrottledForTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetWasThrottledForRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetThrottledTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetServerName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequestLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetModuleId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogModuleVersion"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetModuleVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogModuleVersion"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMinimumLogLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIncludeIncomplete">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetCombinedLogRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetHostRegex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetReplicaIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIncludeAppLogs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetAppLogsPerRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetIncludeHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetIncludeAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCacheIterator">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetNumShards">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="RequestLog"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOffset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogOffset"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLastEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogReadResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetTotalSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetRecords">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetVersionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEndTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetResolutionHours">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetCombineVersions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUsageVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetVersionsOnly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetUsage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="LogUsageRecord"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetSummary">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LogUsageResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="LogUsageRecord"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="LogServiceError_OK"/>
        <name value="LogServiceError_INVALID_REQUEST"/>
        <name value="LogServiceError_STORAGE_ERROR"/>
        <name value="LogServiceError_ErrorCode_name"/>
        <name value="LogServiceError_ErrorCode_value"/>
        <name value="Default_RequestLog_ModuleId"/>
        <name value="Default_RequestLog_ReplicaIndex"/>
        <name value="Default_RequestLog_Finished"/>
        <name value="Default_LogModuleVersion_ModuleId"/>
        <name value="Default_LogUsageRequest_ResolutionHours"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/demos/helloworld">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/remote_api">
      <types>
        <type name="RpcError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Request">
          <field type="pointer" name="ServiceName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Request">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="RequestId">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ApplicationError">
          <field type="pointer" name="Code">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Detail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RpcError">
          <field type="pointer" name="Code">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Detail">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Response">
          <field type="slice" name="Response">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Exception">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ApplicationError">
            <type type="ident" def="ApplicationError"/>
          </field>
          <field type="slice" name="JavaException">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="RpcError">
            <type type="ident" def="RpcError"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="RpcError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RpcError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="RpcError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetServiceName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequestId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetDetail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetResponse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetException">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetApplicationError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ApplicationError"/>
            </type>
          </resultsList>
        </function>
        <function name="GetJavaException">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRpcError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Response"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RpcError"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="RpcError_UNKNOWN"/>
        <name value="RpcError_CALL_NOT_FOUND"/>
        <name value="RpcError_PARSE_ERROR"/>
        <name value="RpcError_SECURITY_VIOLATION"/>
        <name value="RpcError_OVER_QUOTA"/>
        <name value="RpcError_REQUEST_TOO_LARGE"/>
        <name value="RpcError_CAPABILITY_DISABLED"/>
        <name value="RpcError_FEATURE_DISABLED"/>
        <name value="RpcError_BAD_REQUEST"/>
        <name value="RpcError_RESPONSE_TOO_LARGE"/>
        <name value="RpcError_CANCELLED"/>
        <name value="RpcError_REPLAY_ERROR"/>
        <name value="RpcError_DEADLINE_EXCEEDED"/>
        <name value="RpcError_ErrorCode_name"/>
        <name value="RpcError_ErrorCode_value"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal">
      <types>
        <type type="struct" name="CallOptions">
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="APIError">
          <field type="ident" def="string" name="Service"/>
          <field type="ident" def="string" name="Detail"/>
          <field type="ident" def="int32" name="Code"/>
        </type>
        <type type="struct" name="CallError">
          <field type="ident" def="string" name="Detail"/>
          <field type="ident" def="int32" name="Code"/>
          <field type="ident" def="bool" name="Timeout"/>
        </type>
      </types>
      <functions>
        <function name="RegisterTransactionSetter">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RunTransactionOnce">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="func">
              <paramsList>
                <type type="selector">
                  <prefix value="netcontext"/>
                  <item value="Context"/>
                </type>
              </paramsList>
              <resultsList>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterErrorCodeMap">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisterTimeoutErrorCode">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="APIError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CallError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="IsTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CallError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Main">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="DefaultVersionHostname">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RequestID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Datacenter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ServerSoftware">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ModuleName">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="VersionID">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="InstanceID">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WithCallOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="callOverrideFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="WithLogOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="logOverrideFunc"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="WithAppIDOverride">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="BackgroundContext">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="Header">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Header"/>
            </type>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Call">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
            <type type="pointer">
              <type type="ident" def="CallOptions"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Request">
          <recvList>
            <type type="pointer">
              <type type="ident" def="context"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Logf">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="int64"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="FullyQualifiedAppID">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ContextForTesting">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="VirtAPI">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="netcontext"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrConcurrentTransaction"/>
        <name value="NamespaceMods"/>
      </names>
    </package>
    <package importpath="google.golang.org/appengine/internal/base">
      <types>
        <type type="struct" name="StringProto">
          <field type="pointer" name="Value">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Integer32Proto">
          <field type="pointer" name="Value">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Integer64Proto">
          <field type="pointer" name="Value">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BoolProto">
          <field type="pointer" name="Value">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DoubleProto">
          <field type="pointer" name="Value">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="BytesProto">
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="VoidProto">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StringProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer32Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Integer64Proto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BoolProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DoubleProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="BytesProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VoidProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VoidProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="google.golang.org/appengine/internal/taskqueue">
      <types>
        <type name="TaskQueueServiceError_ErrorCode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueMode_Mode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueAddRequest_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="TaskQueueQueryTasksResponse_Task_RequestMethod" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="TaskQueueServiceError">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskPayload">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueRetryParameters">
          <field type="pointer" name="RetryLimit">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="AgeLimitSec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="MinBackoffSec">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxBackoffSec">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxDoublings">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAcl">
          <field type="slice" name="UserEmail">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="WriterEmail">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueHttpHeader">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueMode">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </field>
          <field type="slice" name="Url">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </elmtype>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Transaction">
            <type type="selector">
              <prefix value="appengine"/>
              <item value="Transaction"/>
            </type>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Crontimetable">
            <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
          </field>
          <field type="slice" name="Description">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Payload">
            <type type="ident" def="TaskPayload"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest_Header">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddRequest_CronTimetable">
          <field type="slice" name="Schedule">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Timezone">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueAddResponse">
          <field type="slice" name="ChosenTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddRequest">
          <field type="slice" name="AddRequest">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddResponse">
          <field type="slice" name="Taskresult">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueBulkAddResponse_TaskResult">
          <field type="pointer" name="Result">
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="ChosenTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteResponse">
          <field type="slice" name="Result">
            <elmtype type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueForceRunRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueForceRunResponse">
          <field type="pointer" name="Result">
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="BucketRefillPerSecond">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="BucketCapacity">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="UserSpecifiedRate">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="MaxConcurrentRequests">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="TaskQueueAcl"/>
          </field>
          <field type="slice" name="HeaderOverride">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="MaxRows">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesResponse">
          <field type="slice" name="Queue">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueuesResponse_Queue">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="BucketRefillPerSecond">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="BucketCapacity">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="UserSpecifiedRate">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Paused">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="MaxConcurrentRequests">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Mode">
            <type type="ident" def="TaskQueueMode_Mode"/>
          </field>
          <field type="pointer" name="Acl">
            <type type="ident" def="TaskQueueAcl"/>
          </field>
          <field type="slice" name="HeaderOverride">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </elmtype>
          </field>
          <field type="pointer" name="CreatorName">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="MaxNumTasks">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueScannerQueueInfo">
          <field type="pointer" name="ExecutedLastMinute">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ExecutedLastHour">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="SamplingDurationSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="RequestsInFlight">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="EnforcedRate">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsResponse">
          <field type="slice" name="Queuestats">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchQueueStatsResponse_QueueStats">
          <field type="pointer" name="NumTasks">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OldestEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ScannerInfo">
            <type type="ident" def="TaskQueueScannerQueueInfo"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePauseQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Pause">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePauseQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePurgeQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueuePurgeQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteQueueRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteQueueResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteGroupRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueDeleteGroupResponse">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="StartTaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="StartEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="StartTag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="MaxRows">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse">
          <field type="slice" name="Task">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task">
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Url">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Method">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </field>
          <field type="pointer" name="RetryCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Header">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </elmtype>
          </field>
          <field type="pointer" name="BodySize">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="CreationTimeUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Crontimetable">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
          </field>
          <field type="pointer" name="Runlog">
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
          </field>
          <field type="slice" name="Description">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Payload">
            <type type="ident" def="TaskPayload"/>
          </field>
          <field type="pointer" name="RetryParameters">
            <type type="ident" def="TaskQueueRetryParameters"/>
          </field>
          <field type="pointer" name="FirstTryUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="ExecutionCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_Header">
          <field type="slice" name="Key">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_CronTimetable">
          <field type="slice" name="Schedule">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Timezone">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryTasksResponse_Task_RunLog">
          <field type="pointer" name="DispatchedUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="LagUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ElapsedUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="ResponseCode">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="RetryReason">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchTaskRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueFetchTaskResponse">
          <field type="pointer" name="Task">
            <type type="ident" def="TaskQueueQueryTasksResponse"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateStorageLimitRequest">
          <field type="slice" name="AppId">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Limit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueUpdateStorageLimitResponse">
          <field type="pointer" name="NewLimit">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="LeaseSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="MaxTasks">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="GroupByTag">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksResponse">
          <field type="slice" name="Task">
            <elmtype type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueQueryAndOwnTasksResponse_Task">
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="RetryCount">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="Body">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Tag">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueModifyTaskLeaseRequest">
          <field type="slice" name="QueueName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="TaskName">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="EtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="LeaseSeconds">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="TaskQueueModifyTaskLeaseResponse">
          <field type="pointer" name="UpdatedEtaUsec">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode_Mode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode_Mode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueServiceError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRetryLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetAgeLimitSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMinBackoffSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetMaxBackoffSec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetMaxDoublings">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetUserEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetWriterEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueHttpHeader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueMode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueAddRequest_RequestMethod"/>
          </resultsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueAddRequest_Header"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTransaction">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="appengine"/>
                <item value="Transaction"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCrontimetable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </resultsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSchedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTimezone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddRequest_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetChosenTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAddRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueAddRequest"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTaskresult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </resultsList>
        </function>
        <function name="GetChosenTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueBulkAddResponse_TaskResult"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="TaskQueueServiceError_ErrorCode"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueForceRunResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueServiceError_ErrorCode"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBucketRefillPerSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetBucketCapacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetUserSpecifiedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxConcurrentRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </resultsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHeaderOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueHttpHeader"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxRows">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBucketRefillPerSecond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetBucketCapacity">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetUserSpecifiedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPaused">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxConcurrentRequests">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueMode_Mode"/>
          </resultsList>
        </function>
        <function name="GetAcl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueAcl"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHeaderOverride">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueHttpHeader"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCreatorName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueuesResponse_Queue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxNumTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetExecutedLastMinute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetExecutedLastHour">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetSamplingDurationSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetRequestsInFlight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEnforcedRate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueuestats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNumTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOldestEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetScannerInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchQueueStatsResponse_QueueStats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueScannerQueueInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPause">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePauseQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueuePurgeQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteQueueResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueDeleteGroupResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStartEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetStartTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMaxRows">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetUrl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TaskQueueQueryTasksResponse_Task_RequestMethod"/>
          </resultsList>
        </function>
        <function name="GetRetryCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBodySize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetCreationTimeUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetCrontimetable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRunlog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </resultsList>
        </function>
        <function name="GetDescription">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskPayload"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRetryParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueRetryParameters"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFirstTryUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetExecutionCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSchedule">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTimezone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_CronTimetable"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetDispatchedUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLagUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetElapsedUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetResponseCode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetRetryReason">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse_Task_RunLog"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueFetchTaskResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryTasksResponse"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetAppId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNewLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueUpdateStorageLimitResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLeaseSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetMaxTasks">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetGroupByTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTask">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetRetryCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetBody">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTag">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueQueryAndOwnTasksResponse_Task"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetQueueName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTaskName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetLeaseSeconds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetUpdatedEtaUsec">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TaskQueueModifyTaskLeaseResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="TaskQueueServiceError_OK"/>
        <name value="TaskQueueServiceError_UNKNOWN_QUEUE"/>
        <name value="TaskQueueServiceError_TRANSIENT_ERROR"/>
        <name value="TaskQueueServiceError_INTERNAL_ERROR"/>
        <name value="TaskQueueServiceError_TASK_TOO_LARGE"/>
        <name value="TaskQueueServiceError_INVALID_TASK_NAME"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_NAME"/>
        <name value="TaskQueueServiceError_INVALID_URL"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_RATE"/>
        <name value="TaskQueueServiceError_PERMISSION_DENIED"/>
        <name value="TaskQueueServiceError_TASK_ALREADY_EXISTS"/>
        <name value="TaskQueueServiceError_TOMBSTONED_TASK"/>
        <name value="TaskQueueServiceError_INVALID_ETA"/>
        <name value="TaskQueueServiceError_INVALID_REQUEST"/>
        <name value="TaskQueueServiceError_UNKNOWN_TASK"/>
        <name value="TaskQueueServiceError_TOMBSTONED_QUEUE"/>
        <name value="TaskQueueServiceError_DUPLICATE_TASK_NAME"/>
        <name value="TaskQueueServiceError_SKIPPED"/>
        <name value="TaskQueueServiceError_TOO_MANY_TASKS"/>
        <name value="TaskQueueServiceError_INVALID_PAYLOAD"/>
        <name value="TaskQueueServiceError_INVALID_RETRY_PARAMETERS"/>
        <name value="TaskQueueServiceError_INVALID_QUEUE_MODE"/>
        <name value="TaskQueueServiceError_ACL_LOOKUP_ERROR"/>
        <name value="TaskQueueServiceError_TRANSACTIONAL_REQUEST_TOO_LARGE"/>
        <name value="TaskQueueServiceError_INCORRECT_CREATOR_NAME"/>
        <name value="TaskQueueServiceError_TASK_LEASE_EXPIRED"/>
        <name value="TaskQueueServiceError_QUEUE_PAUSED"/>
        <name value="TaskQueueServiceError_INVALID_TAG"/>
        <name value="TaskQueueServiceError_DATASTORE_ERROR"/>
        <name value="TaskQueueServiceError_ErrorCode_name"/>
        <name value="TaskQueueServiceError_ErrorCode_value"/>
        <name value="TaskQueueMode_PUSH"/>
        <name value="TaskQueueMode_PULL"/>
        <name value="TaskQueueMode_Mode_name"/>
        <name value="TaskQueueMode_Mode_value"/>
        <name value="TaskQueueAddRequest_GET"/>
        <name value="TaskQueueAddRequest_POST"/>
        <name value="TaskQueueAddRequest_HEAD"/>
        <name value="TaskQueueAddRequest_PUT"/>
        <name value="TaskQueueAddRequest_DELETE"/>
        <name value="TaskQueueAddRequest_RequestMethod_name"/>
        <name value="TaskQueueAddRequest_RequestMethod_value"/>
        <name value="TaskQueueQueryTasksResponse_Task_GET"/>
        <name value="TaskQueueQueryTasksResponse_Task_POST"/>
        <name value="TaskQueueQueryTasksResponse_Task_HEAD"/>
        <name value="TaskQueueQueryTasksResponse_Task_PUT"/>
        <name value="TaskQueueQueryTasksResponse_Task_DELETE"/>
        <name value="TaskQueueQueryTasksResponse_Task_RequestMethod_name"/>
        <name value="TaskQueueQueryTasksResponse_Task_RequestMethod_value"/>
        <name value="Default_TaskQueueRetryParameters_MinBackoffSec"/>
        <name value="Default_TaskQueueRetryParameters_MaxBackoffSec"/>
        <name value="Default_TaskQueueRetryParameters_MaxDoublings"/>
        <name value="Default_TaskQueueAddRequest_Method"/>
        <name value="Default_TaskQueueAddRequest_Mode"/>
        <name value="Default_TaskQueueUpdateQueueRequest_Mode"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_Paused"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_Mode"/>
        <name value="Default_TaskQueueFetchQueuesResponse_Queue_CreatorName"/>
        <name value="Default_TaskQueueFetchQueueStatsRequest_MaxNumTasks"/>
        <name value="Default_TaskQueueQueryTasksRequest_MaxRows"/>
        <name value="Default_TaskQueueQueryTasksResponse_Task_RetryCount"/>
        <name value="Default_TaskQueueQueryTasksResponse_Task_ExecutionCount"/>
        <name value="Default_TaskQueueQueryAndOwnTasksRequest_GroupByTag"/>
        <name value="Default_TaskQueueQueryAndOwnTasksResponse_Task_RetryCount"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="regexp"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="golang.org/x/net/context"/>
    <import path="google.golang.org/appengine/internal"/>
    <import path="google.golang.org/appengine/internal/base"/>
    <import path="time"/>
    <import path="google.golang.org/appengine/internal/app_identity"/>
    <import path="google.golang.org/appengine/internal/modules"/>
    <import path="net/http"/>
    <import path="errors"/>
    <import path="google.golang.org/appengine"/>
    <import path="google.golang.org/appengine/internal/xmpp"/>
    <import path="strings"/>
    <import path="google.golang.org/appengine/internal/user"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="net/url"/>
    <import path="strconv"/>
    <import path="google.golang.org/appengine/internal/urlfetch"/>
    <import path="google.golang.org/appengine/internal/datastore"/>
    <import path="google.golang.org/appengine/internal/taskqueue"/>
    <import path="reflect"/>
    <import path="unicode/utf8"/>
    <import path="google.golang.org/appengine/internal/search"/>
    <import path="google.golang.org/appengine/internal/remote_api"/>
    <import path="google.golang.org/appengine/log"/>
    <import path="google.golang.org/appengine/user"/>
    <import path="bytes"/>
    <import path="log"/>
    <import path="math/rand"/>
    <import path="encoding/gob"/>
    <import path="encoding/json"/>
    <import path="google.golang.org/appengine/internal/memcache"/>
    <import path="net/mail"/>
    <import path="google.golang.org/appengine/internal/mail"/>
    <import path="google.golang.org/appengine/internal/log"/>
    <import path="net"/>
    <import path="runtime"/>
    <import path="sync"/>
    <import path="os"/>
    <import path="sync/atomic"/>
    <import path="math"/>
    <import path="testing"/>
    <import path="google.golang.org/appengine/internal/image"/>
    <import path="html/template"/>
    <import path="google.golang.org/appengine/datastore"/>
    <import path="google.golang.org/appengine/taskqueue"/>
    <import path="encoding/base64"/>
    <import path="unicode"/>
    <import path="google.golang.org/appengine/internal/channel"/>
  </imports>
</project>
