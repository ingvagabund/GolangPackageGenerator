<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-syndtr-gosnappy-0-0.4.git156a073.fc24">
  <packages>
    <package importpath="github.com/syndtr/gosnappy/snappy">
      <types>
        <type type="struct" name="Writer">
          <field type="selector" name="w">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="slice" name="enc">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="array" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="wroteHeader"/>
        </type>
        <type type="struct" name="Reader">
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="ident" def="error" name="err"/>
          <field type="slice" name="decoded">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int" name="i"/>
          <field type="ident" def="int" name="j"/>
          <field type="ident" def="bool" name="readHeader"/>
        </type>
      </types>
      <functions>
        <function name="Encode">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MaxEncodedLen">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewWriter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Writer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodedLen">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrCorrupt"/>
        <name value="ErrUnsupported"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="hash/crc32"/>
    <import path="encoding/binary"/>
    <import path="io"/>
    <import path="errors"/>
  </imports>
</project>
