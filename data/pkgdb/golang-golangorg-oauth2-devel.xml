<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-googlecode-goauth2-0-0.12.gitb5adcc2.fc24">
  <packages>
    <package importpath="golang.org/x/oauth2/github">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/paypal">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
        <name value="SandboxEndpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/linkedin">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/vk">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/clientcredentials">
      <types>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="ClientID"/>
          <field type="ident" def="string" name="ClientSecret"/>
          <field type="ident" def="string" name="TokenURL"/>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Client">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TokenSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tokenSource"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="golang.org/x/oauth2/internal">
      <types>
        <type type="struct" name="ContextKey"/>
        <type name="ContextClientFunc" type="func">
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </type>
        <type type="struct" name="ErrorTransport">
          <field type="ident" def="error" name="Err"/>
        </type>
        <type type="struct" name="Token">
          <field type="ident" def="string" name="AccessToken"/>
          <field type="ident" def="string" name="TokenType"/>
          <field type="ident" def="string" name="RefreshToken"/>
          <field type="selector" name="Expiry">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="interface" name="Raw"/>
        </type>
      </types>
      <functions>
        <function name="RegisterContextClientFunc">
          <recvList/>
          <paramsList>
            <type type="ident" def="ContextClientFunc"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ContextClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ContextTransport">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="RoundTripper"/>
            </type>
          </resultsList>
        </function>
        <function name="RoundTrip">
          <recvList>
            <type type="ident" def="ErrorTransport"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="expirationTime"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RetrieveToken">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="url"/>
              <item value="Values"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseKey">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="rsa"/>
                <item value="PrivateKey"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseINI">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CondVal">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="HTTPClient"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/jws">
      <types>
        <type type="struct" name="ClaimSet">
          <field type="ident" def="string" name="Iss"/>
          <field type="ident" def="string" name="Scope"/>
          <field type="ident" def="string" name="Aud"/>
          <field type="ident" def="int64" name="Exp"/>
          <field type="ident" def="int64" name="Iat"/>
          <field type="ident" def="string" name="Typ"/>
          <field type="ident" def="string" name="Sub"/>
          <field type="ident" def="string" name="Prn"/>
          <field type="map" name="PrivateClaims">
            <keytype type="ident" def="string"/>
            <valtype type="interface"/>
          </field>
          <field type="selector" name="exp">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="iat">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
        </type>
        <type type="struct" name="Header">
          <field type="ident" def="string" name="Algorithm"/>
          <field type="ident" def="string" name="Typ"/>
        </type>
      </types>
      <functions>
        <function name="Decode">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ClaimSet"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Encode">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ClaimSet"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="rsa"/>
                <item value="PrivateKey"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="golang.org/x/oauth2/google">
      <types>
        <type type="struct" name="SDKConfig">
          <field type="selector" name="conf">
            <prefix value="oauth2"/>
            <item value="Config"/>
          </field>
          <field type="pointer" name="initialToken">
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="Token"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewSDKConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SDKConfig"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Client">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SDKConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TokenSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SDKConfig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Scopes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SDKConfig"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ConfigFromJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JWTConfigFromJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="jwt"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ComputeTokenSource">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="ident" def="computeSource"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DefaultTokenSource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AppEngineTokenSource">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="appEngineTokenSource"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Endpoint"/>
        <name value="JWTTokenURL"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/facebook">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/odnoklassniki">
      <types/>
      <functions/>
      <names>
        <name value="Endpoint"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2">
      <types>
        <type type="struct" name="Transport">
          <field type="ident" def="TokenSource" name="Source"/>
          <field type="selector" name="Base">
            <prefix value="http"/>
            <item value="RoundTripper"/>
          </field>
          <field type="selector" name="mu">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="modReq">
            <keytype type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </keytype>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Token">
          <field type="ident" def="string" name="AccessToken"/>
          <field type="ident" def="string" name="TokenType"/>
          <field type="ident" def="string" name="RefreshToken"/>
          <field type="selector" name="Expiry">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="interface" name="raw"/>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="ClientID"/>
          <field type="ident" def="string" name="ClientSecret"/>
          <field type="ident" def="Endpoint" name="Endpoint"/>
          <field type="ident" def="string" name="RedirectURL"/>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
        <type name="TokenSource" type="interface">
          <method name="Token">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Token"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Endpoint">
          <field type="ident" def="string" name="AuthURL"/>
          <field type="ident" def="string" name="TokenURL"/>
        </type>
        <type name="AuthCodeOption" type="interface">
          <method name="setValue">
            <paramsList>
              <type type="selector">
                <prefix value="url"/>
                <item value="Values"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="RoundTrip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Response"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CancelRequest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Transport"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="onEOFReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="onEOFReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Type">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetAuthHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WithExtra">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </resultsList>
        </function>
        <function name="Extra">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetAuthURLParam">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="AuthCodeOption"/>
          </resultsList>
        </function>
        <function name="AuthCodeURL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="AuthCodeOption"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="PasswordCredentialsToken">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Exchange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Client">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TokenSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="TokenSource"/>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tokenRefresher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="reuseTokenSource"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="StaticTokenSource">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="TokenSource"/>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="ident" def="staticTokenSource"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="TokenSource"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ReuseTokenSource">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Token"/>
            </type>
            <type type="ident" def="TokenSource"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="TokenSource"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="NoContext"/>
        <name value="AccessTypeOnline"/>
        <name value="AccessTypeOffline"/>
        <name value="ApprovalForce"/>
        <name value="HTTPClient"/>
      </names>
    </package>
    <package importpath="golang.org/x/oauth2/jwt">
      <types>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Email"/>
          <field type="slice" name="PrivateKey">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="string" name="Subject"/>
          <field type="slice" name="Scopes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="TokenURL"/>
        </type>
      </types>
      <functions>
        <function name="TokenSource">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="oauth2"/>
              <item value="TokenSource"/>
            </type>
          </resultsList>
        </function>
        <function name="Client">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Client"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="ident" def="jwtSource"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="oauth2"/>
                <item value="Token"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="errors"/>
    <import path="io"/>
    <import path="net/http"/>
    <import path="sync"/>
    <import path="net/url"/>
    <import path="strings"/>
    <import path="time"/>
    <import path="golang.org/x/net/context"/>
    <import path="golang.org/x/oauth2/internal"/>
    <import path="bytes"/>
    <import path="google.golang.org/appengine/urlfetch"/>
    <import path="golang.org/x/oauth2"/>
    <import path="encoding/json"/>
    <import path="fmt"/>
    <import path="io/ioutil"/>
    <import path="golang.org/x/oauth2/jws"/>
    <import path="crypto"/>
    <import path="crypto/rand"/>
    <import path="crypto/rsa"/>
    <import path="crypto/sha256"/>
    <import path="encoding/base64"/>
    <import path="mime"/>
    <import path="strconv"/>
    <import path="bufio"/>
    <import path="crypto/x509"/>
    <import path="encoding/pem"/>
    <import path="os"/>
    <import path="os/user"/>
    <import path="path/filepath"/>
    <import path="runtime"/>
    <import path="golang.org/x/oauth2/jwt"/>
    <import path="google.golang.org/cloud/compute/metadata"/>
    <import path="google.golang.org/appengine"/>
    <import path="sort"/>
  </imports>
</project>
