<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-10gen-openssl-0-0.4.git4c6dbaf.fc24">
  <packages>
    <package importpath="github.com/10gen/openssl">
      <types>
        <type type="struct" name="SHA256Hash">
          <field type="selector" name="ctx">
            <prefix value="C"/>
            <item value="EVP_MD_CTX"/>
          </field>
          <field type="pointer" name="engine">
            <type type="ident" def="Engine"/>
          </field>
        </type>
        <type type="struct" name="SHA1Hash">
          <field type="selector" name="ctx">
            <prefix value="C"/>
            <item value="EVP_MD_CTX"/>
          </field>
          <field type="pointer" name="engine">
            <type type="ident" def="Engine"/>
          </field>
        </type>
        <type type="struct" name="Conn"/>
        <type type="struct" name="Ctx"/>
        <type name="SSLVersion" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="CertificateStore"/>
        <type name="Options" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Modes" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="VerifyOptions" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="SessionCacheModes" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="CheckFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="PublicKey" type="interface">
          <method name="MarshalPKIXPublicKeyPEM">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKIXPublicKeyDER">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="evpPKey">
            <paramsList/>
            <resultsList>
              <type type="struct" name=""/>
            </resultsList>
          </method>
        </type>
        <type name="PrivateKey" type="interface">
          <method name="MarshalPKCS1PrivateKeyPEM">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKCS1PrivateKeyDER">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Certificate"/>
        <type name="NID" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="DialFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Method" type="pointer">
          <type type="pointer">
            <type type="selector">
              <prefix value="C"/>
              <item value="EVP_MD"/>
            </type>
          </type>
        </type>
        <type name="PublicKey" type="interface">
          <method name="VerifyPKCS1v15">
            <paramsList>
              <type type="ident" def="Method"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKIXPublicKeyPEM">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKIXPublicKeyDER">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="evpPKey">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="C"/>
                  <item value="EVP_PKEY"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type name="PrivateKey" type="interface">
          <method name="SignPKCS1v15">
            <paramsList>
              <type type="ident" def="Method"/>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKCS1PrivateKeyPEM">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="MarshalPKCS1PrivateKeyDER">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="CheckFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Engine">
          <field type="pointer" name="e">
            <type type="selector">
              <prefix value="C"/>
              <item value="ENGINE"/>
            </type>
          </field>
        </type>
        <type type="struct" name="DH">
          <field type="pointer" name="dh">
            <type type="selector">
              <prefix value="C"/>
              <item value="struct_dh_st"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Ctx">
          <field type="pointer" name="ctx">
            <type type="selector">
              <prefix value="C"/>
              <item value="SSL_CTX"/>
            </type>
          </field>
          <field type="pointer" name="cert">
            <type type="ident" def="Certificate"/>
          </field>
          <field type="slice" name="chain">
            <elmtype type="pointer">
              <type type="ident" def="Certificate"/>
            </elmtype>
          </field>
          <field type="ident" def="PrivateKey" name="key"/>
          <field type="ident" def="VerifyCallback" name="verify_cb"/>
        </type>
        <type name="SSLVersion" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="EllipticCurve" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="StackOfX509Name">
          <field type="selector" name="stack">
            <prefix value="C"/>
            <item value="STACK_OF_X509_NAME_not_a_macro"/>
          </field>
          <field type="ident" def="bool" name="shared"/>
        </type>
        <type type="struct" name="CertificateStore">
          <field type="pointer" name="store">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509_STORE"/>
            </type>
          </field>
          <field type="pointer" name="ctx">
            <type type="ident" def="Ctx"/>
          </field>
          <field type="slice" name="certs">
            <elmtype type="pointer">
              <type type="ident" def="Certificate"/>
            </elmtype>
          </field>
        </type>
        <type name="X509VerificationFlag" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="CertificateStoreLookup">
          <field type="pointer" name="lookup">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509_LOOKUP"/>
            </type>
          </field>
          <field type="pointer" name="store">
            <type type="ident" def="CertificateStore"/>
          </field>
        </type>
        <type name="X509LookupMethod" type="pointer">
          <type type="pointer">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509_LOOKUP_METHOD"/>
            </type>
          </type>
        </type>
        <type type="struct" name="CertificateStoreCtx">
          <field type="pointer" name="ctx">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509_STORE_CTX"/>
            </type>
          </field>
          <field type="pointer" name="ssl_ctx">
            <type type="ident" def="Ctx"/>
          </field>
        </type>
        <type name="Options" type="ident">
          <type type="ident" def="uint"/>
        </type>
        <type name="Modes" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="VerifyOptions" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Filetypes" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="VerifyCallback" type="func">
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="ident" def="CertificateStoreCtx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </type>
        <type name="SessionCacheModes" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Conn">
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Conn"/>
          </field>
          <field type="pointer" name="ssl">
            <type type="selector">
              <prefix value="C"/>
              <item value="SSL"/>
            </type>
          </field>
          <field type="pointer" name="ctx">
            <type type="ident" def="Ctx"/>
          </field>
          <field type="pointer" name="into_ssl">
            <type type="ident" def="readBio"/>
          </field>
          <field type="pointer" name="from_ssl">
            <type type="ident" def="writeBio"/>
          </field>
          <field type="ident" def="bool" name="is_shutdown"/>
          <field type="selector" name="mtx">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="want_read_future">
            <type type="selector">
              <prefix value="utils"/>
              <item value="Future"/>
            </type>
          </field>
        </type>
        <type name="VerifyResult" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ConnectionState">
          <field type="pointer" name="Certificate">
            <type type="ident" def="Certificate"/>
          </field>
          <field type="ident" def="error" name="CertificateError"/>
          <field type="slice" name="CertificateChain">
            <elmtype type="pointer">
              <type type="ident" def="Certificate"/>
            </elmtype>
          </field>
          <field type="ident" def="error" name="CertificateChainError"/>
        </type>
        <type name="CipherCtx" type="interface">
          <method name="Cipher">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="ident" def="Cipher"/>
              </type>
            </resultsList>
          </method>
          <method name="BlockSize">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="KeySize">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="IVSize">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Cipher">
          <field type="pointer" name="ptr">
            <type type="selector">
              <prefix value="C"/>
              <item value="EVP_CIPHER"/>
            </type>
          </field>
        </type>
        <type name="EncryptionCipherCtx" type="interface">
          <method name="EncryptUpdate">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="EncryptFinal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="DecryptionCipherCtx" type="interface">
          <method name="DecryptUpdate">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="DecryptFinal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="EVP_MD" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Certificate">
          <field type="pointer" name="x">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509"/>
            </type>
          </field>
          <field type="pointer" name="Issuer">
            <type type="ident" def="Certificate"/>
          </field>
          <field type="interface" name="ref"/>
          <field type="ident" def="PublicKey" name="pubKey"/>
        </type>
        <type type="struct" name="CertificateInfo">
          <field type="ident" def="int" name="Serial"/>
          <field type="selector" name="Issued">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="Expires">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="Country"/>
          <field type="ident" def="string" name="Organization"/>
          <field type="ident" def="string" name="CommonName"/>
        </type>
        <type type="struct" name="Name">
          <field type="pointer" name="name">
            <type type="selector">
              <prefix value="C"/>
              <item value="X509_NAME"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewSHA256Hash">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSHA256HashWithEngine">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Sum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA256Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="array">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SHA256">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="array">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSHA1Hash">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewSHA1HashWithEngine">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Sum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SHA1Hash"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="array">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SHA1">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="array">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SplitPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Client">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Server">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Handshake">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PeerCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LocalAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="RemoteAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtxWithVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="SSLVersion"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtx">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtxFromFiles">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UsePrivateKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PrivateKey"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCertificateStore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </resultsList>
        </function>
        <function name="AddCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadVerifyLocations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Options"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Options"/>
          </resultsList>
        </function>
        <function name="SetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Modes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Modes"/>
          </resultsList>
        </function>
        <function name="SetVerify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VerifyOptions"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetVerifyDepth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetSessionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetCipherList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetSessionCacheMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="SessionCacheModes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="SessionCacheModes"/>
          </resultsList>
        </function>
        <function name="CheckHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckIP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadPrivateKeyFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="PrivateKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadCertificateFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPEM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PublicKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="PublicKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="listener"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewListener">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
          </resultsList>
        </function>
        <function name="Listen">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="DialFlags"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SignPKCS1v15">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Method"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyPKCS1v15">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Method"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPKCS1PrivateKeyPEM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPKCS1PrivateKeyDER">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPKIXPublicKeyPEM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPKIXPublicKeyDER">
          <recvList>
            <type type="pointer">
              <type type="ident" def="pKey"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadPrivateKeyFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="PrivateKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadPublicKeyFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="PublicKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadPublicKeyFromDER">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="PublicKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GenerateRSAKey">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="PrivateKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListenAndServeTLS">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServerListenAndServeTLS">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Server"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckEmail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckIP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="CheckFlags"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FIPSModeSet">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EngineById">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadDHParametersFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DH"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDHParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="DH"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtxWithVersion">
          <recvList/>
          <paramsList>
            <type type="ident" def="SSLVersion"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtx">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCtxFromFiles">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseCertificateChainFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UsePrivateKeyFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Filetypes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UsePrivateKeyFileWithPassword">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Filetypes"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CheckPrivateKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadClientCAFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StackOfX509Name"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetClientCAList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="StackOfX509Name"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddChainCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UsePrivateKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PrivateKey"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCertificateStore">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadCertificatesFromPEM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCertificateStore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </resultsList>
        </function>
        <function name="AddCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetFlags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="X509VerificationFlag"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="X509LookupFile">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="X509LookupMethod"/>
          </resultsList>
        </function>
        <function name="X509LookupHashDir">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="X509LookupMethod"/>
          </resultsList>
        </function>
        <function name="AddLookup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStore"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="X509LookupMethod"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="CertificateStoreLookup"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadCRLFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStoreLookup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Err">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStoreCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Depth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStoreCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="GetCurrentCert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CertificateStoreCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </resultsList>
        </function>
        <function name="LoadVerifyLocations">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Options"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Options"/>
          </resultsList>
        </function>
        <function name="ClearOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Options"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Options"/>
          </resultsList>
        </function>
        <function name="SetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Modes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Modes"/>
          </resultsList>
        </function>
        <function name="GetMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Modes"/>
          </resultsList>
        </function>
        <function name="SetVerify">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VerifyOptions"/>
            <type type="ident" def="VerifyCallback"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetVerifyMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VerifyOptions"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetVerifyCallback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="VerifyCallback"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="VerifyMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="VerifyOptions"/>
          </resultsList>
        </function>
        <function name="SetVerifyDepth">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetSessionId">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetCipherList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetSessionCacheMode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="SessionCacheModes"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="SessionCacheModes"/>
          </resultsList>
        </function>
        <function name="Client">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Server">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Ctx"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CurrentCipher">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Handshake">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PeerCertificate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PeerCertificateChain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Certificate"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetVerifyResults">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ConnectionState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="ConnectionState"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyHostname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LocalAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="RemoteAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnderlyingConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </resultsList>
        </function>
        <function name="SetTlsExtHostName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="VerifyResult">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="VerifyResult"/>
          </resultsList>
        </function>
        <function name="Nid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="NID"/>
          </resultsList>
        </function>
        <function name="ShortName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="BlockSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="KeySize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="IVSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Nid2ShortName">
          <recvList/>
          <paramsList>
            <type type="ident" def="NID"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCipherByName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetCipherByNid">
          <recvList/>
          <paramsList>
            <type type="ident" def="NID"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Cipher">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
          </resultsList>
        </function>
        <function name="BlockSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="KeySize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="IVSize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewEncryptionCipherCtx">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="EncryptionCipherCtx"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewDecryptionCipherCtx">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Cipher"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Engine"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="DecryptionCipherCtx"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncryptUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="encryptionCipherCtx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecryptUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="decryptionCipherCtx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncryptFinal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="encryptionCipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecryptFinal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="decryptionCipherCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewName">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddTextEntry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddTextEntries">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewCertificate">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="CertificateInfo"/>
            </type>
            <type type="ident" def="PublicKey"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetSubjectName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetIssuerName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetSubjectName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetIssuer">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetIssuerName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Name"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetSerial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetIssueDate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetExpireDate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetPubKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PublicKey"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Sign">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="PrivateKey"/>
            <type type="ident" def="EVP_MD"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="NID"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddExtensions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="NID"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LoadCertificateFromPEM">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalPEM">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PublicKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="PublicKey"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetSerialNumberHex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="X509NamePrintEx">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Certificate"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writeBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Disconnect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writeBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="BIO"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MakeCBIO">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writeBio"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="BIO"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ReadFromOnce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MakeCBIO">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readBio"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="BIO"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Disconnect">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="C"/>
                <item value="BIO"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MarkEOF">
          <recvList>
            <type type="pointer">
              <type type="ident" def="readBio"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="anyBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="anyBio"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="SSLRecordSize"/>
        <name value="SSLv3"/>
        <name value="TLSv1"/>
        <name value="TLSv1_1"/>
        <name value="TLSv1_2"/>
        <name value="AnyVersion"/>
        <name value="NoCompression"/>
        <name value="NoSSLv2"/>
        <name value="NoSSLv3"/>
        <name value="NoTLSv1"/>
        <name value="CipherServerPreference"/>
        <name value="NoSessionResumptionOrRenegotiation"/>
        <name value="NoTicket"/>
        <name value="ReleaseBuffers"/>
        <name value="VerifyNone"/>
        <name value="VerifyPeer"/>
        <name value="VerifyFailIfNoPeerCert"/>
        <name value="VerifyClientOnce"/>
        <name value="SessionCacheOff"/>
        <name value="SessionCacheClient"/>
        <name value="SessionCacheServer"/>
        <name value="SessionCacheBoth"/>
        <name value="NoAutoClear"/>
        <name value="NoInternalLookup"/>
        <name value="NoInternalStore"/>
        <name value="NoInternal"/>
        <name value="ValidationError"/>
        <name value="AlwaysCheckSubject"/>
        <name value="NoWildcards"/>
        <name value="UnsupportedConstraintSyntax"/>
        <name value="UnsupportedConstraintType"/>
        <name value="UnsupportedExtensionFeature"/>
        <name value="ExcludedViolation"/>
        <name value="SubtreeMinmax"/>
        <name value="UnsupportedNameSyntax"/>
        <name value="DifferentCrlScope"/>
        <name value="PermittedViolation"/>
        <name value="CrlPathValidationError"/>
        <name value="NoTLSv1_1"/>
        <name value="NoTLSv1_2"/>
        <name value="NID_rsadsi"/>
        <name value="NID_pkcs"/>
        <name value="NID_md2"/>
        <name value="NID_md5"/>
        <name value="NID_rc4"/>
        <name value="NID_rsaEncryption"/>
        <name value="NID_md2WithRSAEncryption"/>
        <name value="NID_md5WithRSAEncryption"/>
        <name value="NID_pbeWithMD2AndDES_CBC"/>
        <name value="NID_pbeWithMD5AndDES_CBC"/>
        <name value="NID_X500"/>
        <name value="NID_X509"/>
        <name value="NID_commonName"/>
        <name value="NID_countryName"/>
        <name value="NID_localityName"/>
        <name value="NID_stateOrProvinceName"/>
        <name value="NID_organizationName"/>
        <name value="NID_organizationalUnitName"/>
        <name value="NID_rsa"/>
        <name value="NID_pkcs7"/>
        <name value="NID_pkcs7_data"/>
        <name value="NID_pkcs7_signed"/>
        <name value="NID_pkcs7_enveloped"/>
        <name value="NID_pkcs7_signedAndEnveloped"/>
        <name value="NID_pkcs7_digest"/>
        <name value="NID_pkcs7_encrypted"/>
        <name value="NID_pkcs3"/>
        <name value="NID_dhKeyAgreement"/>
        <name value="NID_des_ecb"/>
        <name value="NID_des_cfb64"/>
        <name value="NID_des_cbc"/>
        <name value="NID_des_ede"/>
        <name value="NID_des_ede3"/>
        <name value="NID_idea_cbc"/>
        <name value="NID_idea_cfb64"/>
        <name value="NID_idea_ecb"/>
        <name value="NID_rc2_cbc"/>
        <name value="NID_rc2_ecb"/>
        <name value="NID_rc2_cfb64"/>
        <name value="NID_rc2_ofb64"/>
        <name value="NID_sha"/>
        <name value="NID_shaWithRSAEncryption"/>
        <name value="NID_des_ede_cbc"/>
        <name value="NID_des_ede3_cbc"/>
        <name value="NID_des_ofb64"/>
        <name value="NID_idea_ofb64"/>
        <name value="NID_pkcs9"/>
        <name value="NID_pkcs9_emailAddress"/>
        <name value="NID_pkcs9_unstructuredName"/>
        <name value="NID_pkcs9_contentType"/>
        <name value="NID_pkcs9_messageDigest"/>
        <name value="NID_pkcs9_signingTime"/>
        <name value="NID_pkcs9_countersignature"/>
        <name value="NID_pkcs9_challengePassword"/>
        <name value="NID_pkcs9_unstructuredAddress"/>
        <name value="NID_pkcs9_extCertAttributes"/>
        <name value="NID_netscape"/>
        <name value="NID_netscape_cert_extension"/>
        <name value="NID_netscape_data_type"/>
        <name value="NID_des_ede_cfb64"/>
        <name value="NID_des_ede3_cfb64"/>
        <name value="NID_des_ede_ofb64"/>
        <name value="NID_des_ede3_ofb64"/>
        <name value="NID_sha1"/>
        <name value="NID_sha1WithRSAEncryption"/>
        <name value="NID_dsaWithSHA"/>
        <name value="NID_dsa_2"/>
        <name value="NID_pbeWithSHA1AndRC2_CBC"/>
        <name value="NID_id_pbkdf2"/>
        <name value="NID_dsaWithSHA1_2"/>
        <name value="NID_netscape_cert_type"/>
        <name value="NID_netscape_base_url"/>
        <name value="NID_netscape_revocation_url"/>
        <name value="NID_netscape_ca_revocation_url"/>
        <name value="NID_netscape_renewal_url"/>
        <name value="NID_netscape_ca_policy_url"/>
        <name value="NID_netscape_ssl_server_name"/>
        <name value="NID_netscape_comment"/>
        <name value="NID_netscape_cert_sequence"/>
        <name value="NID_desx_cbc"/>
        <name value="NID_id_ce"/>
        <name value="NID_subject_key_identifier"/>
        <name value="NID_key_usage"/>
        <name value="NID_private_key_usage_period"/>
        <name value="NID_subject_alt_name"/>
        <name value="NID_issuer_alt_name"/>
        <name value="NID_basic_constraints"/>
        <name value="NID_crl_number"/>
        <name value="NID_certificate_policies"/>
        <name value="NID_authority_key_identifier"/>
        <name value="NID_bf_cbc"/>
        <name value="NID_bf_ecb"/>
        <name value="NID_bf_cfb64"/>
        <name value="NID_bf_ofb64"/>
        <name value="NID_mdc2"/>
        <name value="NID_mdc2WithRSA"/>
        <name value="NID_rc4_40"/>
        <name value="NID_rc2_40_cbc"/>
        <name value="NID_givenName"/>
        <name value="NID_surname"/>
        <name value="NID_initials"/>
        <name value="NID_uniqueIdentifier"/>
        <name value="NID_crl_distribution_points"/>
        <name value="NID_md5WithRSA"/>
        <name value="NID_serialNumber"/>
        <name value="NID_title"/>
        <name value="NID_description"/>
        <name value="NID_cast5_cbc"/>
        <name value="NID_cast5_ecb"/>
        <name value="NID_cast5_cfb64"/>
        <name value="NID_cast5_ofb64"/>
        <name value="NID_pbeWithMD5AndCast5_CBC"/>
        <name value="NID_dsaWithSHA1"/>
        <name value="NID_md5_sha1"/>
        <name value="NID_sha1WithRSA"/>
        <name value="NID_dsa"/>
        <name value="NID_ripemd160"/>
        <name value="NID_ripemd160WithRSA"/>
        <name value="NID_rc5_cbc"/>
        <name value="NID_rc5_ecb"/>
        <name value="NID_rc5_cfb64"/>
        <name value="NID_rc5_ofb64"/>
        <name value="NID_rle_compression"/>
        <name value="NID_zlib_compression"/>
        <name value="NID_ext_key_usage"/>
        <name value="NID_id_pkix"/>
        <name value="NID_id_kp"/>
        <name value="NID_server_auth"/>
        <name value="NID_client_auth"/>
        <name value="NID_code_sign"/>
        <name value="NID_email_protect"/>
        <name value="NID_time_stamp"/>
        <name value="NID_ms_code_ind"/>
        <name value="NID_ms_code_com"/>
        <name value="NID_ms_ctl_sign"/>
        <name value="NID_ms_sgc"/>
        <name value="NID_ms_efs"/>
        <name value="NID_ns_sgc"/>
        <name value="NID_delta_crl"/>
        <name value="NID_crl_reason"/>
        <name value="NID_invalidity_date"/>
        <name value="NID_sxnet"/>
        <name value="NID_pbe_WithSHA1And128BitRC4"/>
        <name value="NID_pbe_WithSHA1And40BitRC4"/>
        <name value="NID_pbe_WithSHA1And3_Key_TripleDES_CBC"/>
        <name value="NID_pbe_WithSHA1And2_Key_TripleDES_CBC"/>
        <name value="NID_pbe_WithSHA1And128BitRC2_CBC"/>
        <name value="NID_pbe_WithSHA1And40BitRC2_CBC"/>
        <name value="NID_keyBag"/>
        <name value="NID_pkcs8ShroudedKeyBag"/>
        <name value="NID_certBag"/>
        <name value="NID_crlBag"/>
        <name value="NID_secretBag"/>
        <name value="NID_safeContentsBag"/>
        <name value="NID_friendlyName"/>
        <name value="NID_localKeyID"/>
        <name value="NID_x509Certificate"/>
        <name value="NID_sdsiCertificate"/>
        <name value="NID_x509Crl"/>
        <name value="NID_pbes2"/>
        <name value="NID_pbmac1"/>
        <name value="NID_hmacWithSHA1"/>
        <name value="NID_id_qt_cps"/>
        <name value="NID_id_qt_unotice"/>
        <name value="NID_rc2_64_cbc"/>
        <name value="NID_SMIMECapabilities"/>
        <name value="NID_pbeWithMD2AndRC2_CBC"/>
        <name value="NID_pbeWithMD5AndRC2_CBC"/>
        <name value="NID_pbeWithSHA1AndDES_CBC"/>
        <name value="NID_ms_ext_req"/>
        <name value="NID_ext_req"/>
        <name value="NID_name"/>
        <name value="NID_dnQualifier"/>
        <name value="NID_id_pe"/>
        <name value="NID_id_ad"/>
        <name value="NID_info_access"/>
        <name value="NID_ad_OCSP"/>
        <name value="NID_ad_ca_issuers"/>
        <name value="NID_OCSP_sign"/>
        <name value="InsecureSkipHostVerification"/>
        <name value="DisableSNI"/>
        <name value="SHA256_Method"/>
        <name value="ValidationError"/>
        <name value="AlwaysCheckSubject"/>
        <name value="NoWildcards"/>
        <name value="SSLv3"/>
        <name value="TLSv1"/>
        <name value="TLSv1_1"/>
        <name value="TLSv1_2"/>
        <name value="AnyVersion"/>
        <name value="Prime256v1"/>
        <name value="Secp384r1"/>
        <name value="CBIssuerCheck"/>
        <name value="UseCheckTime"/>
        <name value="CRLCheck"/>
        <name value="CRLCheckAll"/>
        <name value="IgnoreCritical"/>
        <name value="X509Strict"/>
        <name value="AllowProxyCerts"/>
        <name value="PolicyCheck"/>
        <name value="ExplicitPolicy"/>
        <name value="InhibitAny"/>
        <name value="InhibitMap"/>
        <name value="NotifyPolicy"/>
        <name value="PolicyMask"/>
        <name value="NoCompression"/>
        <name value="NoSSLv2"/>
        <name value="NoSSLv3"/>
        <name value="NoTLSv1"/>
        <name value="CipherServerPreference"/>
        <name value="NoSessionResumptionOrRenegotiation"/>
        <name value="OpAll"/>
        <name value="ReleaseBuffers"/>
        <name value="AutoRetry"/>
        <name value="VerifyNone"/>
        <name value="VerifyPeer"/>
        <name value="VerifyFailIfNoPeerCert"/>
        <name value="VerifyClientOnce"/>
        <name value="FiletypePEM"/>
        <name value="FiletypeASN1"/>
        <name value="SessionCacheOff"/>
        <name value="SessionCacheClient"/>
        <name value="SessionCacheServer"/>
        <name value="SessionCacheBoth"/>
        <name value="NoAutoClear"/>
        <name value="NoInternalLookup"/>
        <name value="NoInternalStore"/>
        <name value="NoInternal"/>
        <name value="Ok"/>
        <name value="UnableToGetIssuerCert"/>
        <name value="UnableToGetCrl"/>
        <name value="UnableToDecryptCertSignature"/>
        <name value="UnableToDecryptCrlSignature"/>
        <name value="UnableToDecodeIssuerPublicKey"/>
        <name value="CertSignatureFailure"/>
        <name value="CrlSignatureFailure"/>
        <name value="CertNotYetValid"/>
        <name value="CertHasExpired"/>
        <name value="CrlNotYetValid"/>
        <name value="CrlHasExpired"/>
        <name value="ErrorInCertNotBeforeField"/>
        <name value="ErrorInCertNotAfterField"/>
        <name value="ErrorInCrlLastUpdateField"/>
        <name value="ErrorInCrlNextUpdateField"/>
        <name value="OutOfMem"/>
        <name value="DepthZeroSelfSignedCert"/>
        <name value="SelfSignedCertInChain"/>
        <name value="UnableToGetIssuerCertLocally"/>
        <name value="UnableToVerifyLeafSignature"/>
        <name value="CertChainTooLong"/>
        <name value="CertRevoked"/>
        <name value="InvalidCa"/>
        <name value="PathLengthExceeded"/>
        <name value="InvalidPurpose"/>
        <name value="CertUntrusted"/>
        <name value="CertRejected"/>
        <name value="SubjectIssuerMismatch"/>
        <name value="AkidSkidMismatch"/>
        <name value="AkidIssuerSerialMismatch"/>
        <name value="KeyusageNoCertsign"/>
        <name value="UnableToGetCrlIssuer"/>
        <name value="UnhandledCriticalExtension"/>
        <name value="KeyusageNoCrlSign"/>
        <name value="UnhandledCriticalCrlExtension"/>
        <name value="InvalidNonCa"/>
        <name value="ProxyPathLengthExceeded"/>
        <name value="KeyusageNoDigitalSignature"/>
        <name value="ProxyCertificatesNotAllowed"/>
        <name value="InvalidExtension"/>
        <name value="InvalidPolicyExtension"/>
        <name value="NoExplicitPolicy"/>
        <name value="UnnestedResource"/>
        <name value="ApplicationVerification"/>
        <name value="GCM_TAG_MAXLEN"/>
        <name value="EVP_NULL"/>
        <name value="EVP_MD5"/>
        <name value="EVP_SHA"/>
        <name value="EVP_SHA1"/>
        <name value="EVP_DSS"/>
        <name value="EVP_DSS1"/>
        <name value="EVP_MDC2"/>
        <name value="EVP_RIPEMD160"/>
        <name value="EVP_SHA224"/>
        <name value="EVP_SHA256"/>
        <name value="EVP_SHA384"/>
        <name value="EVP_SHA512"/>
        <name value="SSLRecordSize"/>
      </names>
    </package>
    <package importpath="github.com/10gen/openssl/utils">
      <types>
        <type type="struct" name="Future">
          <field type="pointer" name="mutex">
            <type type="selector">
              <prefix value="sync"/>
              <item value="Mutex"/>
            </type>
          </field>
          <field type="pointer" name="cond">
            <type type="selector">
              <prefix value="sync"/>
              <item value="Cond"/>
            </type>
          </field>
          <field type="ident" def="bool" name="received"/>
          <field type="interface" name="val"/>
          <field type="ident" def="error" name="err"/>
        </type>
        <type type="struct" name="ErrorGroup">
          <field type="slice" name="Errors">
            <elmtype type="ident" def="error"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="NewFuture">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Future"/>
            </type>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Future"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Fired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Future"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Future"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrorGroup"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Finalize">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ErrorGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="C"/>
    <import path="errors"/>
    <import path="runtime"/>
    <import path="unsafe"/>
    <import path="regexp"/>
    <import path="net"/>
    <import path="time"/>
    <import path="io/ioutil"/>
    <import path="fmt"/>
    <import path="strings"/>
    <import path="sync"/>
    <import path="net/http"/>
    <import path="os"/>
    <import path="github.com/spacemonkeygo/spacelog"/>
    <import path="io"/>
    <import path="github.com/10gen/openssl/utils"/>
    <import path="reflect"/>
  </imports>
</project>
