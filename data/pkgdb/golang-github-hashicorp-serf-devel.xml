<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-hashicorp-serf-0-0.3.git4bd6183.fc24">
  <packages>
    <package importpath="github.com/hashicorp/serf/command">
      <types>
        <type type="struct" name="VersionCommand">
          <field type="ident" def="string" name="Revision"/>
          <field type="ident" def="string" name="Version"/>
          <field type="ident" def="string" name="VersionPrerelease"/>
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="TagsCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="ReachabilityCommand">
          <field type="channel" dir="2" name="ShutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="QueryCommand">
          <field type="channel" dir="2" name="ShutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="MonitorCommand">
          <field type="channel" dir="2" name="ShutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="quitting"/>
        </type>
        <type type="struct" name="MembersCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="Member">
          <field type="ident" def="bool" name="detail"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Addr"/>
          <field type="ident" def="uint16" name="Port"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Status"/>
          <field type="map" name="Proto">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="uint8"/>
          </field>
        </type>
        <type type="struct" name="MemberContainer">
          <field type="slice" name="Members">
            <elmtype type="ident" def="Member"/>
          </field>
        </type>
        <type type="struct" name="LeaveCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="KeysCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="KeygenCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="JoinCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="InfoCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type name="StatsContainer" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="map">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </valtype>
        </type>
        <type type="struct" name="ForceLeaveCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
        <type type="struct" name="EventCommand">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VersionCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VersionCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="VersionCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagsCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagsCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TagsCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RPCAddrFlag">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="RPCAuthFlag">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="flag"/>
                <item value="FlagSet"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="RPCClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="client"/>
                <item value="RPCClient"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReachabilityCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReachabilityCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReachabilityCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Started">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AckReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ResponseReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="NodeResponse"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Finished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Started">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="AckReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ResponseReceived">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="client"/>
              <item value="NodeResponse"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Finished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonQueryRespFormat"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MonitorCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MonitorCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MonitorCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemberContainer"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MembersCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MembersCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MembersCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LeaveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LeaveCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LeaveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeysCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeysCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeysCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeygenCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeygenCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeygenCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="JoinCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfoCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfoCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InfoCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="StatsContainer"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ForceLeaveCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ForceLeaveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ForceLeaveCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventCommand"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventCommand"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/hashicorp/serf/serf">
      <types>
        <type type="struct" name="Snapshotter">
          <field type="map" name="aliveNodes">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="clock">
            <type type="ident" def="LamportClock"/>
          </field>
          <field type="pointer" name="fh">
            <type type="selector">
              <prefix value="os"/>
              <item value="File"/>
            </type>
          </field>
          <field type="pointer" name="buffered">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Writer"/>
            </type>
          </field>
          <field type="channel" dir="2" name="inCh">
            <type type="ident" def="Event"/>
          </field>
          <field type="selector" name="lastFlush">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="LamportTime" name="lastClock"/>
          <field type="ident" def="LamportTime" name="lastEventClock"/>
          <field type="ident" def="LamportTime" name="lastQueryClock"/>
          <field type="channel" dir="3" name="leaveCh">
            <type type="struct" name=""/>
          </field>
          <field type="ident" def="bool" name="leaving"/>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="ident" def="int64" name="maxSize"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="int64" name="offset"/>
          <field type="channel" dir="1" name="outCh">
            <type type="ident" def="Event"/>
          </field>
          <field type="ident" def="bool" name="rejoinAfterLeave"/>
          <field type="channel" dir="2" name="shutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="channel" dir="3" name="waitCh">
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="PreviousNode">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Addr"/>
        </type>
        <type type="struct" name="Serf">
          <field type="ident" def="LamportClock" name="clock"/>
          <field type="ident" def="LamportClock" name="eventClock"/>
          <field type="ident" def="LamportClock" name="queryClock"/>
          <field type="pointer" name="broadcasts">
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="TransmitLimitedQueue"/>
            </type>
          </field>
          <field type="pointer" name="config">
            <type type="ident" def="Config"/>
          </field>
          <field type="slice" name="failedMembers">
            <elmtype type="pointer">
              <type type="ident" def="memberState"/>
            </elmtype>
          </field>
          <field type="slice" name="leftMembers">
            <elmtype type="pointer">
              <type type="ident" def="memberState"/>
            </elmtype>
          </field>
          <field type="pointer" name="memberlist">
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="Memberlist"/>
            </type>
          </field>
          <field type="selector" name="memberLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="map" name="members">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="memberState"/>
            </valtype>
          </field>
          <field type="slice" name="recentLeave">
            <elmtype type="ident" def="nodeIntent"/>
          </field>
          <field type="ident" def="int" name="recentLeaveIndex"/>
          <field type="slice" name="recentJoin">
            <elmtype type="ident" def="nodeIntent"/>
          </field>
          <field type="ident" def="int" name="recentJoinIndex"/>
          <field type="pointer" name="eventBroadcasts">
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="TransmitLimitedQueue"/>
            </type>
          </field>
          <field type="slice" name="eventBuffer">
            <elmtype type="pointer">
              <type type="ident" def="userEvents"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="eventJoinIgnore"/>
          <field type="ident" def="LamportTime" name="eventMinTime"/>
          <field type="selector" name="eventLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="pointer" name="queryBroadcasts">
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="TransmitLimitedQueue"/>
            </type>
          </field>
          <field type="slice" name="queryBuffer">
            <elmtype type="pointer">
              <type type="ident" def="queries"/>
            </elmtype>
          </field>
          <field type="ident" def="LamportTime" name="queryMinTime"/>
          <field type="map" name="queryResponse">
            <keytype type="ident" def="LamportTime"/>
            <valtype type="pointer">
              <type type="ident" def="QueryResponse"/>
            </valtype>
          </field>
          <field type="selector" name="queryLock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="selector" name="joinLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="selector" name="stateLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="SerfState" name="state"/>
          <field type="channel" dir="3" name="shutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="pointer" name="snapshotter">
            <type type="ident" def="Snapshotter"/>
          </field>
          <field type="pointer" name="keyManager">
            <type type="ident" def="KeyManager"/>
          </field>
        </type>
        <type name="SerfState" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Member">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Addr">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="uint16" name="Port"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="MemberStatus" name="Status"/>
          <field type="ident" def="uint8" name="ProtocolMin"/>
          <field type="ident" def="uint8" name="ProtocolMax"/>
          <field type="ident" def="uint8" name="ProtocolCur"/>
          <field type="ident" def="uint8" name="DelegateMin"/>
          <field type="ident" def="uint8" name="DelegateMax"/>
          <field type="ident" def="uint8" name="DelegateCur"/>
        </type>
        <type name="MemberStatus" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="QueryParam">
          <field type="slice" name="FilterNodes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="FilterTags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="RequestAck"/>
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="QueryResponse">
          <field type="channel" dir="3" name="ackCh">
            <type type="ident" def="string"/>
          </field>
          <field type="selector" name="deadline">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="uint32" name="id"/>
          <field type="ident" def="LamportTime" name="lTime"/>
          <field type="channel" dir="3" name="respCh">
            <type type="ident" def="NodeResponse"/>
          </field>
          <field type="ident" def="bool" name="closed"/>
          <field type="selector" name="closeLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="NodeResponse">
          <field type="ident" def="string" name="From"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="MergeDelegate" type="interface">
          <method name="NotifyMerge">
            <paramsList>
              <type type="slice">
                <elmtype type="pointer">
                  <type type="ident" def="Member"/>
                </elmtype>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="LamportClock">
          <field type="ident" def="uint64" name="counter"/>
        </type>
        <type name="LamportTime" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type type="struct" name="KeyManager">
          <field type="pointer" name="serf">
            <type type="ident" def="Serf"/>
          </field>
          <field type="selector" name="l">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
        <type type="struct" name="KeyResponse">
          <field type="map" name="Messages">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="NumNodes"/>
          <field type="ident" def="int" name="NumResp"/>
          <field type="ident" def="int" name="NumErr"/>
          <field type="map" name="Keys">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
        </type>
        <type name="EventType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type name="Event" type="interface">
          <method name="EventType">
            <paramsList/>
            <resultsList>
              <type type="ident" def="EventType"/>
            </resultsList>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="MemberEvent">
          <field type="ident" def="EventType" name="Type"/>
          <field type="slice" name="Members">
            <elmtype type="ident" def="Member"/>
          </field>
        </type>
        <type type="struct" name="UserEvent">
          <field type="ident" def="LamportTime" name="LTime"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="bool" name="Coalesce"/>
        </type>
        <type type="struct" name="Query">
          <field type="ident" def="LamportTime" name="LTime"/>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="serf">
            <type type="ident" def="Serf"/>
          </field>
          <field type="ident" def="uint32" name="id"/>
          <field type="slice" name="addr">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="uint16" name="port"/>
          <field type="selector" name="deadline">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="selector" name="respLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="NodeName"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="channel" dir="1" name="EventCh">
            <type type="ident" def="Event"/>
          </field>
          <field type="ident" def="uint8" name="ProtocolVersion"/>
          <field type="selector" name="BroadcastTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="CoalescePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="QuiescentPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="UserCoalescePeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="UserQuiescentPeriod">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ReapInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ReconnectInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="ReconnectTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="selector" name="TombstoneTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="int" name="QueueDepthWarning"/>
          <field type="ident" def="int" name="MaxQueueDepth"/>
          <field type="ident" def="int" name="RecentIntentBuffer"/>
          <field type="ident" def="int" name="EventBuffer"/>
          <field type="ident" def="int" name="QueryBuffer"/>
          <field type="ident" def="int" name="QueryTimeoutMult"/>
          <field type="pointer" name="MemberlistConfig">
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="selector" name="LogOutput">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="ident" def="string" name="SnapshotPath"/>
          <field type="ident" def="bool" name="RejoinAfterLeave"/>
          <field type="ident" def="bool" name="EnableNameConflictResolution"/>
          <field type="ident" def="string" name="KeyringFile"/>
          <field type="ident" def="MergeDelegate" name="Merge"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="PreviousNode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewSnapshotter">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="bool"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="log"/>
                <item value="Logger"/>
              </type>
            </type>
            <type type="pointer">
              <type type="ident" def="LamportClock"/>
            </type>
            <type type="channel" dir="1">
              <type type="ident" def="Event"/>
            </type>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </paramsList>
          <resultsList>
            <type type="channel" dir="1">
              <type type="ident" def="Event"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LastClock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LamportTime"/>
          </resultsList>
        </function>
        <function name="LastEventClock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LamportTime"/>
          </resultsList>
        </function>
        <function name="LastQueryClock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LamportTime"/>
          </resultsList>
        </function>
        <function name="AliveNodes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="PreviousNode"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Wait">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Leave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Snapshotter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="SerfState"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemberStatus"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Equals">
          <recvList>
            <type type="pointer">
              <type type="ident" def="userEvent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="userEvent"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ProtocolVersion">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint8"/>
          </resultsList>
        </function>
        <function name="EncryptionEnabled">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="KeyManager">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KeyManager"/>
            </type>
          </resultsList>
        </function>
        <function name="UserEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="QueryParam"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Join">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Leave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LocalMember">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Member"/>
          </resultsList>
        </function>
        <function name="Members">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
          </resultsList>
        </function>
        <function name="RemoveFailedNode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ShutdownCh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Memberlist">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Memberlist"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="State">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="SerfState"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DefaultQueryTimeout">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </resultsList>
        </function>
        <function name="DefaultQueryParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Serf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="QueryParam"/>
            </type>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Deadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Finished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="AckCh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="ResponseCh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="QueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="ident" def="NodeResponse"/>
            </type>
          </resultsList>
        </function>
        <function name="Ack">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NoBroadcast">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageQuery"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Ack">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageQueryResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NotifyMerge">
          <recvList>
            <type type="pointer">
              <type type="ident" def="mergeDelegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="memberlist"/>
                  <item value="Node"/>
                </type>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Time">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LamportClock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LamportTime"/>
          </resultsList>
        </function>
        <function name="Increment">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LamportClock"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LamportTime"/>
          </resultsList>
        </function>
        <function name="Witness">
          <recvList>
            <type type="pointer">
              <type type="ident" def="LamportClock"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LamportTime"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InstallKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KeyResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KeyResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyManager"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KeyResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="KeyManager"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="KeyResponse"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NotifyJoin">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventDelegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotifyLeave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventDelegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotifyUpdate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventDelegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="EventType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EventType">
          <recvList>
            <type type="ident" def="MemberEvent"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="EventType"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MemberEvent"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EventType">
          <recvList>
            <type type="ident" def="UserEvent"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="EventType"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="UserEvent"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EventType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="EventType"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Deadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Respond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Query"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NodeMeta">
          <recvList>
            <type type="pointer">
              <type type="ident" def="delegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="NotifyMsg">
          <recvList>
            <type type="pointer">
              <type type="ident" def="delegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetBroadcasts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="delegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="LocalState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="delegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="MergeRemoteState">
          <recvList>
            <type type="pointer">
              <type type="ident" def="delegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotifyConflict">
          <recvList>
            <type type="pointer">
              <type type="ident" def="conflictDelegate"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Node"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="memberlist"/>
                <item value="Node"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="DefaultConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="userEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Event"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Coalesce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="userEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Event"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="userEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memberEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Event"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Coalesce">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memberEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Event"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memberEventCoalescer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="channel" dir="1">
              <type type="ident" def="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Invalidates">
          <recvList>
            <type type="pointer">
              <type type="ident" def="broadcast"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="memberlist"/>
              <item value="Broadcast"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Message">
          <recvList>
            <type type="pointer">
              <type type="ident" def="broadcast"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Finished">
          <recvList>
            <type type="pointer">
              <type type="ident" def="broadcast"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="ProtocolVersionMin"/>
        <name value="ProtocolVersionMax"/>
        <name value="FeatureNotSupported"/>
        <name value="SerfAlive"/>
        <name value="SerfLeaving"/>
        <name value="SerfLeft"/>
        <name value="SerfShutdown"/>
        <name value="StatusNone"/>
        <name value="StatusAlive"/>
        <name value="StatusLeaving"/>
        <name value="StatusLeft"/>
        <name value="StatusFailed"/>
        <name value="UserEventSizeLimit"/>
        <name value="QuerySizeLimit"/>
        <name value="QueryResponseSizeLimit"/>
        <name value="InternalQueryPrefix"/>
        <name value="EventMemberJoin"/>
        <name value="EventMemberLeave"/>
        <name value="EventMemberFailed"/>
        <name value="EventMemberUpdate"/>
        <name value="EventMemberReap"/>
        <name value="EventUser"/>
        <name value="EventQuery"/>
        <name value="ProtocolVersionMap"/>
      </names>
    </package>
    <package importpath="github.com/hashicorp/serf/client">
      <types>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="Addr"/>
          <field type="ident" def="string" name="AuthKey"/>
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
        </type>
        <type type="struct" name="RPCClient">
          <field type="ident" def="uint64" name="seq"/>
          <field type="selector" name="timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="pointer" name="conn">
            <type type="selector">
              <prefix value="net"/>
              <item value="TCPConn"/>
            </type>
          </field>
          <field type="pointer" name="reader">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Reader"/>
            </type>
          </field>
          <field type="pointer" name="writer">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Writer"/>
            </type>
          </field>
          <field type="pointer" name="dec">
            <type type="selector">
              <prefix value="codec"/>
              <item value="Decoder"/>
            </type>
          </field>
          <field type="pointer" name="enc">
            <type type="selector">
              <prefix value="codec"/>
              <item value="Encoder"/>
            </type>
          </field>
          <field type="selector" name="writeLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="map" name="dispatch">
            <keytype type="ident" def="uint64"/>
            <valtype type="ident" def="seqHandler"/>
          </field>
          <field type="selector" name="dispatchLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="shutdown"/>
          <field type="channel" dir="3" name="shutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="shutdownLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type name="StreamHandle" type="ident">
          <type type="ident" def="uint64"/>
        </type>
        <type type="struct" name="QueryParam">
          <field type="slice" name="FilterNodes">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="map" name="FilterTags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="bool" name="RequestAck"/>
          <field type="selector" name="Timeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="Name"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="channel" dir="1" name="AckCh">
            <type type="ident" def="string"/>
          </field>
          <field type="channel" dir="1" name="RespCh">
            <type type="ident" def="NodeResponse"/>
          </field>
        </type>
        <type type="struct" name="NodeResponse">
          <field type="ident" def="string" name="From"/>
          <field type="slice" name="Payload">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Member">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Addr">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="uint16" name="Port"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="uint8" name="ProtocolMin"/>
          <field type="ident" def="uint8" name="ProtocolMax"/>
          <field type="ident" def="uint8" name="ProtocolCur"/>
          <field type="ident" def="uint8" name="DelegateMin"/>
          <field type="ident" def="uint8" name="DelegateMax"/>
          <field type="ident" def="uint8" name="DelegateCur"/>
        </type>
      </types>
      <functions>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="seqCallback"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="responseHeader"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="seqCallback"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="NewRPCClient">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ClientFromConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsClosed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceLeave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Join">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Members">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MembersFiltered">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Member"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UserEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Leave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UpdateTags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Respond">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InstallKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int"/>
            </type>
            <type type="ident" def="int"/>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </valtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="monitorHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="responseHeader"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="monitorHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Monitor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="logutils"/>
              <item value="LogLevel"/>
            </type>
            <type type="channel" dir="1">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="StreamHandle"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="streamHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="responseHeader"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="streamHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Stream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="channel" dir="1">
              <type type="map">
                <keytype type="ident" def="string"/>
                <valtype type="interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="StreamHandle"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Handle">
          <recvList>
            <type type="pointer">
              <type type="ident" def="queryHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="responseHeader"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Cleanup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="queryHandler"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="QueryParam"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="StreamHandle"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DefaultTimeout"/>
      </names>
    </package>
    <package importpath="github.com/hashicorp/serf/command/agent">
      <types>
        <type type="struct" name="SyslogWrapper">
          <field type="selector" name="l">
            <prefix value="gsyslog"/>
            <item value="Syslogger"/>
          </field>
          <field type="pointer" name="filt">
            <type type="selector">
              <prefix value="logutils"/>
              <item value="LevelFilter"/>
            </type>
          </field>
        </type>
        <type type="struct" name="AgentMDNS">
          <field type="pointer" name="agent">
            <type type="ident" def="Agent"/>
          </field>
          <field type="ident" def="string" name="discover"/>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="map" name="seen">
            <keytype type="ident" def="string"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="pointer" name="server">
            <type type="selector">
              <prefix value="mdns"/>
              <item value="Server"/>
            </type>
          </field>
          <field type="ident" def="bool" name="replay"/>
          <field type="pointer" name="iface">
            <type type="selector">
              <prefix value="net"/>
              <item value="Interface"/>
            </type>
          </field>
        </type>
        <type name="LogHandler" type="interface">
          <method name="HandleLog">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Member">
          <field type="ident" def="string" name="Name"/>
          <field type="selector" name="Addr">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="uint16" name="Port"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Status"/>
          <field type="ident" def="uint8" name="ProtocolMin"/>
          <field type="ident" def="uint8" name="ProtocolMax"/>
          <field type="ident" def="uint8" name="ProtocolCur"/>
          <field type="ident" def="uint8" name="DelegateMin"/>
          <field type="ident" def="uint8" name="DelegateMax"/>
          <field type="ident" def="uint8" name="DelegateCur"/>
        </type>
        <type type="struct" name="AgentIPC">
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="agent">
            <type type="ident" def="Agent"/>
          </field>
          <field type="ident" def="string" name="authKey"/>
          <field type="map" name="clients">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="IPCClient"/>
            </valtype>
          </field>
          <field type="selector" name="listener">
            <prefix value="net"/>
            <item value="Listener"/>
          </field>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="pointer" name="logWriter">
            <type type="ident" def="logWriter"/>
          </field>
          <field type="ident" def="bool" name="stop"/>
          <field type="channel" dir="3" name="stopCh">
            <type type="struct" name=""/>
          </field>
        </type>
        <type type="struct" name="IPCClient">
          <field type="ident" def="uint64" name="queryID"/>
          <field type="ident" def="string" name="name"/>
          <field type="selector" name="conn">
            <prefix value="net"/>
            <item value="Conn"/>
          </field>
          <field type="pointer" name="reader">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Reader"/>
            </type>
          </field>
          <field type="pointer" name="writer">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="Writer"/>
            </type>
          </field>
          <field type="pointer" name="dec">
            <type type="selector">
              <prefix value="codec"/>
              <item value="Decoder"/>
            </type>
          </field>
          <field type="pointer" name="enc">
            <type type="selector">
              <prefix value="codec"/>
              <item value="Encoder"/>
            </type>
          </field>
          <field type="selector" name="writeLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="int32" name="version"/>
          <field type="pointer" name="logStreamer">
            <type type="ident" def="logStream"/>
          </field>
          <field type="map" name="eventStreams">
            <keytype type="ident" def="uint64"/>
            <valtype type="pointer">
              <type type="ident" def="eventStream"/>
            </valtype>
          </field>
          <field type="map" name="pendingQueries">
            <keytype type="ident" def="uint64"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Query"/>
              </type>
            </valtype>
          </field>
          <field type="selector" name="queryLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="bool" name="didAuth"/>
        </type>
        <type type="struct" name="GatedWriter">
          <field type="selector" name="Writer">
            <prefix value="io"/>
            <item value="Writer"/>
          </field>
          <field type="slice" name="buf">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="ident" def="bool" name="flush"/>
          <field type="selector" name="lock">
            <prefix value="sync"/>
            <item value="RWMutex"/>
          </field>
        </type>
        <type name="AppendSliceValue" type="slice">
          <elmtype type="ident" def="string"/>
        </type>
        <type type="struct" name="MockEventHandler">
          <field type="slice" name="Events">
            <elmtype type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </elmtype>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type type="struct" name="MockQueryHandler">
          <field type="slice" name="Response">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Queries">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Query"/>
              </type>
            </elmtype>
          </field>
          <field type="selector" name="">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
        <type name="EventHandler" type="interface">
          <method name="HandleEvent">
            <paramsList>
              <type type="selector">
                <prefix value="serf"/>
                <item value="Event"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="ScriptEventHandler">
          <field type="func" name="SelfFunc">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="serf"/>
                <item value="Member"/>
              </type>
            </resultsList>
          </field>
          <field type="slice" name="Scripts">
            <elmtype type="ident" def="EventScript"/>
          </field>
          <field type="pointer" name="Logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="selector" name="scriptLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="slice" name="newScripts">
            <elmtype type="ident" def="EventScript"/>
          </field>
        </type>
        <type type="struct" name="EventFilter">
          <field type="ident" def="string" name="Event"/>
          <field type="ident" def="string" name="Name"/>
        </type>
        <type type="struct" name="EventScript">
          <field type="ident" def="EventFilter" name=""/>
          <field type="ident" def="string" name="Script"/>
        </type>
        <type type="struct" name="Config">
          <field type="ident" def="string" name="NodeName"/>
          <field type="ident" def="string" name="Role"/>
          <field type="map" name="Tags">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="TagsFile"/>
          <field type="ident" def="string" name="BindAddr"/>
          <field type="ident" def="string" name="AdvertiseAddr"/>
          <field type="ident" def="string" name="EncryptKey"/>
          <field type="ident" def="string" name="KeyringFile"/>
          <field type="ident" def="string" name="LogLevel"/>
          <field type="ident" def="string" name="RPCAddr"/>
          <field type="ident" def="string" name="RPCAuthKey"/>
          <field type="ident" def="int" name="Protocol"/>
          <field type="ident" def="bool" name="ReplayOnJoin"/>
          <field type="slice" name="StartJoin">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="EventHandlers">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="Profile"/>
          <field type="ident" def="string" name="SnapshotPath"/>
          <field type="ident" def="bool" name="LeaveOnTerm"/>
          <field type="ident" def="bool" name="SkipLeaveOnInt"/>
          <field type="ident" def="string" name="Discover"/>
          <field type="ident" def="string" name="Interface"/>
          <field type="ident" def="string" name="ReconnectIntervalRaw"/>
          <field type="selector" name="ReconnectInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="ReconnectTimeoutRaw"/>
          <field type="selector" name="ReconnectTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="TombstoneTimeoutRaw"/>
          <field type="selector" name="TombstoneTimeout">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="DisableNameResolution"/>
          <field type="ident" def="bool" name="EnableSyslog"/>
          <field type="ident" def="string" name="SyslogFacility"/>
          <field type="slice" name="RetryJoin">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="RetryMaxAttempts"/>
          <field type="ident" def="string" name="RetryIntervalRaw"/>
          <field type="selector" name="RetryInterval">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="bool" name="RejoinAfterLeave"/>
          <field type="ident" def="string" name="StatsiteAddr"/>
        </type>
        <type type="struct" name="Command">
          <field type="selector" name="Ui">
            <prefix value="cli"/>
            <item value="Ui"/>
          </field>
          <field type="channel" dir="2" name="ShutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="slice" name="args">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="scriptHandler">
            <type type="ident" def="ScriptEventHandler"/>
          </field>
          <field type="pointer" name="logFilter">
            <type type="selector">
              <prefix value="logutils"/>
              <item value="LevelFilter"/>
            </type>
          </field>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Agent">
          <field type="pointer" name="conf">
            <type type="selector">
              <prefix value="serf"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="pointer" name="agentConf">
            <type type="ident" def="Config"/>
          </field>
          <field type="channel" dir="3" name="eventCh">
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </field>
          <field type="map" name="eventHandlers">
            <keytype type="ident" def="EventHandler"/>
            <valtype type="struct" name=""/>
          </field>
          <field type="slice" name="eventHandlerList">
            <elmtype type="ident" def="EventHandler"/>
          </field>
          <field type="selector" name="eventHandlersLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="pointer" name="logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
          <field type="pointer" name="serf">
            <type type="selector">
              <prefix value="serf"/>
              <item value="Serf"/>
            </type>
          </field>
          <field type="ident" def="bool" name="shutdown"/>
          <field type="channel" dir="3" name="shutdownCh">
            <type type="struct" name=""/>
          </field>
          <field type="selector" name="shutdownLock">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SyslogWrapper"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAgentMDNS">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="bool"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AgentMDNS"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewLogWriter">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="logWriter"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="logWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LogHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeregisterHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="logWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="LogHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="logWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LevelFilter">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="logutils"/>
                <item value="LevelFilter"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ValidateLevelFilter">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="logutils"/>
              <item value="LogLevel"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="logutils"/>
                <item value="LevelFilter"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Stream">
          <recvList>
            <type type="pointer">
              <type type="ident" def="queryResponseStream"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="QueryResponse"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="logStream"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="logStream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="HandleEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventStream"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Stop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="eventStream"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Send">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="responseHeader"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPCClient"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterQuery">
          <recvList>
            <type type="pointer">
              <type type="ident" def="IPCClient"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Query"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="NewAgentIPC">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="ident" def="logWriter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AgentIPC"/>
            </type>
          </resultsList>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AgentIPC"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Flush">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GatedWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GatedWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppendSliceValue"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Set">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AppendSliceValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HandleEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockEventHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MockQueryHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HandleEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScriptEventHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="UpdateScripts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ScriptEventHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="EventScript"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Invoke">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="serf"/>
              <item value="Event"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Valid">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventFilter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EventScript"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseEventScript">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="EventScript"/>
            </type>
          </resultsList>
        </function>
        <function name="ParseEventFilter">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="EventFilter"/>
            </type>
          </resultsList>
        </function>
        <function name="DefaultConfig">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="AddrParts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncryptBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EventScripts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="EventScript"/>
            </type>
          </resultsList>
        </function>
        <function name="NetworkInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeConfig">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MergeConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="ReadConfigPaths">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="dirEnts"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="dirEnts"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="dirEnts"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Run">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Command"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Synopsis">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Command"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Help">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Command"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Config"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Start">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Leave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Shutdown">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ShutdownCh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Serf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Serf"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="SerfConfig">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="Config"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Join">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ForceLeave">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UserEvent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Query">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="QueryParam"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="QueryResponse"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterEventHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EventHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DeregisterEventHandler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="EventHandler"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="InstallKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="KeyResponse"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UseKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="KeyResponse"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="KeyResponse"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="serf"/>
                <item value="KeyResponse"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTags">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTags">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="UnmarshalTags">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Agent"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="map">
                <keytype type="ident" def="string"/>
                <valtype type="ident" def="string"/>
              </valtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="MinIPCVersion"/>
        <name value="MaxIPCVersion"/>
        <name value="DefaultBindPort"/>
      </names>
    </package>
    <package importpath="github.com/hashicorp/serf/testutil">
      <types/>
      <functions>
        <function name="Yield">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBindAddr">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="github.com/mitchellh/cli"/>
    <import path="io/ioutil"/>
    <import path="log"/>
    <import path="os"/>
    <import path="github.com/hashicorp/serf/command"/>
    <import path="github.com/hashicorp/serf/command/agent"/>
    <import path="os/signal"/>
    <import path="time"/>
    <import path="net"/>
    <import path="sync"/>
    <import path="bufio"/>
    <import path="math/rand"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="github.com/armon/go-metrics"/>
    <import path="bytes"/>
    <import path="encoding/base64"/>
    <import path="encoding/json"/>
    <import path="errors"/>
    <import path="github.com/hashicorp/go-msgpack/codec"/>
    <import path="github.com/hashicorp/memberlist"/>
    <import path="math"/>
    <import path="regexp"/>
    <import path="sync/atomic"/>
    <import path="io"/>
    <import path="github.com/hashicorp/serf/serf"/>
    <import path="flag"/>
    <import path="github.com/hashicorp/serf/client"/>
    <import path="github.com/hashicorp/logutils"/>
    <import path="github.com/ryanuber/columnize"/>
    <import path="crypto/rand"/>
    <import path="sort"/>
    <import path="runtime"/>
    <import path="github.com/hashicorp/go-syslog"/>
    <import path="github.com/hashicorp/mdns"/>
    <import path="github.com/armon/circbuf"/>
    <import path="os/exec"/>
    <import path="github.com/mitchellh/mapstructure"/>
    <import path="path/filepath"/>
    <import path="syscall"/>
  </imports>
</project>
