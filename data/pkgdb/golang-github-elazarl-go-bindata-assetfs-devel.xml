<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-elazarl-go-bindata-assetfs-0-0.5.git3dcc965.fc24">
  <packages>
    <package importpath="github.com/elazarl/go-bindata-assetfs">
      <types>
        <type type="struct" name="FakeFile">
          <field type="ident" def="string" name="Path"/>
          <field type="ident" def="bool" name="Dir"/>
          <field type="ident" def="int64" name="Len"/>
        </type>
        <type type="struct" name="AssetFile">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Reader"/>
            </type>
          </field>
          <field type="selector" name="">
            <prefix value="io"/>
            <item value="Closer"/>
          </field>
          <field type="ident" def="FakeFile" name=""/>
        </type>
        <type type="struct" name="AssetDirectory">
          <field type="ident" def="AssetFile" name=""/>
          <field type="ident" def="int" name="ChildrenRead"/>
          <field type="slice" name="Children">
            <elmtype type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </elmtype>
          </field>
        </type>
        <type type="struct" name="AssetFS">
          <field type="func" name="Asset">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="AssetDir">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="ident" def="string" name="Prefix"/>
        </type>
      </types>
      <functions>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </resultsList>
        </function>
        <function name="ModTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Sys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FakeFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="NewAssetFile">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AssetFile"/>
            </type>
          </resultsList>
        </function>
        <function name="Readdir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="os"/>
                <item value="FileInfo"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewAssetDirectory">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
            <type type="pointer">
              <type type="ident" def="AssetFS"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="AssetDirectory"/>
            </type>
          </resultsList>
        </function>
        <function name="Readdir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetDirectory"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="os"/>
                <item value="FileInfo"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetDirectory"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Open">
          <recvList>
            <type type="pointer">
              <type type="ident" def="AssetFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="File"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="bytes"/>
    <import path="errors"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="net/http"/>
    <import path="os"/>
    <import path="path"/>
    <import path="path/filepath"/>
    <import path="time"/>
    <import path="bufio"/>
    <import path="flag"/>
    <import path="fmt"/>
    <import path="os/exec"/>
    <import path="strings"/>
  </imports>
</project>
