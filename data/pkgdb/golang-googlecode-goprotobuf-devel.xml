<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-googlecode-goprotobuf-0-0.16.git0f7a9ca.fc24">
  <packages>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go/internal/grpc">
      <types/>
      <functions>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="P">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go/testdata/my_test">
      <types>
        <type name="HatType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Days" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Request_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Reply_Entry_Game" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Request">
          <field type="slice" name="Key">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Hue">
            <type type="ident" def="Request_Color"/>
          </field>
          <field type="pointer" name="Hat">
            <type type="ident" def="HatType"/>
          </field>
          <field type="pointer" name="Deadline">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Somegroup">
            <type type="ident" def="Request_SomeGroup"/>
          </field>
          <field type="map" name="NameMapping">
            <keytype type="ident" def="int32"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MsgMapping">
            <keytype type="ident" def="int64"/>
            <valtype type="pointer">
              <type type="ident" def="Reply"/>
            </valtype>
          </field>
          <field type="pointer" name="Reset_">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Request_SomeGroup">
          <field type="pointer" name="GroupField">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reply">
          <field type="slice" name="Found">
            <elmtype type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </elmtype>
          </field>
          <field type="slice" name="CompactKeys">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reply_Entry">
          <field type="pointer" name="KeyThatNeeds_1234Camel_CasIng">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="XMyFieldName_2">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherBase">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ReplyExtensions">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherReplyExtensions">
          <field type="pointer" name="Key">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldReply">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="HatType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HatType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="HatType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HatType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Days"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Days"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Days"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Days"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Request_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Request_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Reply_Entry_Game"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry_Game"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Reply_Entry_Game"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry_Game"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Request_Color"/>
          </resultsList>
        </function>
        <function name="GetHat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="HatType"/>
          </resultsList>
        </function>
        <function name="GetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetSomegroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNameMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMsgMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="pointer">
                <type type="ident" def="Reply"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetReset_">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFound">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reply_Entry"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCompactKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKeyThatNeeds_1234Camel_CasIng">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetXMyFieldName_2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="HatType_FEDORA"/>
        <name value="HatType_FEZ"/>
        <name value="HatType_name"/>
        <name value="HatType_value"/>
        <name value="Days_MONDAY"/>
        <name value="Days_TUESDAY"/>
        <name value="Days_LUNDI"/>
        <name value="Days_name"/>
        <name value="Days_value"/>
        <name value="Request_RED"/>
        <name value="Request_GREEN"/>
        <name value="Request_BLUE"/>
        <name value="Request_Color_name"/>
        <name value="Request_Color_value"/>
        <name value="Reply_Entry_FOOTBALL"/>
        <name value="Reply_Entry_TENNIS"/>
        <name value="Reply_Entry_Game_name"/>
        <name value="Reply_Entry_Game_value"/>
        <name value="Default_Request_Hat"/>
        <name value="Default_Request_Deadline"/>
        <name value="Default_Reply_Entry_Value"/>
        <name value="E_ReplyExtensions_Time"/>
        <name value="E_ReplyExtensions_Carrot"/>
        <name value="E_ReplyExtensions_Donut"/>
        <name value="E_Tag"/>
        <name value="E_Donut"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/jsonpb/jsonpb_test_proto">
      <types>
        <type name="Widget_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Simple">
          <field type="pointer" name="OBool">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="OInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OInt64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="OUint32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="OUint64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="OSint32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OSint64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="OFloat">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="ODouble">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="OString">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="OBytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Repeats">
          <field type="slice" name="RBool">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="RInt32">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="RInt64">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="RUint32">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="RUint64">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="RSint32">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="RSint64">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="RFloat">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="RDouble">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="RString">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="RBytes">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Widget">
          <field type="pointer" name="Color">
            <type type="ident" def="Widget_Color"/>
          </field>
          <field type="slice" name="RColor">
            <elmtype type="ident" def="Widget_Color"/>
          </field>
          <field type="pointer" name="Simple">
            <type type="ident" def="Simple"/>
          </field>
          <field type="slice" name="RSimple">
            <elmtype type="pointer">
              <type type="ident" def="Simple"/>
            </elmtype>
          </field>
          <field type="pointer" name="Repeats">
            <type type="ident" def="Repeats"/>
          </field>
          <field type="slice" name="RRepeats">
            <elmtype type="pointer">
              <type type="ident" def="Repeats"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Maps">
          <field type="map" name="MInt64Str">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MBoolSimple">
            <keytype type="ident" def="bool"/>
            <valtype type="pointer">
              <type type="ident" def="Simple"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Simple3">
          <field type="ident" def="float64" name="Dub"/>
        </type>
        <type type="struct" name="Mappy">
          <field type="map" name="Nummy">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="int32"/>
          </field>
          <field type="map" name="Strry">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Objjy">
            <keytype type="ident" def="int32"/>
            <valtype type="pointer">
              <type type="ident" def="Simple3"/>
            </valtype>
          </field>
          <field type="map" name="Buggy">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Booly">
            <keytype type="ident" def="bool"/>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Widget_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Widget_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Widget_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetOUint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetOUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetOSint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOSint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetOFloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetODouble">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetOString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRUint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRFloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRDouble">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Widget_Color"/>
          </resultsList>
        </function>
        <function name="GetRColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Widget_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Simple"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRRepeats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Repeats"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMInt64Str">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMBoolSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="pointer">
                <type type="ident" def="Simple"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNummy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetObjjy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="pointer">
                <type type="ident" def="Simple3"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBuggy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBooly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Widget_RED"/>
        <name value="Widget_GREEN"/>
        <name value="Widget_BLUE"/>
        <name value="Widget_Color_name"/>
        <name value="Widget_Color_value"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go/internal/grpc">
      <types/>
      <functions>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="Generator"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="P">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Generate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateImports">
          <recvList>
            <type type="pointer">
              <type type="ident" def="grpc"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="generator"/>
                <item value="FileDescriptor"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/golang/protobuf/proto/proto3_proto">
      <types>
        <type name="Message_Humour" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Message">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Message_Humour" name="Hilarity"/>
          <field type="ident" def="uint32" name="HeightInCm"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="ResultCount"/>
          <field type="ident" def="bool" name="TrueScotsman"/>
          <field type="ident" def="float32" name="Score"/>
          <field type="slice" name="Key">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Nested">
            <type type="ident" def="Nested"/>
          </field>
          <field type="map" name="Terrain">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Nested"/>
            </valtype>
          </field>
          <field type="pointer" name="Proto2Field">
            <type type="selector">
              <prefix value="testdata"/>
              <item value="SubDefaults"/>
            </type>
          </field>
          <field type="map" name="Proto2Value">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="testdata"/>
                <item value="SubDefaults"/>
              </type>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Nested">
          <field type="ident" def="string" name="Bunny"/>
        </type>
        <type type="struct" name="MessageWithMap">
          <field type="map" name="ByteMapping">
            <keytype type="ident" def="bool"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Message_Humour"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTerrain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Nested"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetProto2Field">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testdata"/>
                <item value="SubDefaults"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetProto2Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="testdata"/>
                  <item value="SubDefaults"/>
                </type>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetByteMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="slice">
                <elmtype type="ident" def="byte"/>
              </valtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Message_UNKNOWN"/>
        <name value="Message_PUNS"/>
        <name value="Message_SLAPSTICK"/>
        <name value="Message_BILL_BAILEY"/>
        <name value="Message_Humour_name"/>
        <name value="Message_Humour_value"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/proto/testdata">
      <types>
        <type name="FOO" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="GoTest_KIND" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MyMessage_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="DefaultsMessage_DefaultsEnum" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Defaults_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="RepeatedEnum_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="GoEnum">
          <field type="pointer" name="Foo">
            <type type="ident" def="FOO"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTestField">
          <field type="pointer" name="Label">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest">
          <field type="pointer" name="Kind">
            <type type="ident" def="GoTest_KIND"/>
          </field>
          <field type="pointer" name="Table">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Param">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="RequiredField">
            <type type="ident" def="GoTestField"/>
          </field>
          <field type="slice" name="RepeatedField">
            <elmtype type="pointer">
              <type type="ident" def="GoTestField"/>
            </elmtype>
          </field>
          <field type="pointer" name="OptionalField">
            <type type="ident" def="GoTestField"/>
          </field>
          <field type="pointer" name="F_BoolRequired">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Required">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Required">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Required">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Required">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Required">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Required">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatRequired">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleRequired">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringRequired">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesRequired">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Required">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Required">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_BoolRepeated">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="F_Int32Repeated">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Int64Repeated">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_Fixed32Repeated">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Fixed64Repeated">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_Uint32Repeated">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Uint64Repeated">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_FloatRepeated">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="F_DoubleRepeated">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="F_StringRepeated">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesRepeated">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="F_Sint32Repeated">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Sint64Repeated">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_BoolOptional">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Optional">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Optional">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Optional">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Optional">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Optional">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Optional">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatOptional">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleOptional">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringOptional">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesOptional">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Optional">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Optional">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_BoolDefaulted">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Defaulted">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Defaulted">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Defaulted">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Defaulted">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Defaulted">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Defaulted">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatDefaulted">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleDefaulted">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringDefaulted">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesDefaulted">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Defaulted">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Defaulted">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_BoolRepeatedPacked">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="F_Int32RepeatedPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Int64RepeatedPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_Fixed32RepeatedPacked">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Fixed64RepeatedPacked">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_Uint32RepeatedPacked">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Uint64RepeatedPacked">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_FloatRepeatedPacked">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="F_DoubleRepeatedPacked">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="F_Sint32RepeatedPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Sint64RepeatedPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Requiredgroup">
            <type type="ident" def="GoTest_RequiredGroup"/>
          </field>
          <field type="slice" name="Repeatedgroup">
            <elmtype type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </elmtype>
          </field>
          <field type="pointer" name="Optionalgroup">
            <type type="ident" def="GoTest_OptionalGroup"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_RequiredGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_RepeatedGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_OptionalGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoSkipTest">
          <field type="pointer" name="SkipInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="SkipFixed32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="SkipFixed64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="SkipString">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Skipgroup">
            <type type="ident" def="GoSkipTest_SkipGroup"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoSkipTest_SkipGroup">
          <field type="pointer" name="GroupInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="GroupString">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NonPackedTest">
          <field type="slice" name="A">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PackedTest">
          <field type="slice" name="B">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MaxTag">
          <field type="pointer" name="LastField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldMessage">
          <field type="pointer" name="Nested">
            <type type="ident" def="OldMessage_Nested"/>
          </field>
          <field type="pointer" name="Num">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldMessage_Nested">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NewMessage">
          <field type="pointer" name="Nested">
            <type type="ident" def="NewMessage_Nested"/>
          </field>
          <field type="pointer" name="Num">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NewMessage_Nested">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FoodGroup">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="InnerMessage">
          <field type="pointer" name="Host">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Port">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Connected">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherMessage">
          <field type="pointer" name="Key">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Weight">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Inner">
            <type type="ident" def="InnerMessage"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessage">
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Quote">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Pet">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Inner">
            <type type="ident" def="InnerMessage"/>
          </field>
          <field type="slice" name="Others">
            <elmtype type="pointer">
              <type type="ident" def="OtherMessage"/>
            </elmtype>
          </field>
          <field type="slice" name="RepInner">
            <elmtype type="pointer">
              <type type="ident" def="InnerMessage"/>
            </elmtype>
          </field>
          <field type="pointer" name="Bikeshed">
            <type type="ident" def="MyMessage_Color"/>
          </field>
          <field type="pointer" name="Somegroup">
            <type type="ident" def="MyMessage_SomeGroup"/>
          </field>
          <field type="slice" name="RepBytes">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="Bigfloat">
            <type type="ident" def="float64"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessage_SomeGroup">
          <field type="pointer" name="GroupField">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Ext">
          <field type="pointer" name="Data">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DefaultsMessage">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessageSet">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Empty">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageList">
          <field type="slice" name="Message">
            <elmtype type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageList_Message">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Strings">
          <field type="pointer" name="StringField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="BytesField">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Defaults">
          <field type="pointer" name="F_Bool">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Float">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Double">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_String">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_Bytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Enum">
            <type type="ident" def="Defaults_Color"/>
          </field>
          <field type="pointer" name="F_Pinf">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Ninf">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Nan">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Sub">
            <type type="ident" def="SubDefaults"/>
          </field>
          <field type="pointer" name="StrZero">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SubDefaults">
          <field type="pointer" name="N">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RepeatedEnum">
          <field type="slice" name="Color">
            <elmtype type="ident" def="RepeatedEnum_Color"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MoreRepeated">
          <field type="slice" name="Bools">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="BoolsPacked">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="Ints">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="IntsPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Int64SPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="Strings">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Fixeds">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupOld">
          <field type="pointer" name="G">
            <type type="ident" def="GroupOld_G"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupOld_G">
          <field type="pointer" name="X">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupNew">
          <field type="pointer" name="G">
            <type type="ident" def="GroupNew_G"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupNew_G">
          <field type="pointer" name="X">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Y">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FloatingPoint">
          <field type="pointer" name="F">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageWithMap">
          <field type="map" name="NameMapping">
            <keytype type="ident" def="int32"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MsgMapping">
            <keytype type="ident" def="int64"/>
            <valtype type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </valtype>
          </field>
          <field type="map" name="ByteMapping">
            <keytype type="ident" def="bool"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="map" name="StrToStr">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FOO"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FOO"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FOO"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FOO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="GoTest_KIND"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_KIND"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="GoTest_KIND"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_KIND"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MyMessage_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MyMessage_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MyMessage_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Defaults_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Defaults_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Defaults_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="RepeatedEnum_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="RepeatedEnum_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFoo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FOO"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="GoTest_KIND"/>
          </resultsList>
        </function>
        <function name="GetTable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeatedField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GoTestField"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptionalField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BoolRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_FloatRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_DoubleRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_StringRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BytesRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BoolOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_FloatRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_DoubleRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequiredgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeatedgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GoTest_RepeatedGroup"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptionalgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSkipInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetSkipFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetSkipFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetSkipString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSkipgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetGroupString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetA">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetB">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLastField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFoodGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetConnected">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWeight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQuote">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </resultsList>
        </function>
        <function name="GetOthers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="OtherMessage"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRepInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="InnerMessage"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBikeshed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MyMessage_Color"/>
          </resultsList>
        </function>
        <function name="GetSomegroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBigfloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Empty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Empty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MessageList_Message"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStringField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetBytesField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetF_Bool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Float">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Double">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Enum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Defaults_Color"/>
          </resultsList>
        </function>
        <function name="GetF_Pinf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Ninf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Nan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetSub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrZero">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetN">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="RepeatedEnum_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBools">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBoolsPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIntsPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInt64SPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrings">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFixeds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetG">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetG">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetF">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNameMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMsgMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="pointer">
                <type type="ident" def="FloatingPoint"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetByteMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="slice">
                <elmtype type="ident" def="byte"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetStrToStr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FOO_FOO1"/>
        <name value="FOO_name"/>
        <name value="FOO_value"/>
        <name value="GoTest_VOID"/>
        <name value="GoTest_BOOL"/>
        <name value="GoTest_BYTES"/>
        <name value="GoTest_FINGERPRINT"/>
        <name value="GoTest_FLOAT"/>
        <name value="GoTest_INT"/>
        <name value="GoTest_STRING"/>
        <name value="GoTest_TIME"/>
        <name value="GoTest_TUPLE"/>
        <name value="GoTest_ARRAY"/>
        <name value="GoTest_MAP"/>
        <name value="GoTest_TABLE"/>
        <name value="GoTest_FUNCTION"/>
        <name value="GoTest_KIND_name"/>
        <name value="GoTest_KIND_value"/>
        <name value="MyMessage_RED"/>
        <name value="MyMessage_GREEN"/>
        <name value="MyMessage_BLUE"/>
        <name value="MyMessage_Color_name"/>
        <name value="MyMessage_Color_value"/>
        <name value="DefaultsMessage_ZERO"/>
        <name value="DefaultsMessage_ONE"/>
        <name value="DefaultsMessage_TWO"/>
        <name value="DefaultsMessage_DefaultsEnum_name"/>
        <name value="DefaultsMessage_DefaultsEnum_value"/>
        <name value="Defaults_RED"/>
        <name value="Defaults_GREEN"/>
        <name value="Defaults_BLUE"/>
        <name value="Defaults_Color_name"/>
        <name value="Defaults_Color_value"/>
        <name value="RepeatedEnum_RED"/>
        <name value="RepeatedEnum_Color_name"/>
        <name value="RepeatedEnum_Color_value"/>
        <name value="Default_GoTest_F_BoolDefaulted"/>
        <name value="Default_GoTest_F_Int32Defaulted"/>
        <name value="Default_GoTest_F_Int64Defaulted"/>
        <name value="Default_GoTest_F_Fixed32Defaulted"/>
        <name value="Default_GoTest_F_Fixed64Defaulted"/>
        <name value="Default_GoTest_F_Uint32Defaulted"/>
        <name value="Default_GoTest_F_Uint64Defaulted"/>
        <name value="Default_GoTest_F_FloatDefaulted"/>
        <name value="Default_GoTest_F_DoubleDefaulted"/>
        <name value="Default_GoTest_F_StringDefaulted"/>
        <name value="Default_GoTest_F_BytesDefaulted"/>
        <name value="Default_GoTest_F_Sint32Defaulted"/>
        <name value="Default_GoTest_F_Sint64Defaulted"/>
        <name value="Default_InnerMessage_Port"/>
        <name value="E_Ext_More"/>
        <name value="E_Ext_Text"/>
        <name value="E_Ext_Number"/>
        <name value="Default_Defaults_F_Bool"/>
        <name value="Default_Defaults_F_Int32"/>
        <name value="Default_Defaults_F_Int64"/>
        <name value="Default_Defaults_F_Fixed32"/>
        <name value="Default_Defaults_F_Fixed64"/>
        <name value="Default_Defaults_F_Uint32"/>
        <name value="Default_Defaults_F_Uint64"/>
        <name value="Default_Defaults_F_Float"/>
        <name value="Default_Defaults_F_Double"/>
        <name value="Default_Defaults_F_String"/>
        <name value="Default_Defaults_F_Bytes"/>
        <name value="Default_Defaults_F_Sint32"/>
        <name value="Default_Defaults_F_Sint64"/>
        <name value="Default_Defaults_F_Enum"/>
        <name value="Default_Defaults_F_Pinf"/>
        <name value="Default_Defaults_F_Ninf"/>
        <name value="Default_Defaults_F_Nan"/>
        <name value="Default_SubDefaults_N"/>
        <name value="E_Greeting"/>
        <name value="E_NoDefaultDouble"/>
        <name value="E_NoDefaultFloat"/>
        <name value="E_NoDefaultInt32"/>
        <name value="E_NoDefaultInt64"/>
        <name value="E_NoDefaultUint32"/>
        <name value="E_NoDefaultUint64"/>
        <name value="E_NoDefaultSint32"/>
        <name value="E_NoDefaultSint64"/>
        <name value="E_NoDefaultFixed32"/>
        <name value="E_NoDefaultFixed64"/>
        <name value="E_NoDefaultSfixed32"/>
        <name value="E_NoDefaultSfixed64"/>
        <name value="E_NoDefaultBool"/>
        <name value="E_NoDefaultString"/>
        <name value="E_NoDefaultBytes"/>
        <name value="E_NoDefaultEnum"/>
        <name value="E_DefaultDouble"/>
        <name value="E_DefaultFloat"/>
        <name value="E_DefaultInt32"/>
        <name value="E_DefaultInt64"/>
        <name value="E_DefaultUint32"/>
        <name value="E_DefaultUint64"/>
        <name value="E_DefaultSint32"/>
        <name value="E_DefaultSint64"/>
        <name value="E_DefaultFixed32"/>
        <name value="E_DefaultFixed64"/>
        <name value="E_DefaultSfixed32"/>
        <name value="E_DefaultSfixed64"/>
        <name value="E_DefaultBool"/>
        <name value="E_DefaultString"/>
        <name value="E_DefaultBytes"/>
        <name value="E_DefaultEnum"/>
        <name value="E_X201"/>
        <name value="E_X202"/>
        <name value="E_X203"/>
        <name value="E_X204"/>
        <name value="E_X205"/>
        <name value="E_X206"/>
        <name value="E_X207"/>
        <name value="E_X208"/>
        <name value="E_X209"/>
        <name value="E_X210"/>
        <name value="E_X211"/>
        <name value="E_X212"/>
        <name value="E_X213"/>
        <name value="E_X214"/>
        <name value="E_X215"/>
        <name value="E_X216"/>
        <name value="E_X217"/>
        <name value="E_X218"/>
        <name value="E_X219"/>
        <name value="E_X220"/>
        <name value="E_X221"/>
        <name value="E_X222"/>
        <name value="E_X223"/>
        <name value="E_X224"/>
        <name value="E_X225"/>
        <name value="E_X226"/>
        <name value="E_X227"/>
        <name value="E_X228"/>
        <name value="E_X229"/>
        <name value="E_X230"/>
        <name value="E_X231"/>
        <name value="E_X232"/>
        <name value="E_X233"/>
        <name value="E_X234"/>
        <name value="E_X235"/>
        <name value="E_X236"/>
        <name value="E_X237"/>
        <name value="E_X238"/>
        <name value="E_X239"/>
        <name value="E_X240"/>
        <name value="E_X241"/>
        <name value="E_X242"/>
        <name value="E_X243"/>
        <name value="E_X244"/>
        <name value="E_X245"/>
        <name value="E_X246"/>
        <name value="E_X247"/>
        <name value="E_X248"/>
        <name value="E_X249"/>
        <name value="E_X250"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/jsonpb">
      <types>
        <type type="struct" name="Marshaller">
          <field type="ident" def="bool" name="EnumsAsString"/>
          <field type="ident" def="string" name="Indent"/>
        </type>
      </types>
      <functions>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Marshaller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalToString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Marshaller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go/testdata/my_test">
      <types>
        <type name="HatType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Days" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Request_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Reply_Entry_Game" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Request">
          <field type="slice" name="Key">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Hue">
            <type type="ident" def="Request_Color"/>
          </field>
          <field type="pointer" name="Hat">
            <type type="ident" def="HatType"/>
          </field>
          <field type="pointer" name="Deadline">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Somegroup">
            <type type="ident" def="Request_SomeGroup"/>
          </field>
          <field type="map" name="NameMapping">
            <keytype type="ident" def="int32"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MsgMapping">
            <keytype type="ident" def="int64"/>
            <valtype type="pointer">
              <type type="ident" def="Reply"/>
            </valtype>
          </field>
          <field type="pointer" name="Reset_">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Request_SomeGroup">
          <field type="pointer" name="GroupField">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reply">
          <field type="slice" name="Found">
            <elmtype type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </elmtype>
          </field>
          <field type="slice" name="CompactKeys">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Reply_Entry">
          <field type="pointer" name="KeyThatNeeds_1234Camel_CasIng">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Value">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="XMyFieldName_2">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherBase">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ReplyExtensions">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherReplyExtensions">
          <field type="pointer" name="Key">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldReply">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="HatType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="HatType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="HatType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="HatType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Days"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Days"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Days"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Days"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Request_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Request_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Reply_Entry_Game"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry_Game"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Reply_Entry_Game"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry_Game"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetHue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Request_Color"/>
          </resultsList>
        </function>
        <function name="GetHat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="HatType"/>
          </resultsList>
        </function>
        <function name="GetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetSomegroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNameMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMsgMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="pointer">
                <type type="ident" def="Reply"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetReset_">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetFound">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Reply_Entry"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCompactKeys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKeyThatNeeds_1234Camel_CasIng">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetXMyFieldName_2">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Reply_Entry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherBase"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherReplyExtensions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldReply"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="HatType_FEDORA"/>
        <name value="HatType_FEZ"/>
        <name value="HatType_name"/>
        <name value="HatType_value"/>
        <name value="Days_MONDAY"/>
        <name value="Days_TUESDAY"/>
        <name value="Days_LUNDI"/>
        <name value="Days_name"/>
        <name value="Days_value"/>
        <name value="Request_RED"/>
        <name value="Request_GREEN"/>
        <name value="Request_BLUE"/>
        <name value="Request_Color_name"/>
        <name value="Request_Color_value"/>
        <name value="Reply_Entry_FOOTBALL"/>
        <name value="Reply_Entry_TENNIS"/>
        <name value="Reply_Entry_Game_name"/>
        <name value="Reply_Entry_Game_value"/>
        <name value="Default_Request_Hat"/>
        <name value="Default_Request_Deadline"/>
        <name value="Default_Reply_Entry_Value"/>
        <name value="E_ReplyExtensions_Time"/>
        <name value="E_ReplyExtensions_Carrot"/>
        <name value="E_ReplyExtensions_Donut"/>
        <name value="E_Tag"/>
        <name value="E_Donut"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go/generator">
      <types>
        <type name="Plugin" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Init">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Generator"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Generate">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="GenerateImports">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Descriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="DescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="nested">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="bool" name="group"/>
        </type>
        <type type="struct" name="EnumDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="EnumDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
        </type>
        <type type="struct" name="ExtensionDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FieldDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
        </type>
        <type type="struct" name="ImportedDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="ident" def="Object" name="o"/>
        </type>
        <type type="struct" name="FileDescriptor">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FileDescriptorProto"/>
            </type>
          </field>
          <field type="slice" name="desc">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="enum">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="imp">
            <elmtype type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </elmtype>
          </field>
          <field type="map" name="comments">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="SourceCodeInfo_Location"/>
              </type>
            </valtype>
          </field>
          <field type="map" name="exported">
            <keytype type="ident" def="Object"/>
            <valtype type="slice">
              <elmtype type="ident" def="symbol"/>
            </valtype>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="bool" name="proto3"/>
        </type>
        <type name="Object" type="interface">
          <method name="PackageName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TypeName">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="File">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="descriptor"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Generator">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Buffer"/>
            </type>
          </field>
          <field type="pointer" name="Request">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorRequest"/>
            </type>
          </field>
          <field type="pointer" name="Response">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorResponse"/>
            </type>
          </field>
          <field type="map" name="Param">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PackageImportPath"/>
          <field type="ident" def="string" name="ImportPrefix"/>
          <field type="map" name="ImportMap">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Pkg">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="packageName"/>
          <field type="slice" name="allFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="genFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="pointer" name="file">
            <type type="ident" def="FileDescriptor"/>
          </field>
          <field type="map" name="usedPackages">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="map" name="typeNameToObject">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Object"/>
          </field>
          <field type="slice" name="init">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="indent"/>
        </type>
      </types>
      <functions>
        <function name="RegisterPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="Plugin"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="File">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DescName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageSymbol"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="enumSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="constOrVarSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CommandLineParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DefaultPackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterUniquePackageName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetPackageNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WrapTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="BuildTypeNameMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ObjectNamed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
          </resultsList>
        </function>
        <function name="P">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="In">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Out">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GenerateAllFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="FileOf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeNameWithPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RecordTypeUse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CamelCase">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CamelCaseSlice">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go/plugin">
      <types>
        <type type="struct" name="CodeGeneratorRequest">
          <field type="slice" name="FileToGenerate">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Parameter">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="ProtoFile">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="google_protobuf"/>
                <item value="FileDescriptorProto"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse">
          <field type="pointer" name="Error">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse_File">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InsertionPoint">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Content">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFileToGenerate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetParameter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetProtoFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="google_protobuf"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CodeGeneratorResponse_File"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInsertionPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/proto/proto3_proto">
      <types>
        <type name="Message_Humour" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Message">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="Message_Humour" name="Hilarity"/>
          <field type="ident" def="uint32" name="HeightInCm"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int64" name="ResultCount"/>
          <field type="ident" def="bool" name="TrueScotsman"/>
          <field type="ident" def="float32" name="Score"/>
          <field type="slice" name="Key">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="Nested">
            <type type="ident" def="Nested"/>
          </field>
          <field type="map" name="Terrain">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="ident" def="Nested"/>
            </valtype>
          </field>
          <field type="pointer" name="Proto2Field">
            <type type="selector">
              <prefix value="testdata"/>
              <item value="SubDefaults"/>
            </type>
          </field>
          <field type="map" name="Proto2Value">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="testdata"/>
                <item value="SubDefaults"/>
              </type>
            </valtype>
          </field>
        </type>
        <type type="struct" name="Nested">
          <field type="ident" def="string" name="Bunny"/>
        </type>
        <type type="struct" name="MessageWithMap">
          <field type="map" name="ByteMapping">
            <keytype type="ident" def="bool"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Message_Humour"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetTerrain">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="ident" def="Nested"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetProto2Field">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testdata"/>
                <item value="SubDefaults"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="GetProto2Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="pointer">
                <type type="selector">
                  <prefix value="testdata"/>
                  <item value="SubDefaults"/>
                </type>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetByteMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="slice">
                <elmtype type="ident" def="byte"/>
              </valtype>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Message_UNKNOWN"/>
        <name value="Message_PUNS"/>
        <name value="Message_SLAPSTICK"/>
        <name value="Message_BILL_BAILEY"/>
        <name value="Message_Humour_name"/>
        <name value="Message_Humour_value"/>
      </names>
    </package>
    <package importpath="code.google.com/p/goprotobuf/proto">
      <types>
        <type type="struct" name="ParseError">
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="int" name="Line"/>
          <field type="ident" def="int" name="Offset"/>
        </type>
        <type type="struct" name="StructProperties">
          <field type="slice" name="Prop">
            <elmtype type="pointer">
              <type type="ident" def="Properties"/>
            </elmtype>
          </field>
          <field type="ident" def="int" name="reqCount"/>
          <field type="ident" def="tagMap" name="decoderTags"/>
          <field type="map" name="decoderOrigNames">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="ident" def="field" name="unrecField"/>
          <field type="ident" def="bool" name="extendable"/>
        </type>
        <type type="struct" name="Properties">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="OrigName"/>
          <field type="ident" def="string" name="Wire"/>
          <field type="ident" def="int" name="WireType"/>
          <field type="ident" def="int" name="Tag"/>
          <field type="ident" def="bool" name="Required"/>
          <field type="ident" def="bool" name="Optional"/>
          <field type="ident" def="bool" name="Repeated"/>
          <field type="ident" def="bool" name="Packed"/>
          <field type="ident" def="string" name="Enum"/>
          <field type="ident" def="bool" name="proto3"/>
          <field type="ident" def="string" name="Default"/>
          <field type="ident" def="bool" name="HasDefault"/>
          <field type="ident" def="uint64" name="def_uint64"/>
          <field type="ident" def="encoder" name="enc"/>
          <field type="ident" def="valueEncoder" name="valEnc"/>
          <field type="ident" def="field" name="field"/>
          <field type="slice" name="tagcode">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="array" name="tagbuf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="stype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="pointer" name="sprop">
            <type type="ident" def="StructProperties"/>
          </field>
          <field type="ident" def="bool" name="isMarshaler"/>
          <field type="ident" def="bool" name="isUnmarshaler"/>
          <field type="selector" name="mtype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="pointer" name="mkeyprop">
            <type type="ident" def="Properties"/>
          </field>
          <field type="pointer" name="mvalprop">
            <type type="ident" def="Properties"/>
          </field>
          <field type="ident" def="sizer" name="size"/>
          <field type="ident" def="valueSizer" name="valSize"/>
          <field type="ident" def="decoder" name="dec"/>
          <field type="ident" def="valueDecoder" name="valDec"/>
          <field type="ident" def="decoder" name="packedDec"/>
        </type>
        <type type="struct" name="MessageSet">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="_MessageSet_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Message" type="interface">
          <method name="Reset">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="ProtoMessage">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Stats">
          <field type="ident" def="uint64" name="Emalloc"/>
          <field type="ident" def="uint64" name="Dmalloc"/>
          <field type="ident" def="uint64" name="Encode"/>
          <field type="ident" def="uint64" name="Decode"/>
          <field type="ident" def="uint64" name="Chit"/>
          <field type="ident" def="uint64" name="Cmiss"/>
          <field type="ident" def="uint64" name="Size"/>
        </type>
        <type type="struct" name="Buffer">
          <field type="slice" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="slice" name="bools">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="uint32s">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="uint64s">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="int32s">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="int64s">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="float32s">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="float64s">
            <elmtype type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="ExtensionRange">
          <field type="ident" def="int32" name="Start"/>
          <field type="ident" def="int32" name="End"/>
        </type>
        <type type="struct" name="ExtensionDesc">
          <field type="ident" def="Message" name="ExtendedType"/>
          <field type="interface" name="ExtensionType"/>
          <field type="ident" def="int32" name="Field"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Tag"/>
        </type>
        <type type="struct" name="Extension">
          <field type="pointer" name="desc">
            <type type="ident" def="ExtensionDesc"/>
          </field>
          <field type="interface" name="value"/>
          <field type="slice" name="enc">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequiredNotSetError">
          <field type="ident" def="string" name="field"/>
        </type>
        <type name="Marshaler" type="interface">
          <method name="Marshal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Unmarshaler" type="interface">
          <method name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParseError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="token"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalText">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="byte"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MarshalText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CompactText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompactTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="reflect"/>
                <item value="StructField"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetProperties">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterEnum">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterMessageSetType">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="int32"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetStats">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Stats"/>
          </resultsList>
        </function>
        <function name="NewBuffer">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetBuf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Bool">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="Int32">
          <recvList/>
          <paramsList>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int64">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Float32">
          <recvList/>
          <paramsList>
            <type type="ident" def="float32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="Float64">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint32">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint64">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="EnumName">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSONEnum">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int32"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DebugPrint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetDefaults">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetRawExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="ident" def="int32"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HasExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ClearExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterExtension">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisteredExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequiredNotSetError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMerge">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Message"/>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="WireVarint"/>
        <name value="WireFixed64"/>
        <name value="WireBytes"/>
        <name value="WireStartGroup"/>
        <name value="WireEndGroup"/>
        <name value="WireFixed32"/>
        <name value="ErrNoMessageTypeId"/>
        <name value="ErrMissingExtension"/>
        <name value="ErrNil"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go/descriptor">
      <types>
        <type name="FieldDescriptorProto_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldDescriptorProto_Label" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FileOptions_OptimizeMode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldOptions_CType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="FileDescriptorSet">
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Package">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Dependency">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="PublicDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="WeakDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="MessageType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Service">
            <elmtype type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FileOptions"/>
          </field>
          <field type="pointer" name="SourceCodeInfo">
            <type type="ident" def="SourceCodeInfo"/>
          </field>
          <field type="pointer" name="Syntax">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="NestedType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="ExtensionRange">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </elmtype>
          </field>
          <field type="slice" name="OneofDecl">
            <elmtype type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MessageOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto_ExtensionRange">
          <field type="pointer" name="Start">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Label">
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </field>
          <field type="pointer" name="TypeName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Extendee">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DefaultValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="OneofIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FieldOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OneofDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumValueOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Method">
            <elmtype type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="ServiceOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="OutputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MethodOptions"/>
          </field>
          <field type="pointer" name="ClientStreaming">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ServerStreaming">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileOptions">
          <field type="pointer" name="JavaPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaOuterClassname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaMultipleFiles">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenerateEqualsAndHash">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaStringCheckUtf8">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="OptimizeFor">
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </field>
          <field type="pointer" name="GoPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="CcGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="PyGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CcEnableArenas">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageOptions">
          <field type="pointer" name="MessageSetWireFormat">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="NoStandardDescriptorAccessor">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MapEntry">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldOptions">
          <field type="pointer" name="Ctype">
            <type type="ident" def="FieldOptions_CType"/>
          </field>
          <field type="pointer" name="Packed">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Lazy">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Weak">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumOptions">
          <field type="pointer" name="AllowAlias">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption">
          <field type="slice" name="Name">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </elmtype>
          </field>
          <field type="pointer" name="IdentifierValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="PositiveIntValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="NegativeIntValue">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="DoubleValue">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="StringValue">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="AggregateValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption_NamePart">
          <field type="pointer" name="NamePart">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IsExtension">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo">
          <field type="slice" name="Location">
            <elmtype type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo_Location">
          <field type="slice" name="Path">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Span">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="pointer" name="LeadingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TrailingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FileDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPublicDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWeakDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ServiceDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSourceCodeInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSyntax">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNestedType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtensionRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto_ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOneofDecl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="OneofDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </resultsList>
        </function>
        <function name="GetTypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetExtendee">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDefaultValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOneofIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumValueDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MethodDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOutputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetClientStreaming">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetServerStreaming">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetJavaPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaOuterClassname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaMultipleFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenerateEqualsAndHash">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaStringCheckUtf8">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOptimizeFor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </resultsList>
        </function>
        <function name="GetGoPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCcGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPyGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCcEnableArenas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageSetWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetNoStandardDescriptorAccessor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMapEntry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCtype">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldOptions_CType"/>
          </resultsList>
        </function>
        <function name="GetPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLazy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetWeak">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetAllowAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption_NamePart"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetIdentifierValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPositiveIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetNegativeIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetDoubleValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAggregateValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNamePart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIsExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SourceCodeInfo_Location"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSpan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLeadingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTrailingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FieldDescriptorProto_TYPE_DOUBLE"/>
        <name value="FieldDescriptorProto_TYPE_FLOAT"/>
        <name value="FieldDescriptorProto_TYPE_INT64"/>
        <name value="FieldDescriptorProto_TYPE_UINT64"/>
        <name value="FieldDescriptorProto_TYPE_INT32"/>
        <name value="FieldDescriptorProto_TYPE_FIXED64"/>
        <name value="FieldDescriptorProto_TYPE_FIXED32"/>
        <name value="FieldDescriptorProto_TYPE_BOOL"/>
        <name value="FieldDescriptorProto_TYPE_STRING"/>
        <name value="FieldDescriptorProto_TYPE_GROUP"/>
        <name value="FieldDescriptorProto_TYPE_MESSAGE"/>
        <name value="FieldDescriptorProto_TYPE_BYTES"/>
        <name value="FieldDescriptorProto_TYPE_UINT32"/>
        <name value="FieldDescriptorProto_TYPE_ENUM"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED32"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED64"/>
        <name value="FieldDescriptorProto_TYPE_SINT32"/>
        <name value="FieldDescriptorProto_TYPE_SINT64"/>
        <name value="FieldDescriptorProto_Type_name"/>
        <name value="FieldDescriptorProto_Type_value"/>
        <name value="FieldDescriptorProto_LABEL_OPTIONAL"/>
        <name value="FieldDescriptorProto_LABEL_REQUIRED"/>
        <name value="FieldDescriptorProto_LABEL_REPEATED"/>
        <name value="FieldDescriptorProto_Label_name"/>
        <name value="FieldDescriptorProto_Label_value"/>
        <name value="FileOptions_SPEED"/>
        <name value="FileOptions_CODE_SIZE"/>
        <name value="FileOptions_LITE_RUNTIME"/>
        <name value="FileOptions_OptimizeMode_name"/>
        <name value="FileOptions_OptimizeMode_value"/>
        <name value="FieldOptions_STRING"/>
        <name value="FieldOptions_CORD"/>
        <name value="FieldOptions_STRING_PIECE"/>
        <name value="FieldOptions_CType_name"/>
        <name value="FieldOptions_CType_value"/>
        <name value="Default_MethodDescriptorProto_ClientStreaming"/>
        <name value="Default_MethodDescriptorProto_ServerStreaming"/>
        <name value="Default_FileOptions_JavaMultipleFiles"/>
        <name value="Default_FileOptions_JavaGenerateEqualsAndHash"/>
        <name value="Default_FileOptions_JavaStringCheckUtf8"/>
        <name value="Default_FileOptions_OptimizeFor"/>
        <name value="Default_FileOptions_CcGenericServices"/>
        <name value="Default_FileOptions_JavaGenericServices"/>
        <name value="Default_FileOptions_PyGenericServices"/>
        <name value="Default_FileOptions_Deprecated"/>
        <name value="Default_FileOptions_CcEnableArenas"/>
        <name value="Default_MessageOptions_MessageSetWireFormat"/>
        <name value="Default_MessageOptions_NoStandardDescriptorAccessor"/>
        <name value="Default_MessageOptions_Deprecated"/>
        <name value="Default_FieldOptions_Ctype"/>
        <name value="Default_FieldOptions_Lazy"/>
        <name value="Default_FieldOptions_Deprecated"/>
        <name value="Default_FieldOptions_Weak"/>
        <name value="Default_EnumOptions_Deprecated"/>
        <name value="Default_EnumValueOptions_Deprecated"/>
        <name value="Default_ServiceOptions_Deprecated"/>
        <name value="Default_MethodOptions_Deprecated"/>
      </names>
    </package>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go/generator">
      <types>
        <type name="Plugin" type="interface">
          <method name="Name">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="Init">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Generator"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Generate">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="GenerateImports">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="FileDescriptor"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Descriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="DescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="nested">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
          <field type="ident" def="bool" name="group"/>
        </type>
        <type type="struct" name="EnumDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="EnumDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
          <field type="slice" name="typename">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="string" name="path"/>
        </type>
        <type type="struct" name="ExtensionDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FieldDescriptorProto"/>
            </type>
          </field>
          <field type="pointer" name="parent">
            <type type="ident" def="Descriptor"/>
          </field>
        </type>
        <type type="struct" name="ImportedDescriptor">
          <field type="ident" def="common" name=""/>
          <field type="ident" def="Object" name="o"/>
        </type>
        <type type="struct" name="FileDescriptor">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="descriptor"/>
              <item value="FileDescriptorProto"/>
            </type>
          </field>
          <field type="slice" name="desc">
            <elmtype type="pointer">
              <type type="ident" def="Descriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="enum">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="ext">
            <elmtype type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="imp">
            <elmtype type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </elmtype>
          </field>
          <field type="map" name="comments">
            <keytype type="ident" def="string"/>
            <valtype type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="SourceCodeInfo_Location"/>
              </type>
            </valtype>
          </field>
          <field type="map" name="exported">
            <keytype type="ident" def="Object"/>
            <valtype type="slice">
              <elmtype type="ident" def="symbol"/>
            </valtype>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="ident" def="bool" name="proto3"/>
        </type>
        <type name="Object" type="interface">
          <method name="PackageName">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="TypeName">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="string"/>
              </type>
            </resultsList>
          </method>
          <method name="File">
            <paramsList/>
            <resultsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="descriptor"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Generator">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="bytes"/>
              <item value="Buffer"/>
            </type>
          </field>
          <field type="pointer" name="Request">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorRequest"/>
            </type>
          </field>
          <field type="pointer" name="Response">
            <type type="selector">
              <prefix value="plugin"/>
              <item value="CodeGeneratorResponse"/>
            </type>
          </field>
          <field type="map" name="Param">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="PackageImportPath"/>
          <field type="ident" def="string" name="ImportPrefix"/>
          <field type="map" name="ImportMap">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Pkg">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="packageName"/>
          <field type="slice" name="allFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="slice" name="genFiles">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </elmtype>
          </field>
          <field type="pointer" name="file">
            <type type="ident" def="FileDescriptor"/>
          </field>
          <field type="map" name="usedPackages">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="bool"/>
          </field>
          <field type="map" name="typeNameToObject">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="Object"/>
          </field>
          <field type="slice" name="init">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="string" name="indent"/>
        </type>
      </types>
      <functions>
        <function name="RegisterPlugin">
          <recvList/>
          <paramsList>
            <type type="ident" def="Plugin"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="File">
          <recvList>
            <type type="pointer">
              <type type="ident" def="common"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="DescName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ExtensionDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ImportedDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="PackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="messageSymbol"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="enumSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GenerateAlias">
          <recvList>
            <type type="ident" def="constOrVarSymbol"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="error"/>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fail">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CommandLineParameters">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DefaultPackageName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RegisterUniquePackageName">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="SetPackageNames">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WrapTypes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="BuildTypeNameMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ObjectNamed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Object"/>
          </resultsList>
        </function>
        <function name="P">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="In">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Out">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GenerateAllFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="FileOf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FileDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileDescriptor"/>
            </type>
          </resultsList>
        </function>
        <function name="PrintComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="TypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="TypeNameWithPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Object"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GoType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Descriptor"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="descriptor"/>
                <item value="FieldDescriptorProto"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="RecordTypeUse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Generator"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CamelCase">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CamelCaseSlice">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/proto/testdata">
      <types>
        <type name="FOO" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="GoTest_KIND" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="MyMessage_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="DefaultsMessage_DefaultsEnum" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="Defaults_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="RepeatedEnum_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="GoEnum">
          <field type="pointer" name="Foo">
            <type type="ident" def="FOO"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTestField">
          <field type="pointer" name="Label">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest">
          <field type="pointer" name="Kind">
            <type type="ident" def="GoTest_KIND"/>
          </field>
          <field type="pointer" name="Table">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Param">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="RequiredField">
            <type type="ident" def="GoTestField"/>
          </field>
          <field type="slice" name="RepeatedField">
            <elmtype type="pointer">
              <type type="ident" def="GoTestField"/>
            </elmtype>
          </field>
          <field type="pointer" name="OptionalField">
            <type type="ident" def="GoTestField"/>
          </field>
          <field type="pointer" name="F_BoolRequired">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Required">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Required">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Required">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Required">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Required">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Required">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatRequired">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleRequired">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringRequired">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesRequired">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Required">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Required">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_BoolRepeated">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="F_Int32Repeated">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Int64Repeated">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_Fixed32Repeated">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Fixed64Repeated">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_Uint32Repeated">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Uint64Repeated">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_FloatRepeated">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="F_DoubleRepeated">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="F_StringRepeated">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesRepeated">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="F_Sint32Repeated">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Sint64Repeated">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_BoolOptional">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Optional">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Optional">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Optional">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Optional">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Optional">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Optional">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatOptional">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleOptional">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringOptional">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesOptional">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Optional">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Optional">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_BoolDefaulted">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32Defaulted">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64Defaulted">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32Defaulted">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64Defaulted">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32Defaulted">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64Defaulted">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_FloatDefaulted">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_DoubleDefaulted">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_StringDefaulted">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_BytesDefaulted">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32Defaulted">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64Defaulted">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_BoolRepeatedPacked">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="F_Int32RepeatedPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Int64RepeatedPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="F_Fixed32RepeatedPacked">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Fixed64RepeatedPacked">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_Uint32RepeatedPacked">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="F_Uint64RepeatedPacked">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="F_FloatRepeatedPacked">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="F_DoubleRepeatedPacked">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="F_Sint32RepeatedPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="F_Sint64RepeatedPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="pointer" name="Requiredgroup">
            <type type="ident" def="GoTest_RequiredGroup"/>
          </field>
          <field type="slice" name="Repeatedgroup">
            <elmtype type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </elmtype>
          </field>
          <field type="pointer" name="Optionalgroup">
            <type type="ident" def="GoTest_OptionalGroup"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_RequiredGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_RepeatedGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoTest_OptionalGroup">
          <field type="pointer" name="RequiredField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoSkipTest">
          <field type="pointer" name="SkipInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="SkipFixed32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="SkipFixed64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="SkipString">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Skipgroup">
            <type type="ident" def="GoSkipTest_SkipGroup"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GoSkipTest_SkipGroup">
          <field type="pointer" name="GroupInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="GroupString">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NonPackedTest">
          <field type="slice" name="A">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="PackedTest">
          <field type="slice" name="B">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MaxTag">
          <field type="pointer" name="LastField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldMessage">
          <field type="pointer" name="Nested">
            <type type="ident" def="OldMessage_Nested"/>
          </field>
          <field type="pointer" name="Num">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OldMessage_Nested">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NewMessage">
          <field type="pointer" name="Nested">
            <type type="ident" def="NewMessage_Nested"/>
          </field>
          <field type="pointer" name="Num">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="NewMessage_Nested">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="FoodGroup">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="InnerMessage">
          <field type="pointer" name="Host">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Port">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Connected">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OtherMessage">
          <field type="pointer" name="Key">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="Weight">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Inner">
            <type type="ident" def="InnerMessage"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessage">
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Quote">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Pet">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Inner">
            <type type="ident" def="InnerMessage"/>
          </field>
          <field type="slice" name="Others">
            <elmtype type="pointer">
              <type type="ident" def="OtherMessage"/>
            </elmtype>
          </field>
          <field type="slice" name="RepInner">
            <elmtype type="pointer">
              <type type="ident" def="InnerMessage"/>
            </elmtype>
          </field>
          <field type="pointer" name="Bikeshed">
            <type type="ident" def="MyMessage_Color"/>
          </field>
          <field type="pointer" name="Somegroup">
            <type type="ident" def="MyMessage_SomeGroup"/>
          </field>
          <field type="slice" name="RepBytes">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="pointer" name="Bigfloat">
            <type type="ident" def="float64"/>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessage_SomeGroup">
          <field type="pointer" name="GroupField">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Ext">
          <field type="pointer" name="Data">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DefaultsMessage">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MyMessageSet">
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Empty">
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageList">
          <field type="slice" name="Message">
            <elmtype type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageList_Message">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Count">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Strings">
          <field type="pointer" name="StringField">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="BytesField">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Defaults">
          <field type="pointer" name="F_Bool">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="F_Int32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Int64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Fixed32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Fixed64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Uint32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="F_Uint64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="F_Float">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Double">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="F_String">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="F_Bytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="F_Sint32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="F_Sint64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="F_Enum">
            <type type="ident" def="Defaults_Color"/>
          </field>
          <field type="pointer" name="F_Pinf">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Ninf">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="F_Nan">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="Sub">
            <type type="ident" def="SubDefaults"/>
          </field>
          <field type="pointer" name="StrZero">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SubDefaults">
          <field type="pointer" name="N">
            <type type="ident" def="int64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RepeatedEnum">
          <field type="slice" name="Color">
            <elmtype type="ident" def="RepeatedEnum_Color"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MoreRepeated">
          <field type="slice" name="Bools">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="BoolsPacked">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="Ints">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="IntsPacked">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Int64SPacked">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="Strings">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="Fixeds">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupOld">
          <field type="pointer" name="G">
            <type type="ident" def="GroupOld_G"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupOld_G">
          <field type="pointer" name="X">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupNew">
          <field type="pointer" name="G">
            <type type="ident" def="GroupNew_G"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="GroupNew_G">
          <field type="pointer" name="X">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Y">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FloatingPoint">
          <field type="pointer" name="F">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageWithMap">
          <field type="map" name="NameMapping">
            <keytype type="ident" def="int32"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MsgMapping">
            <keytype type="ident" def="int64"/>
            <valtype type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </valtype>
          </field>
          <field type="map" name="ByteMapping">
            <keytype type="ident" def="bool"/>
            <valtype type="slice">
              <elmtype type="ident" def="byte"/>
            </valtype>
          </field>
          <field type="map" name="StrToStr">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FOO"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FOO"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FOO"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FOO"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="GoTest_KIND"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_KIND"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="GoTest_KIND"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_KIND"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="MyMessage_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MyMessage_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="MyMessage_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage_DefaultsEnum"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Defaults_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Defaults_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Defaults_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="RepeatedEnum_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="RepeatedEnum_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFoo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FOO"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKind">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="GoTest_KIND"/>
          </resultsList>
        </function>
        <function name="GetTable">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeatedField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GoTestField"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptionalField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTestField"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BoolRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesRequired">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Required">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_FloatRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_DoubleRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_StringRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BytesRepeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint64Repeated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_BoolOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesOptional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Optional">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_FloatDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_DoubleDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_StringDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_BytesDefaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64Defaulted">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_BoolRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Int64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Fixed64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Uint64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_FloatRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_DoubleRepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint64RepeatedPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRequiredgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeatedgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="GoTest_RepeatedGroup"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptionalgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RequiredGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_RepeatedGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRequiredField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoTest_OptionalGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetSkipInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetSkipFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetSkipFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetSkipString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetSkipgroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetGroupString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GoSkipTest_SkipGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetA">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NonPackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetB">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PackedTest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLastField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MaxTag"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OldMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNested">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </resultsList>
        </function>
        <function name="GetNum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFoodGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="NewMessage_Nested"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPort">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetConnected">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetKey">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWeight">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OtherMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetQuote">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPet">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="InnerMessage"/>
            </type>
          </resultsList>
        </function>
        <function name="GetOthers">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="OtherMessage"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRepInner">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="InnerMessage"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBikeshed">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="MyMessage_Color"/>
          </resultsList>
        </function>
        <function name="GetSomegroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRepBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBigfloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetGroupField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessage_SomeGroup"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetData">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Ext"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultsMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MyMessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Empty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Empty"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MessageList_Message"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCount">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageList_Message"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStringField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetBytesField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Strings"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetF_Bool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetF_Int32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Int64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Fixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Uint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetF_Uint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetF_Float">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Double">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetF_String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetF_Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetF_Sint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetF_Sint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetF_Enum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Defaults_Color"/>
          </resultsList>
        </function>
        <function name="GetF_Pinf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Ninf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetF_Nan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetSub">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrZero">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Defaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetN">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SubDefaults"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RepeatedEnum"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="RepeatedEnum_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetBools">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBoolsPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetIntsPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetInt64SPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrings">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetFixeds">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MoreRepeated"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetG">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupOld_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetG">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetX">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetY">
          <recvList>
            <type type="pointer">
              <type type="ident" def="GroupNew_G"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetF">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FloatingPoint"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNameMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMsgMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="pointer">
                <type type="ident" def="FloatingPoint"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetByteMapping">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="slice">
                <elmtype type="ident" def="byte"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetStrToStr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageWithMap"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FOO_FOO1"/>
        <name value="FOO_name"/>
        <name value="FOO_value"/>
        <name value="GoTest_VOID"/>
        <name value="GoTest_BOOL"/>
        <name value="GoTest_BYTES"/>
        <name value="GoTest_FINGERPRINT"/>
        <name value="GoTest_FLOAT"/>
        <name value="GoTest_INT"/>
        <name value="GoTest_STRING"/>
        <name value="GoTest_TIME"/>
        <name value="GoTest_TUPLE"/>
        <name value="GoTest_ARRAY"/>
        <name value="GoTest_MAP"/>
        <name value="GoTest_TABLE"/>
        <name value="GoTest_FUNCTION"/>
        <name value="GoTest_KIND_name"/>
        <name value="GoTest_KIND_value"/>
        <name value="MyMessage_RED"/>
        <name value="MyMessage_GREEN"/>
        <name value="MyMessage_BLUE"/>
        <name value="MyMessage_Color_name"/>
        <name value="MyMessage_Color_value"/>
        <name value="DefaultsMessage_ZERO"/>
        <name value="DefaultsMessage_ONE"/>
        <name value="DefaultsMessage_TWO"/>
        <name value="DefaultsMessage_DefaultsEnum_name"/>
        <name value="DefaultsMessage_DefaultsEnum_value"/>
        <name value="Defaults_RED"/>
        <name value="Defaults_GREEN"/>
        <name value="Defaults_BLUE"/>
        <name value="Defaults_Color_name"/>
        <name value="Defaults_Color_value"/>
        <name value="RepeatedEnum_RED"/>
        <name value="RepeatedEnum_Color_name"/>
        <name value="RepeatedEnum_Color_value"/>
        <name value="Default_GoTest_F_BoolDefaulted"/>
        <name value="Default_GoTest_F_Int32Defaulted"/>
        <name value="Default_GoTest_F_Int64Defaulted"/>
        <name value="Default_GoTest_F_Fixed32Defaulted"/>
        <name value="Default_GoTest_F_Fixed64Defaulted"/>
        <name value="Default_GoTest_F_Uint32Defaulted"/>
        <name value="Default_GoTest_F_Uint64Defaulted"/>
        <name value="Default_GoTest_F_FloatDefaulted"/>
        <name value="Default_GoTest_F_DoubleDefaulted"/>
        <name value="Default_GoTest_F_StringDefaulted"/>
        <name value="Default_GoTest_F_BytesDefaulted"/>
        <name value="Default_GoTest_F_Sint32Defaulted"/>
        <name value="Default_GoTest_F_Sint64Defaulted"/>
        <name value="Default_InnerMessage_Port"/>
        <name value="E_Ext_More"/>
        <name value="E_Ext_Text"/>
        <name value="E_Ext_Number"/>
        <name value="Default_Defaults_F_Bool"/>
        <name value="Default_Defaults_F_Int32"/>
        <name value="Default_Defaults_F_Int64"/>
        <name value="Default_Defaults_F_Fixed32"/>
        <name value="Default_Defaults_F_Fixed64"/>
        <name value="Default_Defaults_F_Uint32"/>
        <name value="Default_Defaults_F_Uint64"/>
        <name value="Default_Defaults_F_Float"/>
        <name value="Default_Defaults_F_Double"/>
        <name value="Default_Defaults_F_String"/>
        <name value="Default_Defaults_F_Bytes"/>
        <name value="Default_Defaults_F_Sint32"/>
        <name value="Default_Defaults_F_Sint64"/>
        <name value="Default_Defaults_F_Enum"/>
        <name value="Default_Defaults_F_Pinf"/>
        <name value="Default_Defaults_F_Ninf"/>
        <name value="Default_Defaults_F_Nan"/>
        <name value="Default_SubDefaults_N"/>
        <name value="E_Greeting"/>
        <name value="E_NoDefaultDouble"/>
        <name value="E_NoDefaultFloat"/>
        <name value="E_NoDefaultInt32"/>
        <name value="E_NoDefaultInt64"/>
        <name value="E_NoDefaultUint32"/>
        <name value="E_NoDefaultUint64"/>
        <name value="E_NoDefaultSint32"/>
        <name value="E_NoDefaultSint64"/>
        <name value="E_NoDefaultFixed32"/>
        <name value="E_NoDefaultFixed64"/>
        <name value="E_NoDefaultSfixed32"/>
        <name value="E_NoDefaultSfixed64"/>
        <name value="E_NoDefaultBool"/>
        <name value="E_NoDefaultString"/>
        <name value="E_NoDefaultBytes"/>
        <name value="E_NoDefaultEnum"/>
        <name value="E_DefaultDouble"/>
        <name value="E_DefaultFloat"/>
        <name value="E_DefaultInt32"/>
        <name value="E_DefaultInt64"/>
        <name value="E_DefaultUint32"/>
        <name value="E_DefaultUint64"/>
        <name value="E_DefaultSint32"/>
        <name value="E_DefaultSint64"/>
        <name value="E_DefaultFixed32"/>
        <name value="E_DefaultFixed64"/>
        <name value="E_DefaultSfixed32"/>
        <name value="E_DefaultSfixed64"/>
        <name value="E_DefaultBool"/>
        <name value="E_DefaultString"/>
        <name value="E_DefaultBytes"/>
        <name value="E_DefaultEnum"/>
        <name value="E_X201"/>
        <name value="E_X202"/>
        <name value="E_X203"/>
        <name value="E_X204"/>
        <name value="E_X205"/>
        <name value="E_X206"/>
        <name value="E_X207"/>
        <name value="E_X208"/>
        <name value="E_X209"/>
        <name value="E_X210"/>
        <name value="E_X211"/>
        <name value="E_X212"/>
        <name value="E_X213"/>
        <name value="E_X214"/>
        <name value="E_X215"/>
        <name value="E_X216"/>
        <name value="E_X217"/>
        <name value="E_X218"/>
        <name value="E_X219"/>
        <name value="E_X220"/>
        <name value="E_X221"/>
        <name value="E_X222"/>
        <name value="E_X223"/>
        <name value="E_X224"/>
        <name value="E_X225"/>
        <name value="E_X226"/>
        <name value="E_X227"/>
        <name value="E_X228"/>
        <name value="E_X229"/>
        <name value="E_X230"/>
        <name value="E_X231"/>
        <name value="E_X232"/>
        <name value="E_X233"/>
        <name value="E_X234"/>
        <name value="E_X235"/>
        <name value="E_X236"/>
        <name value="E_X237"/>
        <name value="E_X238"/>
        <name value="E_X239"/>
        <name value="E_X240"/>
        <name value="E_X241"/>
        <name value="E_X242"/>
        <name value="E_X243"/>
        <name value="E_X244"/>
        <name value="E_X245"/>
        <name value="E_X246"/>
        <name value="E_X247"/>
        <name value="E_X248"/>
        <name value="E_X249"/>
        <name value="E_X250"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go/plugin">
      <types>
        <type type="struct" name="CodeGeneratorRequest">
          <field type="slice" name="FileToGenerate">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="pointer" name="Parameter">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="ProtoFile">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="google_protobuf"/>
                <item value="FileDescriptorProto"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse">
          <field type="pointer" name="Error">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="CodeGeneratorResponse_File">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InsertionPoint">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Content">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFileToGenerate">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetParameter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetProtoFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorRequest"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="selector">
                  <prefix value="google_protobuf"/>
                  <item value="FileDescriptorProto"/>
                </type>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="CodeGeneratorResponse_File"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInsertionPoint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetContent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="CodeGeneratorResponse_File"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/jsonpb">
      <types>
        <type type="struct" name="Marshaller">
          <field type="ident" def="bool" name="EnumsAsString"/>
          <field type="ident" def="string" name="Indent"/>
        </type>
      </types>
      <functions>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Marshaller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalToString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Marshaller"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="proto"/>
              <item value="Message"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/golang/protobuf/protoc-gen-go">
      <types/>
      <functions/>
      <names/>
    </package>
    <package importpath="code.google.com/p/goprotobuf/protoc-gen-go/descriptor">
      <types>
        <type name="FieldDescriptorProto_Type" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldDescriptorProto_Label" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FileOptions_OptimizeMode" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type name="FieldOptions_CType" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="FileDescriptorSet">
          <field type="slice" name="File">
            <elmtype type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Package">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Dependency">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="PublicDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="WeakDependency">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="MessageType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Service">
            <elmtype type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FileOptions"/>
          </field>
          <field type="pointer" name="SourceCodeInfo">
            <type type="ident" def="SourceCodeInfo"/>
          </field>
          <field type="pointer" name="Syntax">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Field">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="Extension">
            <elmtype type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="NestedType">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="EnumType">
            <elmtype type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </elmtype>
          </field>
          <field type="slice" name="ExtensionRange">
            <elmtype type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </elmtype>
          </field>
          <field type="slice" name="OneofDecl">
            <elmtype type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MessageOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DescriptorProto_ExtensionRange">
          <field type="pointer" name="Start">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="End">
            <type type="ident" def="int32"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Label">
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </field>
          <field type="pointer" name="Type">
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </field>
          <field type="pointer" name="TypeName">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Extendee">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="DefaultValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="OneofIndex">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="FieldOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="OneofDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Value">
            <elmtype type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Number">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="EnumValueOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="Method">
            <elmtype type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </elmtype>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="ServiceOptions"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodDescriptorProto">
          <field type="pointer" name="Name">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="InputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="OutputType">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="Options">
            <type type="ident" def="MethodOptions"/>
          </field>
          <field type="pointer" name="ClientStreaming">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="ServerStreaming">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FileOptions">
          <field type="pointer" name="JavaPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaOuterClassname">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="JavaMultipleFiles">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenerateEqualsAndHash">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaStringCheckUtf8">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="OptimizeFor">
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </field>
          <field type="pointer" name="GoPackage">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="CcGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="JavaGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="PyGenericServices">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="CcEnableArenas">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MessageOptions">
          <field type="pointer" name="MessageSetWireFormat">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="NoStandardDescriptorAccessor">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="MapEntry">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="FieldOptions">
          <field type="pointer" name="Ctype">
            <type type="ident" def="FieldOptions_CType"/>
          </field>
          <field type="pointer" name="Packed">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Lazy">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Weak">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumOptions">
          <field type="pointer" name="AllowAlias">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="EnumValueOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="ServiceOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MethodOptions">
          <field type="pointer" name="Deprecated">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="UninterpretedOption">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </elmtype>
          </field>
          <field type="map" name="XXX_extensions">
            <keytype type="ident" def="int32"/>
            <valtype type="selector">
              <prefix value="proto"/>
              <item value="Extension"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption">
          <field type="slice" name="Name">
            <elmtype type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </elmtype>
          </field>
          <field type="pointer" name="IdentifierValue">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="PositiveIntValue">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="NegativeIntValue">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="DoubleValue">
            <type type="ident" def="float64"/>
          </field>
          <field type="slice" name="StringValue">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="pointer" name="AggregateValue">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="UninterpretedOption_NamePart">
          <field type="pointer" name="NamePart">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="IsExtension">
            <type type="ident" def="bool"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo">
          <field type="slice" name="Location">
            <elmtype type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="SourceCodeInfo_Location">
          <field type="slice" name="Path">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="Span">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="pointer" name="LeadingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="pointer" name="TrailingComments">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Type"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto_Label"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions_OptimizeMode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Enum">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="FieldOptions_CType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions_CType"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FileDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetPublicDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetWeakDependency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetService">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ServiceDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSourceCodeInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSyntax">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetField">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="FieldDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetNestedType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetEnumType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetExtensionRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="DescriptorProto_ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOneofDecl">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="OneofDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetStart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetEnd">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DescriptorProto_ExtensionRange"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetLabel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Label"/>
          </resultsList>
        </function>
        <function name="GetType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldDescriptorProto_Type"/>
          </resultsList>
        </function>
        <function name="GetTypeName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetExtendee">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetDefaultValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOneofIndex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="OneofDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="EnumValueDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetNumber">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetMethod">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="MethodDescriptorProto"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetInputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOutputType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOptions">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </resultsList>
        </function>
        <function name="GetClientStreaming">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetServerStreaming">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodDescriptorProto"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetJavaPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaOuterClassname">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetJavaMultipleFiles">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenerateEqualsAndHash">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaStringCheckUtf8">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOptimizeFor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FileOptions_OptimizeMode"/>
          </resultsList>
        </function>
        <function name="GetGoPackage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetCcGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetJavaGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetPyGenericServices">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetCcEnableArenas">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FileOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetMessageSetWireFormat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetNoStandardDescriptorAccessor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetMapEntry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetCtype">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FieldOptions_CType"/>
          </resultsList>
        </function>
        <function name="GetPacked">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetLazy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetWeak">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="FieldOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetAllowAlias">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="EnumValueOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ServiceOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ExtensionRangeArray">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="proto"/>
                <item value="ExtensionRange"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="ExtensionMap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="selector">
                <prefix value="proto"/>
                <item value="Extension"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetDeprecated">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetUninterpretedOption">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MethodOptions"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="UninterpretedOption_NamePart"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetIdentifierValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetPositiveIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetNegativeIntValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetDoubleValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetStringValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="GetAggregateValue">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNamePart">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetIsExtension">
          <recvList>
            <type type="pointer">
              <type type="ident" def="UninterpretedOption_NamePart"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetLocation">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="SourceCodeInfo_Location"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSpan">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetLeadingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetTrailingComments">
          <recvList>
            <type type="pointer">
              <type type="ident" def="SourceCodeInfo_Location"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="FieldDescriptorProto_TYPE_DOUBLE"/>
        <name value="FieldDescriptorProto_TYPE_FLOAT"/>
        <name value="FieldDescriptorProto_TYPE_INT64"/>
        <name value="FieldDescriptorProto_TYPE_UINT64"/>
        <name value="FieldDescriptorProto_TYPE_INT32"/>
        <name value="FieldDescriptorProto_TYPE_FIXED64"/>
        <name value="FieldDescriptorProto_TYPE_FIXED32"/>
        <name value="FieldDescriptorProto_TYPE_BOOL"/>
        <name value="FieldDescriptorProto_TYPE_STRING"/>
        <name value="FieldDescriptorProto_TYPE_GROUP"/>
        <name value="FieldDescriptorProto_TYPE_MESSAGE"/>
        <name value="FieldDescriptorProto_TYPE_BYTES"/>
        <name value="FieldDescriptorProto_TYPE_UINT32"/>
        <name value="FieldDescriptorProto_TYPE_ENUM"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED32"/>
        <name value="FieldDescriptorProto_TYPE_SFIXED64"/>
        <name value="FieldDescriptorProto_TYPE_SINT32"/>
        <name value="FieldDescriptorProto_TYPE_SINT64"/>
        <name value="FieldDescriptorProto_Type_name"/>
        <name value="FieldDescriptorProto_Type_value"/>
        <name value="FieldDescriptorProto_LABEL_OPTIONAL"/>
        <name value="FieldDescriptorProto_LABEL_REQUIRED"/>
        <name value="FieldDescriptorProto_LABEL_REPEATED"/>
        <name value="FieldDescriptorProto_Label_name"/>
        <name value="FieldDescriptorProto_Label_value"/>
        <name value="FileOptions_SPEED"/>
        <name value="FileOptions_CODE_SIZE"/>
        <name value="FileOptions_LITE_RUNTIME"/>
        <name value="FileOptions_OptimizeMode_name"/>
        <name value="FileOptions_OptimizeMode_value"/>
        <name value="FieldOptions_STRING"/>
        <name value="FieldOptions_CORD"/>
        <name value="FieldOptions_STRING_PIECE"/>
        <name value="FieldOptions_CType_name"/>
        <name value="FieldOptions_CType_value"/>
        <name value="Default_MethodDescriptorProto_ClientStreaming"/>
        <name value="Default_MethodDescriptorProto_ServerStreaming"/>
        <name value="Default_FileOptions_JavaMultipleFiles"/>
        <name value="Default_FileOptions_JavaGenerateEqualsAndHash"/>
        <name value="Default_FileOptions_JavaStringCheckUtf8"/>
        <name value="Default_FileOptions_OptimizeFor"/>
        <name value="Default_FileOptions_CcGenericServices"/>
        <name value="Default_FileOptions_JavaGenericServices"/>
        <name value="Default_FileOptions_PyGenericServices"/>
        <name value="Default_FileOptions_Deprecated"/>
        <name value="Default_FileOptions_CcEnableArenas"/>
        <name value="Default_MessageOptions_MessageSetWireFormat"/>
        <name value="Default_MessageOptions_NoStandardDescriptorAccessor"/>
        <name value="Default_MessageOptions_Deprecated"/>
        <name value="Default_FieldOptions_Ctype"/>
        <name value="Default_FieldOptions_Lazy"/>
        <name value="Default_FieldOptions_Deprecated"/>
        <name value="Default_FieldOptions_Weak"/>
        <name value="Default_EnumOptions_Deprecated"/>
        <name value="Default_EnumValueOptions_Deprecated"/>
        <name value="Default_ServiceOptions_Deprecated"/>
        <name value="Default_MethodOptions_Deprecated"/>
      </names>
    </package>
    <package importpath="code.google.com/p/goprotobuf/jsonpb/jsonpb_test_proto">
      <types>
        <type name="Widget_Color" type="ident">
          <type type="ident" def="int32"/>
        </type>
        <type type="struct" name="Simple">
          <field type="pointer" name="OBool">
            <type type="ident" def="bool"/>
          </field>
          <field type="pointer" name="OInt32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OInt64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="OUint32">
            <type type="ident" def="uint32"/>
          </field>
          <field type="pointer" name="OUint64">
            <type type="ident" def="uint64"/>
          </field>
          <field type="pointer" name="OSint32">
            <type type="ident" def="int32"/>
          </field>
          <field type="pointer" name="OSint64">
            <type type="ident" def="int64"/>
          </field>
          <field type="pointer" name="OFloat">
            <type type="ident" def="float32"/>
          </field>
          <field type="pointer" name="ODouble">
            <type type="ident" def="float64"/>
          </field>
          <field type="pointer" name="OString">
            <type type="ident" def="string"/>
          </field>
          <field type="slice" name="OBytes">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Repeats">
          <field type="slice" name="RBool">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="RInt32">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="RInt64">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="RUint32">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="RUint64">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="RSint32">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="RSint64">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="RFloat">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="RDouble">
            <elmtype type="ident" def="float64"/>
          </field>
          <field type="slice" name="RString">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="RBytes">
            <elmtype type="slice">
              <elmtype type="ident" def="byte"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Widget">
          <field type="pointer" name="Color">
            <type type="ident" def="Widget_Color"/>
          </field>
          <field type="slice" name="RColor">
            <elmtype type="ident" def="Widget_Color"/>
          </field>
          <field type="pointer" name="Simple">
            <type type="ident" def="Simple"/>
          </field>
          <field type="slice" name="RSimple">
            <elmtype type="pointer">
              <type type="ident" def="Simple"/>
            </elmtype>
          </field>
          <field type="pointer" name="Repeats">
            <type type="ident" def="Repeats"/>
          </field>
          <field type="slice" name="RRepeats">
            <elmtype type="pointer">
              <type type="ident" def="Repeats"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Maps">
          <field type="map" name="MInt64Str">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="MBoolSimple">
            <keytype type="ident" def="bool"/>
            <valtype type="pointer">
              <type type="ident" def="Simple"/>
            </valtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Simple3">
          <field type="ident" def="float64" name="Dub"/>
        </type>
        <type type="struct" name="Mappy">
          <field type="map" name="Nummy">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="int32"/>
          </field>
          <field type="map" name="Strry">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Objjy">
            <keytype type="ident" def="int32"/>
            <valtype type="pointer">
              <type type="ident" def="Simple3"/>
            </valtype>
          </field>
          <field type="map" name="Buggy">
            <keytype type="ident" def="int64"/>
            <valtype type="ident" def="string"/>
          </field>
          <field type="map" name="Booly">
            <keytype type="ident" def="bool"/>
            <valtype type="ident" def="bool"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Enum">
          <recvList>
            <type type="ident" def="Widget_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Widget_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Widget_Color"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSON">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget_Color"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetOBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="GetOInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetOUint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="GetOUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="GetOSint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int32"/>
          </resultsList>
        </function>
        <function name="GetOSint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="GetOFloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float32"/>
          </resultsList>
        </function>
        <function name="GetODouble">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="GetOString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="GetOBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetRBool">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRInt32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRInt64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRUint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRUint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSint32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSint64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRFloat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRDouble">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="slice">
                <elmtype type="ident" def="byte"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Widget_Color"/>
          </resultsList>
        </function>
        <function name="GetRColor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Widget_Color"/>
            </type>
          </resultsList>
        </function>
        <function name="GetSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Simple"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Simple"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="GetRepeats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Repeats"/>
            </type>
          </resultsList>
        </function>
        <function name="GetRRepeats">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Widget"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Repeats"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetMInt64Str">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetMBoolSimple">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Maps"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="pointer">
                <type type="ident" def="Simple"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Simple3"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="GetNummy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="GetStrry">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetObjjy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="pointer">
                <type type="ident" def="Simple3"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="GetBuggy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int64"/>
              <valtype type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="GetBooly">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Mappy"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="bool"/>
              <valtype type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Widget_RED"/>
        <name value="Widget_GREEN"/>
        <name value="Widget_BLUE"/>
        <name value="Widget_Color_name"/>
        <name value="Widget_Color_value"/>
      </names>
    </package>
    <package importpath="github.com/golang/protobuf/proto">
      <types>
        <type type="struct" name="ParseError">
          <field type="ident" def="string" name="Message"/>
          <field type="ident" def="int" name="Line"/>
          <field type="ident" def="int" name="Offset"/>
        </type>
        <type type="struct" name="StructProperties">
          <field type="slice" name="Prop">
            <elmtype type="pointer">
              <type type="ident" def="Properties"/>
            </elmtype>
          </field>
          <field type="ident" def="int" name="reqCount"/>
          <field type="ident" def="tagMap" name="decoderTags"/>
          <field type="map" name="decoderOrigNames">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="int"/>
          </field>
          <field type="slice" name="order">
            <elmtype type="ident" def="int"/>
          </field>
          <field type="ident" def="field" name="unrecField"/>
          <field type="ident" def="bool" name="extendable"/>
        </type>
        <type type="struct" name="Properties">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="OrigName"/>
          <field type="ident" def="string" name="Wire"/>
          <field type="ident" def="int" name="WireType"/>
          <field type="ident" def="int" name="Tag"/>
          <field type="ident" def="bool" name="Required"/>
          <field type="ident" def="bool" name="Optional"/>
          <field type="ident" def="bool" name="Repeated"/>
          <field type="ident" def="bool" name="Packed"/>
          <field type="ident" def="string" name="Enum"/>
          <field type="ident" def="bool" name="proto3"/>
          <field type="ident" def="string" name="Default"/>
          <field type="ident" def="bool" name="HasDefault"/>
          <field type="ident" def="uint64" name="def_uint64"/>
          <field type="ident" def="encoder" name="enc"/>
          <field type="ident" def="valueEncoder" name="valEnc"/>
          <field type="ident" def="field" name="field"/>
          <field type="slice" name="tagcode">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="array" name="tagbuf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="selector" name="stype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="pointer" name="sprop">
            <type type="ident" def="StructProperties"/>
          </field>
          <field type="ident" def="bool" name="isMarshaler"/>
          <field type="ident" def="bool" name="isUnmarshaler"/>
          <field type="selector" name="mtype">
            <prefix value="reflect"/>
            <item value="Type"/>
          </field>
          <field type="pointer" name="mkeyprop">
            <type type="ident" def="Properties"/>
          </field>
          <field type="pointer" name="mvalprop">
            <type type="ident" def="Properties"/>
          </field>
          <field type="ident" def="sizer" name="size"/>
          <field type="ident" def="valueSizer" name="valSize"/>
          <field type="ident" def="decoder" name="dec"/>
          <field type="ident" def="valueDecoder" name="valDec"/>
          <field type="ident" def="decoder" name="packedDec"/>
        </type>
        <type type="struct" name="MessageSet">
          <field type="slice" name="Item">
            <elmtype type="pointer">
              <type type="ident" def="_MessageSet_Item"/>
            </elmtype>
          </field>
          <field type="slice" name="XXX_unrecognized">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Message" type="interface">
          <method name="Reset">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="String">
            <paramsList/>
            <resultsList>
              <type type="ident" def="string"/>
            </resultsList>
          </method>
          <method name="ProtoMessage">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
        <type type="struct" name="Stats">
          <field type="ident" def="uint64" name="Emalloc"/>
          <field type="ident" def="uint64" name="Dmalloc"/>
          <field type="ident" def="uint64" name="Encode"/>
          <field type="ident" def="uint64" name="Decode"/>
          <field type="ident" def="uint64" name="Chit"/>
          <field type="ident" def="uint64" name="Cmiss"/>
          <field type="ident" def="uint64" name="Size"/>
        </type>
        <type type="struct" name="Buffer">
          <field type="slice" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int" name="index"/>
          <field type="slice" name="bools">
            <elmtype type="ident" def="bool"/>
          </field>
          <field type="slice" name="uint32s">
            <elmtype type="ident" def="uint32"/>
          </field>
          <field type="slice" name="uint64s">
            <elmtype type="ident" def="uint64"/>
          </field>
          <field type="slice" name="int32s">
            <elmtype type="ident" def="int32"/>
          </field>
          <field type="slice" name="int64s">
            <elmtype type="ident" def="int64"/>
          </field>
          <field type="slice" name="float32s">
            <elmtype type="ident" def="float32"/>
          </field>
          <field type="slice" name="float64s">
            <elmtype type="ident" def="float64"/>
          </field>
        </type>
        <type type="struct" name="ExtensionRange">
          <field type="ident" def="int32" name="Start"/>
          <field type="ident" def="int32" name="End"/>
        </type>
        <type type="struct" name="ExtensionDesc">
          <field type="ident" def="Message" name="ExtendedType"/>
          <field type="interface" name="ExtensionType"/>
          <field type="ident" def="int32" name="Field"/>
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Tag"/>
        </type>
        <type type="struct" name="Extension">
          <field type="pointer" name="desc">
            <type type="ident" def="ExtensionDesc"/>
          </field>
          <field type="interface" name="value"/>
          <field type="slice" name="enc">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="RequiredNotSetError">
          <field type="ident" def="string" name="field"/>
        </type>
        <type name="Marshaler" type="interface">
          <method name="Marshal">
            <paramsList/>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="Unmarshaler" type="interface">
          <method name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParseError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="token"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalText">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteByte">
          <recvList>
            <type type="pointer">
              <type type="ident" def="textWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="byte"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="int32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="MarshalText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="CompactText">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="CompactTextString">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Init">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Properties"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="reflect"/>
                <item value="StructField"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetProperties">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="reflect"/>
              <item value="Type"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="StructProperties"/>
            </type>
          </resultsList>
        </function>
        <function name="RegisterEnum">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="structPointerSlice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word32Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="pointer">
              <type type="ident" def="word64Slice"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="IsValid">
          <recvList>
            <type type="ident" def="field"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="structPointer"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="structPointerSlice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="structPointer"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word32Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint32"/>
          </resultsList>
        </function>
        <function name="Append">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Index">
          <recvList>
            <type type="ident" def="word64Slice"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
          </resultsList>
        </function>
        <function name="Has">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MessageSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ProtoMessage">
          <recvList/>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="MarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSet">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMessageSetJSON">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="Extension"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterMessageSetType">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="int32"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetStats">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Stats"/>
          </resultsList>
        </function>
        <function name="NewBuffer">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </resultsList>
        </function>
        <function name="Reset">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetBuf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Bytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Bool">
          <recvList/>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="bool"/>
            </type>
          </resultsList>
        </function>
        <function name="Int32">
          <recvList/>
          <paramsList>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int32"/>
            </type>
          </resultsList>
        </function>
        <function name="Int64">
          <recvList/>
          <paramsList>
            <type type="ident" def="int64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="int64"/>
            </type>
          </resultsList>
        </function>
        <function name="Float32">
          <recvList/>
          <paramsList>
            <type type="ident" def="float32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float32"/>
            </type>
          </resultsList>
        </function>
        <function name="Float64">
          <recvList/>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="float64"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint32">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint32"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint32"/>
            </type>
          </resultsList>
        </function>
        <function name="Uint64">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="uint64"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="string"/>
            </type>
          </resultsList>
        </function>
        <function name="EnumName">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="ident" def="string"/>
            </type>
            <type type="ident" def="int32"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnmarshalJSONEnum">
          <recvList/>
          <paramsList>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="ident" def="int32"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int32"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DebugPrint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetDefaults">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="mapKeys"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SetRawExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="ident" def="int32"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HasExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ClearExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="GetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="interface"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GetExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </elmtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="interface"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetExtension">
          <recvList/>
          <paramsList>
            <type type="ident" def="extendableProto"/>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RegisterExtension">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ExtensionDesc"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RegisteredExtensions">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="map">
              <keytype type="ident" def="int32"/>
              <valtype type="pointer">
                <type type="ident" def="ExtensionDesc"/>
              </valtype>
            </type>
          </resultsList>
        </function>
        <function name="Equal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RequiredNotSetError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList/>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="EncodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="EncodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="DecodeVarint">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeFixed32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag64">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeZigzag32">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeRawBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeStringBytes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalMerge">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unmarshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Buffer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Clone">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Message"/>
          </resultsList>
        </function>
        <function name="Merge">
          <recvList/>
          <paramsList>
            <type type="ident" def="Message"/>
            <type type="ident" def="Message"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="WireVarint"/>
        <name value="WireFixed64"/>
        <name value="WireBytes"/>
        <name value="WireStartGroup"/>
        <name value="WireEndGroup"/>
        <name value="WireFixed32"/>
        <name value="ErrNoMessageTypeId"/>
        <name value="ErrMissingExtension"/>
        <name value="ErrNil"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="io/ioutil"/>
    <import path="os"/>
    <import path="github.com/golang/protobuf/proto"/>
    <import path="github.com/golang/protobuf/protoc-gen-go/generator"/>
    <import path="github.com/golang/protobuf/protoc-gen-go/internal/grpc"/>
    <import path="math"/>
    <import path="github.com/golang/protobuf/protoc-gen-go/descriptor"/>
    <import path="fmt"/>
    <import path="path"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="bytes"/>
    <import path="go/parser"/>
    <import path="go/printer"/>
    <import path="go/token"/>
    <import path="log"/>
    <import path="unicode"/>
    <import path="unicode/utf8"/>
    <import path="github.com/golang/protobuf/protoc-gen-go/plugin"/>
    <import path="encoding"/>
    <import path="errors"/>
    <import path="reflect"/>
    <import path="bufio"/>
    <import path="io"/>
    <import path="sort"/>
    <import path="sync"/>
    <import path="unsafe"/>
    <import path="encoding/json"/>
    <import path="github.com/golang/protobuf/proto/testdata"/>
    <import path="code.google.com/p/goprotobuf/proto"/>
    <import path="code.google.com/p/goprotobuf/protoc-gen-go/generator"/>
    <import path="code.google.com/p/goprotobuf/protoc-gen-go/internal/grpc"/>
    <import path="code.google.com/p/goprotobuf/protoc-gen-go/descriptor"/>
    <import path="code.google.com/p/goprotobuf/protoc-gen-go/plugin"/>
    <import path="code.google.com/p/goprotobuf/proto/testdata"/>
  </imports>
</project>
