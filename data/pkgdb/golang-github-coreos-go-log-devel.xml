<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-coreos-go-log-0-0.9.git840af6b.fc24">
  <packages>
    <package importpath="github.com/coreos/go-log/log">
      <types>
        <type name="Sink" type="interface">
          <method name="Log">
            <paramsList>
              <type type="ident" def="Fields"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Priority" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Logger">
          <field type="slice" name="sinks">
            <elmtype type="ident" def="Sink"/>
          </field>
          <field type="ident" def="bool" name="verbose"/>
          <field type="ident" def="string" name="prefix"/>
          <field type="selector" name="created">
            <prefix value="time"/>
            <item value="Time"/>
          </field>
          <field type="ident" def="uint64" name="seq"/>
          <field type="ident" def="string" name="executable"/>
        </type>
        <type name="Fields" type="map">
          <keytype type="ident" def="string"/>
          <valtype type="interface"/>
        </type>
      </types>
      <functions>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="nullSink"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NullSink">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Sink"/>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="writerSink"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriterSink">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Sink"/>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="journalSink"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="JournalSink">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Sink"/>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="combinedSink"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="CombinedSink">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="ident" def="string"/>
            <type type="slice">
              <elmtype type="ident" def="string"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Sink"/>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="priorityFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Fields"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PriorityFilter">
          <recvList/>
          <paramsList>
            <type type="ident" def="Priority"/>
            <type type="ident" def="Sink"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Sink"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Priority"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
            <type type="ellipsis">
              <type type="ident" def="Sink"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </resultsList>
        </function>
        <function name="NewSimple">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="Sink"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </resultsList>
        </function>
        <function name="Log">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Priority"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Logf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Priority"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Emergency">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Emergencyf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Alert">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Alertf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Critical">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Criticalf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Notice">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Noticef">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debug">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Emergency">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Emergencyf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Alert">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Alertf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Critical">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Criticalf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Errorf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warning">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Warningf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Notice">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Noticef">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Info">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Infof">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debug">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Debugf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicln">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Println">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Printf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Logger"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Fatalf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicln">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Panicf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Println">
          <recvList/>
          <paramsList>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Printf">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="AsyncBuffer"/>
        <name value="PriEmerg"/>
        <name value="PriAlert"/>
        <name value="PriCrit"/>
        <name value="PriErr"/>
        <name value="PriWarning"/>
        <name value="PriNotice"/>
        <name value="PriInfo"/>
        <name value="PriDebug"/>
        <name value="BasicFormat"/>
        <name value="BasicFields"/>
        <name value="RichFormat"/>
        <name value="RichFields"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="github.com/coreos/go-systemd/journal"/>
    <import path="io"/>
    <import path="strings"/>
    <import path="sync"/>
    <import path="bitbucket.org/kardianos/osext"/>
    <import path="os"/>
    <import path="path"/>
    <import path="time"/>
    <import path="runtime"/>
    <import path="sync/atomic"/>
  </imports>
</project>
