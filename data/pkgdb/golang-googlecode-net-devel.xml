<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-googlecode-net-0-0.25.git446d52d.fc24">
  <packages>
    <package importpath="code.google.com/p/go.net/icmp">
      <types>
        <type type="struct" name="TimeExceeded">
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="Extension"/>
          </field>
        </type>
        <type type="struct" name="ParamProb">
          <field type="ident" def="uintptr" name="Pointer"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="Extension"/>
          </field>
        </type>
        <type type="struct" name="PacketTooBig">
          <field type="ident" def="int" name="MTU"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="MPLSLabel">
          <field type="ident" def="int" name="Label"/>
          <field type="ident" def="int" name="TC"/>
          <field type="ident" def="bool" name="S"/>
          <field type="ident" def="int" name="TTL"/>
        </type>
        <type type="struct" name="MPLSLabelStack">
          <field type="ident" def="int" name="Class"/>
          <field type="ident" def="int" name="Type"/>
          <field type="slice" name="Labels">
            <elmtype type="ident" def="MPLSLabel"/>
          </field>
        </type>
        <type name="MessageBody" type="interface">
          <method name="Len">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Marshal">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="DefaultMessageBody">
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type name="Type" type="interface">
          <method name="Protocol">
            <paramsList/>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Message">
          <field type="ident" def="Type" name="Type"/>
          <field type="ident" def="int" name="Code"/>
          <field type="ident" def="int" name="Checksum"/>
          <field type="ident" def="MessageBody" name="Body"/>
        </type>
        <type type="struct" name="InterfaceInfo">
          <field type="ident" def="int" name="Class"/>
          <field type="ident" def="int" name="Type"/>
          <field type="pointer" name="Interface">
            <type type="selector">
              <prefix value="net"/>
              <item value="Interface"/>
            </type>
          </field>
          <field type="pointer" name="Addr">
            <type type="selector">
              <prefix value="net"/>
              <item value="IPAddr"/>
            </type>
          </field>
        </type>
        <type name="Extension" type="interface">
          <method name="Len">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="int"/>
            </resultsList>
          </method>
          <method name="Marshal">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="PacketConn">
          <field type="selector" name="c">
            <prefix value="net"/>
            <item value="PacketConn"/>
          </field>
          <field type="ident" def="ipc" name=""/>
        </type>
        <type type="struct" name="Echo">
          <field type="ident" def="int" name="ID"/>
          <field type="ident" def="int" name="Seq"/>
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="DstUnreach">
          <field type="slice" name="Data">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="slice" name="Extensions">
            <elmtype type="ident" def="Extension"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TimeExceeded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="TimeExceeded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParamProb"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ParamProb"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketTooBig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketTooBig"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MPLSLabelStack"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MPLSLabelStack"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultMessageBody"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DefaultMessageBody"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseMessage">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Message"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListenPacket">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ListenPacket">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IPv6PseudoHeader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="ParseIPv4Header">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ipv4"/>
                <item value="Header"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InterfaceInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="InterfaceInfo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IPv4PacketConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ipv4"/>
                <item value="PacketConn"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="IPv6PacketConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="ipv6"/>
                <item value="PacketConn"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LocalAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Echo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Echo"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DstUnreach"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DstUnreach"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/trace">
      <types>
        <type name="Trace" type="interface">
          <method name="LazyLog">
            <paramsList>
              <type type="selector">
                <prefix value="fmt"/>
                <item value="Stringer"/>
              </type>
              <type type="ident" def="bool"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="LazyPrintf">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="interface"/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="SetError">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="SetRecycler">
            <paramsList>
              <type type="func">
                <paramsList>
                  <type type="interface"/>
                </paramsList>
                <resultsList/>
              </type>
            </paramsList>
            <resultsList/>
          </method>
          <method name="SetTraceInfo">
            <paramsList>
              <type type="ident" def="uint64"/>
              <type type="ident" def="uint64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="SetMaxEvents">
            <paramsList>
              <type type="ident" def="int"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Finish">
            <paramsList/>
            <resultsList/>
          </method>
        </type>
      </types>
      <functions>
        <function name="NewContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
            <type type="ident" def="Trace"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </resultsList>
        </function>
        <function name="FromContext">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="context"/>
              <item value="Context"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Trace"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="lazySprintf"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="New">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Trace"/>
          </resultsList>
        </function>
        <function name="Finish">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceSet"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Remove">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="FirstN">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceSet"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="traceList"/>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceBucket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Copy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceBucket"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="traceList"/>
          </resultsList>
        </function>
        <function name="Empty">
          <recvList>
            <type type="pointer">
              <type type="ident" def="traceBucket"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="minCond"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="errorCond"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Free">
          <recvList>
            <type type="ident" def="traceList"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Len">
          <recvList>
            <type type="ident" def="traceList"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="ident" def="traceList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="ident" def="traceList"/>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WhenString">
          <recvList>
            <type type="ident" def="event"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="discarded"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="LazyLog">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="fmt"/>
              <item value="Stringer"/>
            </type>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="LazyPrintf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="interface"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetError">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="SetRecycler">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="func">
              <paramsList>
                <type type="interface"/>
              </paramsList>
              <resultsList/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetTraceInfo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="uint64"/>
            <type type="ident" def="uint64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetMaxEvents">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="When">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ElapsedTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Events">
          <recvList>
            <type type="pointer">
              <type type="ident" def="trace"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="event"/>
            </type>
          </resultsList>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="timeseries"/>
              <item value="Observable"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CopyFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="timeseries"/>
              <item value="Observable"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Multiply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="New">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="timeseries"/>
              <item value="Observable"/>
            </type>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="histogram"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="DebugUseAfterFinish"/>
        <name value="AuthRequest"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/dict">
      <types>
        <type type="struct" name="Client">
          <field type="pointer" name="text">
            <type type="selector">
              <prefix value="textproto"/>
              <item value="Conn"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Dict">
          <field type="ident" def="string" name="Name"/>
          <field type="ident" def="string" name="Desc"/>
        </type>
        <type type="struct" name="Defn">
          <field type="ident" def="Dict" name="Dict"/>
          <field type="ident" def="string" name="Word"/>
          <field type="slice" name="Text">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="Dial">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dicts">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Dict"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Define">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Client"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Defn"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/internal/nettest">
      <types/>
      <functions>
        <function name="SupportsRawIPSocket">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SupportsRawIPSocket">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SupportsRawIPSocket">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SupportsIPv4">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="SupportsIPv6">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="ProtocolNotSupported">
          <recvList/>
          <paramsList>
            <type type="ident" def="error"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="MaxOpenFiles">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="IsMulticastCapable">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="RoutedInterface">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="net"/>
              <item value="Flags"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/idna">
      <types/>
      <functions>
        <function name="ToASCII">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ToUnicode">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/netutil">
      <types/>
      <functions>
        <function name="LimitListener">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Listener"/>
            </type>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitListener"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="limitListenerConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/publicsuffix">
      <types/>
      <functions>
        <function name="PublicSuffix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="PublicSuffix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="EffectiveTLDPlusOne">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="List"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/internal/iana">
      <types/>
      <functions/>
      <names>
        <name value="DiffServCS0"/>
        <name value="DiffServCS1"/>
        <name value="DiffServCS2"/>
        <name value="DiffServCS3"/>
        <name value="DiffServCS4"/>
        <name value="DiffServCS5"/>
        <name value="DiffServCS6"/>
        <name value="DiffServCS7"/>
        <name value="DiffServAF11"/>
        <name value="DiffServAF12"/>
        <name value="DiffServAF13"/>
        <name value="DiffServAF21"/>
        <name value="DiffServAF22"/>
        <name value="DiffServAF23"/>
        <name value="DiffServAF31"/>
        <name value="DiffServAF32"/>
        <name value="DiffServAF33"/>
        <name value="DiffServAF41"/>
        <name value="DiffServAF42"/>
        <name value="DiffServAF43"/>
        <name value="DiffServEFPHB"/>
        <name value="DiffServVOICEADMIT"/>
        <name value="NotECNTransport"/>
        <name value="ECNTransport1"/>
        <name value="ECNTransport0"/>
        <name value="CongestionExperienced"/>
        <name value="ProtocolIP"/>
        <name value="ProtocolHOPOPT"/>
        <name value="ProtocolICMP"/>
        <name value="ProtocolIGMP"/>
        <name value="ProtocolGGP"/>
        <name value="ProtocolIPv4"/>
        <name value="ProtocolST"/>
        <name value="ProtocolTCP"/>
        <name value="ProtocolCBT"/>
        <name value="ProtocolEGP"/>
        <name value="ProtocolIGP"/>
        <name value="ProtocolBBNRCCMON"/>
        <name value="ProtocolNVPII"/>
        <name value="ProtocolPUP"/>
        <name value="ProtocolARGUS"/>
        <name value="ProtocolEMCON"/>
        <name value="ProtocolXNET"/>
        <name value="ProtocolCHAOS"/>
        <name value="ProtocolUDP"/>
        <name value="ProtocolMUX"/>
        <name value="ProtocolDCNMEAS"/>
        <name value="ProtocolHMP"/>
        <name value="ProtocolPRM"/>
        <name value="ProtocolXNSIDP"/>
        <name value="ProtocolTRUNK1"/>
        <name value="ProtocolTRUNK2"/>
        <name value="ProtocolLEAF1"/>
        <name value="ProtocolLEAF2"/>
        <name value="ProtocolRDP"/>
        <name value="ProtocolIRTP"/>
        <name value="ProtocolISOTP4"/>
        <name value="ProtocolNETBLT"/>
        <name value="ProtocolMFENSP"/>
        <name value="ProtocolMERITINP"/>
        <name value="ProtocolDCCP"/>
        <name value="Protocol3PC"/>
        <name value="ProtocolIDPR"/>
        <name value="ProtocolXTP"/>
        <name value="ProtocolDDP"/>
        <name value="ProtocolIDPRCMTP"/>
        <name value="ProtocolTPPP"/>
        <name value="ProtocolIL"/>
        <name value="ProtocolIPv6"/>
        <name value="ProtocolSDRP"/>
        <name value="ProtocolIPv6Route"/>
        <name value="ProtocolIPv6Frag"/>
        <name value="ProtocolIDRP"/>
        <name value="ProtocolRSVP"/>
        <name value="ProtocolGRE"/>
        <name value="ProtocolDSR"/>
        <name value="ProtocolBNA"/>
        <name value="ProtocolESP"/>
        <name value="ProtocolAH"/>
        <name value="ProtocolINLSP"/>
        <name value="ProtocolNARP"/>
        <name value="ProtocolMOBILE"/>
        <name value="ProtocolTLSP"/>
        <name value="ProtocolSKIP"/>
        <name value="ProtocolIPv6ICMP"/>
        <name value="ProtocolIPv6NoNxt"/>
        <name value="ProtocolIPv6Opts"/>
        <name value="ProtocolCFTP"/>
        <name value="ProtocolSATEXPAK"/>
        <name value="ProtocolKRYPTOLAN"/>
        <name value="ProtocolRVD"/>
        <name value="ProtocolIPPC"/>
        <name value="ProtocolSATMON"/>
        <name value="ProtocolVISA"/>
        <name value="ProtocolIPCV"/>
        <name value="ProtocolCPNX"/>
        <name value="ProtocolCPHB"/>
        <name value="ProtocolWSN"/>
        <name value="ProtocolPVP"/>
        <name value="ProtocolBRSATMON"/>
        <name value="ProtocolSUNND"/>
        <name value="ProtocolWBMON"/>
        <name value="ProtocolWBEXPAK"/>
        <name value="ProtocolISOIP"/>
        <name value="ProtocolVMTP"/>
        <name value="ProtocolSECUREVMTP"/>
        <name value="ProtocolVINES"/>
        <name value="ProtocolTTP"/>
        <name value="ProtocolIPTM"/>
        <name value="ProtocolNSFNETIGP"/>
        <name value="ProtocolDGP"/>
        <name value="ProtocolTCF"/>
        <name value="ProtocolEIGRP"/>
        <name value="ProtocolOSPFIGP"/>
        <name value="ProtocolSpriteRPC"/>
        <name value="ProtocolLARP"/>
        <name value="ProtocolMTP"/>
        <name value="ProtocolAX25"/>
        <name value="ProtocolIPIP"/>
        <name value="ProtocolSCCSP"/>
        <name value="ProtocolETHERIP"/>
        <name value="ProtocolENCAP"/>
        <name value="ProtocolGMTP"/>
        <name value="ProtocolIFMP"/>
        <name value="ProtocolPNNI"/>
        <name value="ProtocolPIM"/>
        <name value="ProtocolARIS"/>
        <name value="ProtocolSCPS"/>
        <name value="ProtocolQNX"/>
        <name value="ProtocolAN"/>
        <name value="ProtocolIPComp"/>
        <name value="ProtocolSNP"/>
        <name value="ProtocolCompaqPeer"/>
        <name value="ProtocolIPXinIP"/>
        <name value="ProtocolVRRP"/>
        <name value="ProtocolPGM"/>
        <name value="ProtocolL2TP"/>
        <name value="ProtocolDDX"/>
        <name value="ProtocolIATP"/>
        <name value="ProtocolSTP"/>
        <name value="ProtocolSRP"/>
        <name value="ProtocolUTI"/>
        <name value="ProtocolSMP"/>
        <name value="ProtocolSM"/>
        <name value="ProtocolPTP"/>
        <name value="ProtocolISIS"/>
        <name value="ProtocolFIRE"/>
        <name value="ProtocolCRTP"/>
        <name value="ProtocolCRUDP"/>
        <name value="ProtocolSSCOPMCE"/>
        <name value="ProtocolIPLT"/>
        <name value="ProtocolSPS"/>
        <name value="ProtocolPIPE"/>
        <name value="ProtocolSCTP"/>
        <name value="ProtocolFC"/>
        <name value="ProtocolRSVPE2EIGNORE"/>
        <name value="ProtocolMobilityHeader"/>
        <name value="ProtocolUDPLite"/>
        <name value="ProtocolMPLSinIP"/>
        <name value="ProtocolMANET"/>
        <name value="ProtocolHIP"/>
        <name value="ProtocolShim6"/>
        <name value="ProtocolWESP"/>
        <name value="ProtocolROHC"/>
        <name value="ProtocolReserved"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/ipv6">
      <types>
        <type name="ICMPType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ICMPFilter">
          <field type="ident" def="sysICMPv6Filter" name=""/>
        </type>
        <type type="struct" name="Header">
          <field type="ident" def="int" name="Version"/>
          <field type="ident" def="int" name="TrafficClass"/>
          <field type="ident" def="int" name="FlowLabel"/>
          <field type="ident" def="int" name="PayloadLen"/>
          <field type="ident" def="int" name="NextHeader"/>
          <field type="ident" def="int" name="HopLimit"/>
          <field type="selector" name="Src">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="Dst">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
        </type>
        <type type="struct" name="Conn">
          <field type="ident" def="genericOpt" name=""/>
        </type>
        <type type="struct" name="PacketConn">
          <field type="ident" def="genericOpt" name=""/>
          <field type="ident" def="dgramOpt" name=""/>
          <field type="ident" def="payloadHandler" name=""/>
        </type>
        <type name="ControlFlags" type="ident">
          <type type="ident" def="uint"/>
        </type>
        <type type="struct" name="ControlMessage">
          <field type="ident" def="int" name="TrafficClass"/>
          <field type="ident" def="int" name="HopLimit"/>
          <field type="selector" name="Src">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="Dst">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="IfIndex"/>
          <field type="selector" name="NextHop">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="MTU"/>
        </type>
      </types>
      <functions>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ICMPType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Protocol">
          <recvList>
            <type type="ident" def="ICMPType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Block">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WillBlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="ParseHeader">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TrafficClass">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTrafficClass">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TrafficClass">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTrafficClass">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PathMTU">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </resultsList>
        </function>
        <function name="SetControlMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ControlFlags"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPacketConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="PacketConn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </resultsList>
        </function>
        <function name="MulticastHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExcludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Checksum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetChecksum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastHopLimit">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExcludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Checksum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetChecksum">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ICMPTypeDestinationUnreachable"/>
        <name value="ICMPTypePacketTooBig"/>
        <name value="ICMPTypeTimeExceeded"/>
        <name value="ICMPTypeParameterProblem"/>
        <name value="ICMPTypeEchoRequest"/>
        <name value="ICMPTypeEchoReply"/>
        <name value="ICMPTypeMulticastListenerQuery"/>
        <name value="ICMPTypeMulticastListenerReport"/>
        <name value="ICMPTypeMulticastListenerDone"/>
        <name value="ICMPTypeRouterSolicitation"/>
        <name value="ICMPTypeRouterAdvertisement"/>
        <name value="ICMPTypeNeighborSolicitation"/>
        <name value="ICMPTypeNeighborAdvertisement"/>
        <name value="ICMPTypeRedirect"/>
        <name value="ICMPTypeRouterRenumbering"/>
        <name value="ICMPTypeNodeInformationQuery"/>
        <name value="ICMPTypeNodeInformationResponse"/>
        <name value="ICMPTypeInverseNeighborDiscoverySolicitation"/>
        <name value="ICMPTypeInverseNeighborDiscoveryAdvertisement"/>
        <name value="ICMPTypeVersion2MulticastListenerReport"/>
        <name value="ICMPTypeHomeAgentAddressDiscoveryRequest"/>
        <name value="ICMPTypeHomeAgentAddressDiscoveryReply"/>
        <name value="ICMPTypeMobilePrefixSolicitation"/>
        <name value="ICMPTypeMobilePrefixAdvertisement"/>
        <name value="ICMPTypeCertificationPathSolicitation"/>
        <name value="ICMPTypeCertificationPathAdvertisement"/>
        <name value="ICMPTypeMulticastRouterAdvertisement"/>
        <name value="ICMPTypeMulticastRouterSolicitation"/>
        <name value="ICMPTypeMulticastRouterTermination"/>
        <name value="ICMPTypeFMIPv6"/>
        <name value="ICMPTypeRPLControl"/>
        <name value="ICMPTypeILNPv6LocatorUpdate"/>
        <name value="ICMPTypeDuplicateAddressRequest"/>
        <name value="ICMPTypeDuplicateAddressConfirmation"/>
        <name value="Version"/>
        <name value="HeaderLen"/>
        <name value="FlagTrafficClass"/>
        <name value="FlagHopLimit"/>
        <name value="FlagSrc"/>
        <name value="FlagDst"/>
        <name value="FlagInterface"/>
        <name value="FlagPathMTU"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/internal/timeseries">
      <types>
        <type name="Observable" type="interface">
          <method name="Multiply">
            <paramsList>
              <type type="ident" def="float64"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Add">
            <paramsList>
              <type type="ident" def="Observable"/>
            </paramsList>
            <resultsList/>
          </method>
          <method name="Clear">
            <paramsList/>
            <resultsList/>
          </method>
          <method name="CopyFrom">
            <paramsList>
              <type type="ident" def="Observable"/>
            </paramsList>
            <resultsList/>
          </method>
        </type>
        <type name="Float" type="ident">
          <type type="ident" def="float64"/>
        </type>
        <type name="Clock" type="interface">
          <method name="Time">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="TimeSeries">
          <field type="ident" def="timeSeries" name=""/>
        </type>
        <type type="struct" name="MinuteHourSeries">
          <field type="ident" def="timeSeries" name=""/>
        </type>
      </types>
      <functions>
        <function name="NewFloat">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="float64"/>
          </resultsList>
        </function>
        <function name="Multiply">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Observable"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="CopyFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Float"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Observable"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Time">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsLevel"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="InitLevel">
          <recvList>
            <type type="pointer">
              <type type="ident" def="tsLevel"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="int"/>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="Observable"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Clear">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Add">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Observable"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddWithTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="Observable"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Latest">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="LatestBuckets">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Observable"/>
            </type>
          </resultsList>
        </function>
        <function name="ScaleBy">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="float64"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Range">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="Recent">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="Total">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="ComputeRange">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Observable"/>
            </type>
          </resultsList>
        </function>
        <function name="RecentList">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timeSeries"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Observable"/>
            </type>
          </resultsList>
        </function>
        <function name="NewTimeSeries">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="Observable"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TimeSeries"/>
            </type>
          </resultsList>
        </function>
        <function name="NewTimeSeriesWithClock">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="Observable"/>
              </resultsList>
            </type>
            <type type="ident" def="Clock"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="TimeSeries"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMinuteHourSeries">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="Observable"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MinuteHourSeries"/>
            </type>
          </resultsList>
        </function>
        <function name="NewMinuteHourSeriesWithClock">
          <recvList/>
          <paramsList>
            <type type="func">
              <paramsList/>
              <resultsList>
                <type type="ident" def="Observable"/>
              </resultsList>
            </type>
            <type type="ident" def="Clock"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="MinuteHourSeries"/>
            </type>
          </resultsList>
        </function>
        <function name="Minute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinuteHourSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
        <function name="Hour">
          <recvList>
            <type type="pointer">
              <type type="ident" def="MinuteHourSeries"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Observable"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/html">
      <types>
        <type name="TokenType" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type type="struct" name="Attribute">
          <field type="ident" def="string" name="Namespace"/>
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="string" name="Val"/>
        </type>
        <type type="struct" name="Token">
          <field type="ident" def="TokenType" name="Type"/>
          <field type="selector" name="DataAtom">
            <prefix value="atom"/>
            <item value="Atom"/>
          </field>
          <field type="ident" def="string" name="Data"/>
          <field type="slice" name="Attr">
            <elmtype type="ident" def="Attribute"/>
          </field>
        </type>
        <type type="struct" name="Tokenizer">
          <field type="selector" name="r">
            <prefix value="io"/>
            <item value="Reader"/>
          </field>
          <field type="ident" def="TokenType" name="tt"/>
          <field type="ident" def="error" name="err"/>
          <field type="ident" def="error" name="readErr"/>
          <field type="ident" def="span" name="raw"/>
          <field type="slice" name="buf">
            <elmtype type="ident" def="byte"/>
          </field>
          <field type="ident" def="int" name="maxBuf"/>
          <field type="ident" def="span" name="data"/>
          <field type="array" name="pendingAttr">
            <elmtype type="ident" def="span"/>
          </field>
          <field type="slice" name="attr">
            <elmtype type="array">
              <elmtype type="ident" def="span"/>
            </elmtype>
          </field>
          <field type="ident" def="int" name="nAttrReturned"/>
          <field type="ident" def="string" name="rawTag"/>
          <field type="ident" def="bool" name="textIsRaw"/>
          <field type="ident" def="bool" name="convertNUL"/>
          <field type="ident" def="bool" name="allowCDATA"/>
        </type>
        <type name="NodeType" type="ident">
          <type type="ident" def="uint32"/>
        </type>
        <type type="struct" name="Node">
          <field type="pointer" name="Parent">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="FirstChild">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="LastChild">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="PrevSibling">
            <type type="ident" def="Node"/>
          </field>
          <field type="pointer" name="NextSibling">
            <type type="ident" def="Node"/>
          </field>
          <field type="ident" def="NodeType" name="Type"/>
          <field type="selector" name="DataAtom">
            <prefix value="atom"/>
            <item value="Atom"/>
          </field>
          <field type="ident" def="string" name="Data"/>
          <field type="ident" def="string" name="Namespace"/>
          <field type="slice" name="Attr">
            <elmtype type="ident" def="Attribute"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="TokenType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="Token"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="AllowCDATA">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NextIsNotRawText">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="Err">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Buffered">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Next">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="TokenType"/>
          </resultsList>
        </function>
        <function name="Raw">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="Text">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </resultsList>
        </function>
        <function name="TagName">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="TagAttr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Token">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Token"/>
          </resultsList>
        </function>
        <function name="SetMaxBuf">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NewTokenizer">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </resultsList>
        </function>
        <function name="NewTokenizerFragment">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Tokenizer"/>
            </type>
          </resultsList>
        </function>
        <function name="Render">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Writer"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseFragment">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Node"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="InsertBefore">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AppendChild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="RemoveChild">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Node"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="EscapeString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="UnescapeString">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ErrorToken"/>
        <name value="TextToken"/>
        <name value="StartTagToken"/>
        <name value="EndTagToken"/>
        <name value="SelfClosingTagToken"/>
        <name value="CommentToken"/>
        <name value="DoctypeToken"/>
        <name value="ErrBufferExceeded"/>
        <name value="ErrorNode"/>
        <name value="TextNode"/>
        <name value="DocumentNode"/>
        <name value="ElementNode"/>
        <name value="CommentNode"/>
        <name value="DoctypeNode"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/webdav">
      <types>
        <type type="struct" name="Property">
          <field type="selector" name="XMLName">
            <prefix value="xml"/>
            <item value="Name"/>
          </field>
          <field type="ident" def="string" name="Lang"/>
          <field type="slice" name="InnerXML">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Handler">
          <field type="ident" def="FileSystem" name="FileSystem"/>
          <field type="ident" def="LockSystem" name="LockSystem"/>
          <field type="func" name="Logger">
            <paramsList>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
              <type type="ident" def="error"/>
            </paramsList>
            <resultsList/>
          </field>
        </type>
        <type type="struct" name="Proppatch">
          <field type="ident" def="bool" name="Remove"/>
          <field type="slice" name="Props">
            <elmtype type="ident" def="Property"/>
          </field>
        </type>
        <type type="struct" name="Propstat">
          <field type="slice" name="Props">
            <elmtype type="ident" def="Property"/>
          </field>
          <field type="ident" def="int" name="Status"/>
          <field type="ident" def="string" name="XMLError"/>
          <field type="ident" def="string" name="ResponseDescription"/>
        </type>
        <type name="DeadPropsHolder" type="interface">
          <method name="DeadProps">
            <paramsList/>
            <resultsList>
              <type type="map">
                <keytype type="selector">
                  <prefix value="xml"/>
                  <item value="Name"/>
                </keytype>
                <valtype type="ident" def="Property"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Patch">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="Proppatch"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="Propstat"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Condition">
          <field type="ident" def="bool" name="Not"/>
          <field type="ident" def="string" name="Token"/>
          <field type="ident" def="string" name="ETag"/>
        </type>
        <type name="LockSystem" type="interface">
          <method name="Confirm">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
              <type type="ellipsis">
                <type type="ident" def="Condition"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="func">
                <paramsList/>
                <resultsList/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Create">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="LockDetails"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="string"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Refresh">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="time"/>
                <item value="Duration"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="LockDetails"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Unlock">
            <paramsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="LockDetails">
          <field type="ident" def="string" name="Root"/>
          <field type="selector" name="Duration">
            <prefix value="time"/>
            <item value="Duration"/>
          </field>
          <field type="ident" def="string" name="OwnerXML"/>
          <field type="ident" def="bool" name="ZeroDepth"/>
        </type>
        <type name="FileSystem" type="interface">
          <method name="Mkdir">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="selector">
                <prefix value="os"/>
                <item value="FileMode"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="OpenFile">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="int"/>
              <type type="selector">
                <prefix value="os"/>
                <item value="FileMode"/>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="File"/>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="RemoveAll">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Rename">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Stat">
            <paramsList>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="os"/>
                <item value="FileInfo"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type name="File" type="interface"/>
        <type name="Dir" type="ident">
          <type type="ident" def="string"/>
        </type>
      </types>
      <functions>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="countingReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalXML">
          <recvList>
            <type type="pointer">
              <type type="ident" def="propfindProps"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="xml"/>
                <item value="Decoder"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="xml"/>
              <item value="StartElement"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MarshalXML">
          <recvList>
            <type type="ident" def="propstat"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="xml"/>
                <item value="Encoder"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="xml"/>
              <item value="StartElement"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalXML">
          <recvList>
            <type type="pointer">
              <type type="ident" def="xmlValue"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="xml"/>
                <item value="Decoder"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="xml"/>
              <item value="StartElement"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UnmarshalXML">
          <recvList>
            <type type="pointer">
              <type type="ident" def="proppatchProps"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="xml"/>
                <item value="Decoder"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="xml"/>
              <item value="StartElement"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Handler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="StripPrefix">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
          </resultsList>
        </function>
        <function name="StatusText">
          <recvList/>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewMemLS">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="LockSystem"/>
          </resultsList>
        </function>
        <function name="Confirm">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memLS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ellipsis">
              <type type="ident" def="Condition"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="func">
              <paramsList/>
              <resultsList/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Create">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memLS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="LockDetails"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Refresh">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memLS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="LockDetails"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Unlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memLS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="byExpiry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Less">
          <recvList>
            <type type="pointer">
              <type type="ident" def="byExpiry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Swap">
          <recvList>
            <type type="pointer">
              <type type="ident" def="byExpiry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Push">
          <recvList>
            <type type="pointer">
              <type type="ident" def="byExpiry"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Pop">
          <recvList>
            <type type="pointer">
              <type type="ident" def="byExpiry"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="Mkdir">
          <recvList>
            <type type="ident" def="Dir"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OpenFile">
          <recvList>
            <type type="ident" def="Dir"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="File"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveAll">
          <recvList>
            <type type="ident" def="Dir"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Rename">
          <recvList>
            <type type="ident" def="Dir"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList>
            <type type="ident" def="Dir"/>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewMemFS">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="FileSystem"/>
          </resultsList>
        </function>
        <function name="Mkdir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="OpenFile">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="File"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RemoveAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Rename">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFS"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DeadProps">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFSNode"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="xml"/>
                <item value="Name"/>
              </keytype>
              <valtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Patch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFSNode"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Proppatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Propstat"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Name">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Size">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int64"/>
          </resultsList>
        </function>
        <function name="Mode">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileMode"/>
            </type>
          </resultsList>
        </function>
        <function name="ModTime">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </resultsList>
        </function>
        <function name="IsDir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Sys">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFileInfo"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="DeadProps">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="map">
              <keytype type="selector">
                <prefix value="xml"/>
                <item value="Name"/>
              </keytype>
              <valtype type="ident" def="Property"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Patch">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="Proppatch"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="Propstat"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Readdir">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="selector">
                <prefix value="os"/>
                <item value="FileInfo"/>
              </elmtype>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Seek">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="int64"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Stat">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="os"/>
              <item value="FileInfo"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="memFile"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="StatusMulti"/>
        <name value="StatusUnprocessableEntity"/>
        <name value="StatusLocked"/>
        <name value="StatusFailedDependency"/>
        <name value="StatusInsufficientStorage"/>
        <name value="ErrConfirmationFailed"/>
        <name value="ErrForbidden"/>
        <name value="ErrLocked"/>
        <name value="ErrNoSuchLock"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/context">
      <types>
        <type name="Context" type="interface">
          <method name="Deadline">
            <paramsList/>
            <resultsList>
              <type type="selector">
                <prefix value="time"/>
                <item value="Time"/>
              </type>
              <type type="ident" def="bool"/>
            </resultsList>
          </method>
          <method name="Done">
            <paramsList/>
            <resultsList>
              <type type="channel" dir="2">
                <type type="struct" name=""/>
              </type>
            </resultsList>
          </method>
          <method name="Err">
            <paramsList/>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
          <method name="Value">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="interface"/>
            </resultsList>
          </method>
        </type>
        <type name="CancelFunc" type="func">
          <paramsList/>
          <resultsList/>
        </type>
      </types>
      <functions>
        <function name="Deadline">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="Done">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Err">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList/>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="emptyCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Background">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="TODO">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="WithCancel">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
            <type type="ident" def="CancelFunc"/>
          </resultsList>
        </function>
        <function name="Done">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cancelCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="channel" dir="2">
              <type type="struct" name=""/>
            </type>
          </resultsList>
        </function>
        <function name="Err">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cancelCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="cancelCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WithDeadline">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
            <type type="ident" def="CancelFunc"/>
          </resultsList>
        </function>
        <function name="Deadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timerCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="timerCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="WithTimeout">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="selector">
              <prefix value="time"/>
              <item value="Duration"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
            <type type="ident" def="CancelFunc"/>
          </resultsList>
        </function>
        <function name="WithValue">
          <recvList/>
          <paramsList>
            <type type="ident" def="Context"/>
            <type type="interface"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Context"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="valueCtx"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Value">
          <recvList>
            <type type="pointer">
              <type type="ident" def="valueCtx"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="interface"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Canceled"/>
        <name value="DeadlineExceeded"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/proxy">
      <types>
        <type name="Dialer" type="interface">
          <method name="Dial">
            <paramsList>
              <type type="ident" def="string"/>
              <type type="ident" def="string"/>
            </paramsList>
            <resultsList>
              <type type="selector">
                <prefix value="net"/>
                <item value="Conn"/>
              </type>
              <type type="ident" def="error"/>
            </resultsList>
          </method>
        </type>
        <type type="struct" name="Auth">
          <field type="ident" def="string" name="User"/>
          <field type="ident" def="string" name="Password"/>
        </type>
        <type type="struct" name="PerHost">
          <field type="ident" def="Dialer" name="def"/>
          <field type="ident" def="Dialer" name="bypass"/>
          <field type="slice" name="bypassNetworks">
            <elmtype type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </elmtype>
          </field>
          <field type="slice" name="bypassIPs">
            <elmtype type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </elmtype>
          </field>
          <field type="slice" name="bypassZones">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="slice" name="bypassHosts">
            <elmtype type="ident" def="string"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="SOCKS5">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="pointer">
              <type type="ident" def="Auth"/>
            </type>
            <type type="ident" def="Dialer"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dialer"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="socks5"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FromEnvironment">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="ident" def="Dialer"/>
          </resultsList>
        </function>
        <function name="RegisterDialerType">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="func">
              <paramsList>
                <type type="pointer">
                  <type type="selector">
                    <prefix value="url"/>
                    <item value="URL"/>
                  </type>
                </type>
                <type type="ident" def="Dialer"/>
              </paramsList>
              <resultsList>
                <type type="ident" def="Dialer"/>
                <type type="ident" def="error"/>
              </resultsList>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="FromURL">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="Dialer"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Dialer"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPerHost">
          <recvList/>
          <paramsList>
            <type type="ident" def="Dialer"/>
            <type type="ident" def="Dialer"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AddFromString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddIP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="IP"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddNetwork">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="IPNet"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddZone">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="AddHost">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PerHost"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Dial">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="Direct"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/html/atom">
      <types>
        <type name="Atom" type="ident">
          <type type="ident" def="uint32"/>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="Atom"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Lookup">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="Atom"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="A"/>
        <name value="Abbr"/>
        <name value="Accept"/>
        <name value="AcceptCharset"/>
        <name value="Accesskey"/>
        <name value="Action"/>
        <name value="Address"/>
        <name value="Align"/>
        <name value="Alt"/>
        <name value="Annotation"/>
        <name value="AnnotationXml"/>
        <name value="Applet"/>
        <name value="Area"/>
        <name value="Article"/>
        <name value="Aside"/>
        <name value="Async"/>
        <name value="Audio"/>
        <name value="Autocomplete"/>
        <name value="Autofocus"/>
        <name value="Autoplay"/>
        <name value="B"/>
        <name value="Base"/>
        <name value="Basefont"/>
        <name value="Bdi"/>
        <name value="Bdo"/>
        <name value="Bgsound"/>
        <name value="Big"/>
        <name value="Blink"/>
        <name value="Blockquote"/>
        <name value="Body"/>
        <name value="Br"/>
        <name value="Button"/>
        <name value="Canvas"/>
        <name value="Caption"/>
        <name value="Center"/>
        <name value="Challenge"/>
        <name value="Charset"/>
        <name value="Checked"/>
        <name value="Cite"/>
        <name value="Class"/>
        <name value="Code"/>
        <name value="Col"/>
        <name value="Colgroup"/>
        <name value="Color"/>
        <name value="Cols"/>
        <name value="Colspan"/>
        <name value="Command"/>
        <name value="Content"/>
        <name value="Contenteditable"/>
        <name value="Contextmenu"/>
        <name value="Controls"/>
        <name value="Coords"/>
        <name value="Crossorigin"/>
        <name value="Data"/>
        <name value="Datalist"/>
        <name value="Datetime"/>
        <name value="Dd"/>
        <name value="Default"/>
        <name value="Defer"/>
        <name value="Del"/>
        <name value="Desc"/>
        <name value="Details"/>
        <name value="Dfn"/>
        <name value="Dialog"/>
        <name value="Dir"/>
        <name value="Dirname"/>
        <name value="Disabled"/>
        <name value="Div"/>
        <name value="Dl"/>
        <name value="Download"/>
        <name value="Draggable"/>
        <name value="Dropzone"/>
        <name value="Dt"/>
        <name value="Em"/>
        <name value="Embed"/>
        <name value="Enctype"/>
        <name value="Face"/>
        <name value="Fieldset"/>
        <name value="Figcaption"/>
        <name value="Figure"/>
        <name value="Font"/>
        <name value="Footer"/>
        <name value="For"/>
        <name value="ForeignObject"/>
        <name value="Foreignobject"/>
        <name value="Form"/>
        <name value="Formaction"/>
        <name value="Formenctype"/>
        <name value="Formmethod"/>
        <name value="Formnovalidate"/>
        <name value="Formtarget"/>
        <name value="Frame"/>
        <name value="Frameset"/>
        <name value="H1"/>
        <name value="H2"/>
        <name value="H3"/>
        <name value="H4"/>
        <name value="H5"/>
        <name value="H6"/>
        <name value="Head"/>
        <name value="Header"/>
        <name value="Headers"/>
        <name value="Height"/>
        <name value="Hgroup"/>
        <name value="Hidden"/>
        <name value="High"/>
        <name value="Hr"/>
        <name value="Href"/>
        <name value="Hreflang"/>
        <name value="Html"/>
        <name value="HttpEquiv"/>
        <name value="I"/>
        <name value="Icon"/>
        <name value="Id"/>
        <name value="Iframe"/>
        <name value="Image"/>
        <name value="Img"/>
        <name value="Input"/>
        <name value="Inputmode"/>
        <name value="Ins"/>
        <name value="Isindex"/>
        <name value="Ismap"/>
        <name value="Itemid"/>
        <name value="Itemprop"/>
        <name value="Itemref"/>
        <name value="Itemscope"/>
        <name value="Itemtype"/>
        <name value="Kbd"/>
        <name value="Keygen"/>
        <name value="Keytype"/>
        <name value="Kind"/>
        <name value="Label"/>
        <name value="Lang"/>
        <name value="Legend"/>
        <name value="Li"/>
        <name value="Link"/>
        <name value="List"/>
        <name value="Listing"/>
        <name value="Loop"/>
        <name value="Low"/>
        <name value="Malignmark"/>
        <name value="Manifest"/>
        <name value="Map"/>
        <name value="Mark"/>
        <name value="Marquee"/>
        <name value="Math"/>
        <name value="Max"/>
        <name value="Maxlength"/>
        <name value="Media"/>
        <name value="Mediagroup"/>
        <name value="Menu"/>
        <name value="Menuitem"/>
        <name value="Meta"/>
        <name value="Meter"/>
        <name value="Method"/>
        <name value="Mglyph"/>
        <name value="Mi"/>
        <name value="Min"/>
        <name value="Minlength"/>
        <name value="Mn"/>
        <name value="Mo"/>
        <name value="Ms"/>
        <name value="Mtext"/>
        <name value="Multiple"/>
        <name value="Muted"/>
        <name value="Name"/>
        <name value="Nav"/>
        <name value="Nobr"/>
        <name value="Noembed"/>
        <name value="Noframes"/>
        <name value="Noscript"/>
        <name value="Novalidate"/>
        <name value="Object"/>
        <name value="Ol"/>
        <name value="Onabort"/>
        <name value="Onafterprint"/>
        <name value="Onautocomplete"/>
        <name value="Onautocompleteerror"/>
        <name value="Onbeforeprint"/>
        <name value="Onbeforeunload"/>
        <name value="Onblur"/>
        <name value="Oncancel"/>
        <name value="Oncanplay"/>
        <name value="Oncanplaythrough"/>
        <name value="Onchange"/>
        <name value="Onclick"/>
        <name value="Onclose"/>
        <name value="Oncontextmenu"/>
        <name value="Oncuechange"/>
        <name value="Ondblclick"/>
        <name value="Ondrag"/>
        <name value="Ondragend"/>
        <name value="Ondragenter"/>
        <name value="Ondragleave"/>
        <name value="Ondragover"/>
        <name value="Ondragstart"/>
        <name value="Ondrop"/>
        <name value="Ondurationchange"/>
        <name value="Onemptied"/>
        <name value="Onended"/>
        <name value="Onerror"/>
        <name value="Onfocus"/>
        <name value="Onhashchange"/>
        <name value="Oninput"/>
        <name value="Oninvalid"/>
        <name value="Onkeydown"/>
        <name value="Onkeypress"/>
        <name value="Onkeyup"/>
        <name value="Onlanguagechange"/>
        <name value="Onload"/>
        <name value="Onloadeddata"/>
        <name value="Onloadedmetadata"/>
        <name value="Onloadstart"/>
        <name value="Onmessage"/>
        <name value="Onmousedown"/>
        <name value="Onmousemove"/>
        <name value="Onmouseout"/>
        <name value="Onmouseover"/>
        <name value="Onmouseup"/>
        <name value="Onmousewheel"/>
        <name value="Onoffline"/>
        <name value="Ononline"/>
        <name value="Onpagehide"/>
        <name value="Onpageshow"/>
        <name value="Onpause"/>
        <name value="Onplay"/>
        <name value="Onplaying"/>
        <name value="Onpopstate"/>
        <name value="Onprogress"/>
        <name value="Onratechange"/>
        <name value="Onreset"/>
        <name value="Onresize"/>
        <name value="Onscroll"/>
        <name value="Onseeked"/>
        <name value="Onseeking"/>
        <name value="Onselect"/>
        <name value="Onshow"/>
        <name value="Onsort"/>
        <name value="Onstalled"/>
        <name value="Onstorage"/>
        <name value="Onsubmit"/>
        <name value="Onsuspend"/>
        <name value="Ontimeupdate"/>
        <name value="Ontoggle"/>
        <name value="Onunload"/>
        <name value="Onvolumechange"/>
        <name value="Onwaiting"/>
        <name value="Open"/>
        <name value="Optgroup"/>
        <name value="Optimum"/>
        <name value="Option"/>
        <name value="Output"/>
        <name value="P"/>
        <name value="Param"/>
        <name value="Pattern"/>
        <name value="Ping"/>
        <name value="Placeholder"/>
        <name value="Plaintext"/>
        <name value="Poster"/>
        <name value="Pre"/>
        <name value="Preload"/>
        <name value="Progress"/>
        <name value="Prompt"/>
        <name value="Public"/>
        <name value="Q"/>
        <name value="Radiogroup"/>
        <name value="Readonly"/>
        <name value="Rel"/>
        <name value="Required"/>
        <name value="Reversed"/>
        <name value="Rows"/>
        <name value="Rowspan"/>
        <name value="Rp"/>
        <name value="Rt"/>
        <name value="Ruby"/>
        <name value="S"/>
        <name value="Samp"/>
        <name value="Sandbox"/>
        <name value="Scope"/>
        <name value="Scoped"/>
        <name value="Script"/>
        <name value="Seamless"/>
        <name value="Section"/>
        <name value="Select"/>
        <name value="Selected"/>
        <name value="Shape"/>
        <name value="Size"/>
        <name value="Sizes"/>
        <name value="Small"/>
        <name value="Sortable"/>
        <name value="Sorted"/>
        <name value="Source"/>
        <name value="Spacer"/>
        <name value="Span"/>
        <name value="Spellcheck"/>
        <name value="Src"/>
        <name value="Srcdoc"/>
        <name value="Srclang"/>
        <name value="Start"/>
        <name value="Step"/>
        <name value="Strike"/>
        <name value="Strong"/>
        <name value="Style"/>
        <name value="Sub"/>
        <name value="Summary"/>
        <name value="Sup"/>
        <name value="Svg"/>
        <name value="System"/>
        <name value="Tabindex"/>
        <name value="Table"/>
        <name value="Target"/>
        <name value="Tbody"/>
        <name value="Td"/>
        <name value="Template"/>
        <name value="Textarea"/>
        <name value="Tfoot"/>
        <name value="Th"/>
        <name value="Thead"/>
        <name value="Time"/>
        <name value="Title"/>
        <name value="Tr"/>
        <name value="Track"/>
        <name value="Translate"/>
        <name value="Tt"/>
        <name value="Type"/>
        <name value="Typemustmatch"/>
        <name value="U"/>
        <name value="Ul"/>
        <name value="Usemap"/>
        <name value="Value"/>
        <name value="Var"/>
        <name value="Video"/>
        <name value="Wbr"/>
        <name value="Width"/>
        <name value="Wrap"/>
        <name value="Xmp"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/ipv4">
      <types>
        <type name="ICMPType" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="ICMPFilter">
          <field type="ident" def="sysICMPFilter" name=""/>
        </type>
        <type name="HeaderFlags" type="ident">
          <type type="ident" def="int"/>
        </type>
        <type type="struct" name="Header">
          <field type="ident" def="int" name="Version"/>
          <field type="ident" def="int" name="Len"/>
          <field type="ident" def="int" name="TOS"/>
          <field type="ident" def="int" name="TotalLen"/>
          <field type="ident" def="int" name="ID"/>
          <field type="ident" def="HeaderFlags" name="Flags"/>
          <field type="ident" def="int" name="FragOff"/>
          <field type="ident" def="int" name="TTL"/>
          <field type="ident" def="int" name="Protocol"/>
          <field type="ident" def="int" name="Checksum"/>
          <field type="selector" name="Src">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="Dst">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="slice" name="Options">
            <elmtype type="ident" def="byte"/>
          </field>
        </type>
        <type type="struct" name="Conn">
          <field type="ident" def="genericOpt" name=""/>
        </type>
        <type type="struct" name="PacketConn">
          <field type="ident" def="genericOpt" name=""/>
          <field type="ident" def="dgramOpt" name=""/>
          <field type="ident" def="payloadHandler" name=""/>
        </type>
        <type type="struct" name="RawConn">
          <field type="ident" def="genericOpt" name=""/>
          <field type="ident" def="dgramOpt" name=""/>
          <field type="ident" def="packetHandler" name=""/>
        </type>
        <type name="ControlFlags" type="ident">
          <type type="ident" def="uint"/>
        </type>
        <type type="struct" name="ControlMessage">
          <field type="ident" def="int" name="TTL"/>
          <field type="selector" name="Src">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="selector" name="Dst">
            <prefix value="net"/>
            <item value="IP"/>
          </field>
          <field type="ident" def="int" name="IfIndex"/>
        </type>
      </types>
      <functions>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="payloadHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadFrom">
          <recvList>
            <type type="pointer">
              <type type="ident" def="packetHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteTo">
          <recvList>
            <type type="pointer">
              <type type="ident" def="packetHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="ident" def="ICMPType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Protocol">
          <recvList>
            <type type="ident" def="ICMPType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Accept">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Block">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="SetAll">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WillBlock">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ICMPType"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Marshal">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ParseHeader">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Header"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TOS">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTOS">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TOS">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTOS">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="TTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="genericOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Conn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </resultsList>
        </function>
        <function name="SetControlMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ControlFlags"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewPacketConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="PacketConn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="PacketConn"/>
            </type>
          </resultsList>
        </function>
        <function name="SetControlMessage">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="ControlFlags"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewRawConn">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="PacketConn"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="RawConn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExcludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastTTL">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastInterface">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="MulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetMulticastLoopback">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="JoinSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="LeaveSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ExcludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IncludeSourceSpecificGroup">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="net"/>
                <item value="Interface"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetICMPFilter">
          <recvList>
            <type type="pointer">
              <type type="ident" def="dgramOpt"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ICMPFilter"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="String">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ControlMessage"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ICMPTypeEchoReply"/>
        <name value="ICMPTypeDestinationUnreachable"/>
        <name value="ICMPTypeRedirect"/>
        <name value="ICMPTypeEcho"/>
        <name value="ICMPTypeRouterAdvertisement"/>
        <name value="ICMPTypeRouterSolicitation"/>
        <name value="ICMPTypeTimeExceeded"/>
        <name value="ICMPTypeParameterProblem"/>
        <name value="ICMPTypeTimestamp"/>
        <name value="ICMPTypeTimestampReply"/>
        <name value="ICMPTypePhoturis"/>
        <name value="Version"/>
        <name value="HeaderLen"/>
        <name value="MoreFragments"/>
        <name value="DontFragment"/>
        <name value="FlagTTL"/>
        <name value="FlagSrc"/>
        <name value="FlagDst"/>
        <name value="FlagInterface"/>
      </names>
    </package>
    <package importpath="code.google.com/p/go.net/html/charset">
      <types/>
      <functions>
        <function name="Lookup">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="Encoding"/>
            </type>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DetermineEncoding">
          <recvList/>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="encoding"/>
              <item value="Encoding"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="NewReader">
          <recvList/>
          <paramsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewReaderLabel">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="code.google.com/p/go.net/websocket">
      <types>
        <type type="struct" name="ProtocolError">
          <field type="ident" def="string" name="ErrorString"/>
        </type>
        <type type="struct" name="Addr">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Config">
          <field type="pointer" name="Location">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="pointer" name="Origin">
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </field>
          <field type="slice" name="Protocol">
            <elmtype type="ident" def="string"/>
          </field>
          <field type="ident" def="int" name="Version"/>
          <field type="pointer" name="TlsConfig">
            <type type="selector">
              <prefix value="tls"/>
              <item value="Config"/>
            </type>
          </field>
          <field type="selector" name="Header">
            <prefix value="http"/>
            <item value="Header"/>
          </field>
          <field type="map" name="handshakeData">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Conn">
          <field type="pointer" name="config">
            <type type="ident" def="Config"/>
          </field>
          <field type="pointer" name="request">
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="pointer" name="buf">
            <type type="selector">
              <prefix value="bufio"/>
              <item value="ReadWriter"/>
            </type>
          </field>
          <field type="selector" name="rwc">
            <prefix value="io"/>
            <item value="ReadWriteCloser"/>
          </field>
          <field type="selector" name="rio">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="frameReaderFactory" name=""/>
          <field type="ident" def="frameReader" name=""/>
          <field type="selector" name="wio">
            <prefix value="sync"/>
            <item value="Mutex"/>
          </field>
          <field type="ident" def="frameWriterFactory" name=""/>
          <field type="ident" def="frameHandler" name=""/>
          <field type="ident" def="byte" name="PayloadType"/>
          <field type="ident" def="int" name="defaultCloseStatus"/>
        </type>
        <type type="struct" name="Codec">
          <field type="func" name="Marshal">
            <paramsList>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="byte"/>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="func" name="Unmarshal">
            <paramsList>
              <type type="slice">
                <elmtype type="ident" def="byte"/>
              </type>
              <type type="ident" def="byte"/>
              <type type="interface"/>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
        </type>
        <type type="struct" name="Server">
          <field type="ident" def="Config" name=""/>
          <field type="func" name="Handshake">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="Config"/>
              </type>
              <type type="pointer">
                <type type="selector">
                  <prefix value="http"/>
                  <item value="Request"/>
                </type>
              </type>
            </paramsList>
            <resultsList>
              <type type="ident" def="error"/>
            </resultsList>
          </field>
          <field type="ident" def="Handler" name=""/>
        </type>
        <type name="Handler" type="func">
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </paramsList>
          <resultsList/>
        </type>
        <type type="struct" name="DialError">
          <field type="pointer" name="">
            <type type="ident" def="Config"/>
          </field>
          <field type="ident" def="error" name="Err"/>
        </type>
      </types>
      <functions>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ProtocolError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Network">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Addr"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="IsClientConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="IsServerConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="LocalAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="RemoteAddr">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="net"/>
              <item value="Addr"/>
            </type>
          </resultsList>
        </function>
        <function name="SetDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetReadDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="SetWriteDeadline">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="time"/>
              <item value="Time"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Config">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </resultsList>
        </function>
        <function name="Request">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="Send">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Receive">
          <recvList>
            <type type="ident" def="Codec"/>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="ident" def="Server"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="ident" def="Handler"/>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Read">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameReader"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="PayloadType">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="byte"/>
          </resultsList>
        </function>
        <function name="HeaderReader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </resultsList>
        </function>
        <function name="TrailerReader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="io"/>
              <item value="Reader"/>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameReader"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="NewFrameReader">
          <recvList>
            <type type="ident" def="hybiFrameReaderFactory"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="frameReader"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Close">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameWriter"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewFrameWriter">
          <recvList>
            <type type="ident" def="hybiFrameWriterFactory"/>
          </recvList>
          <paramsList>
            <type type="ident" def="byte"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="frameWriter"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="HandleFrame">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="frameReader"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="frameReader"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WriteClose">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="WritePong">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiFrameHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ReadHandshake">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiServerHandshaker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Reader"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Origin">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="url"/>
                <item value="URL"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="AcceptHandshake">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiServerHandshaker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="Writer"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewServerConn">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hybiServerHandshaker"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="bufio"/>
                <item value="ReadWriter"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="DialError"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="NewConfig">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="NewClient">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
            <type type="selector">
              <prefix value="io"/>
              <item value="ReadWriteCloser"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Dial">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DialConfig">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="Config"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Conn"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names>
        <name value="ProtocolVersionHybi13"/>
        <name value="ProtocolVersionHybi"/>
        <name value="SupportedProtocolVersion"/>
        <name value="ContinuationFrame"/>
        <name value="TextFrame"/>
        <name value="BinaryFrame"/>
        <name value="CloseFrame"/>
        <name value="PingFrame"/>
        <name value="PongFrame"/>
        <name value="UnknownFrame"/>
        <name value="ErrBadProtocolVersion"/>
        <name value="ErrBadScheme"/>
        <name value="ErrBadStatus"/>
        <name value="ErrBadUpgrade"/>
        <name value="ErrBadWebSocketOrigin"/>
        <name value="ErrBadWebSocketLocation"/>
        <name value="ErrBadWebSocketProtocol"/>
        <name value="ErrBadWebSocketVersion"/>
        <name value="ErrChallengeResponse"/>
        <name value="ErrBadFrame"/>
        <name value="ErrBadFrameBoundary"/>
        <name value="ErrNotWebSocket"/>
        <name value="ErrBadRequestMethod"/>
        <name value="ErrNotSupported"/>
        <name value="Message"/>
        <name value="JSON"/>
        <name value="ErrBadMaskingKey"/>
        <name value="ErrBadPongMessage"/>
        <name value="ErrBadClosingStatus"/>
        <name value="ErrUnsupportedExtensions"/>
        <name value="ErrNotImplemented"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="bufio"/>
    <import path="crypto/tls"/>
    <import path="encoding/json"/>
    <import path="errors"/>
    <import path="io"/>
    <import path="io/ioutil"/>
    <import path="net"/>
    <import path="net/http"/>
    <import path="net/url"/>
    <import path="sync"/>
    <import path="time"/>
    <import path="fmt"/>
    <import path="bytes"/>
    <import path="crypto/rand"/>
    <import path="crypto/sha1"/>
    <import path="encoding/base64"/>
    <import path="encoding/binary"/>
    <import path="strings"/>
    <import path="encoding/xml"/>
    <import path="log"/>
    <import path="os"/>
    <import path="runtime"/>
    <import path="mime"/>
    <import path="path/filepath"/>
    <import path="strconv"/>
    <import path="container/heap"/>
    <import path="flag"/>
    <import path="code.google.com/p/go.net/webdav"/>
    <import path="path"/>
    <import path="html/template"/>
    <import path="sort"/>
    <import path="sync/atomic"/>
    <import path="code.google.com/p/go.net/context"/>
    <import path="code.google.com/p/go.net/internal/timeseries"/>
    <import path="math"/>
    <import path="net/http/cookiejar"/>
    <import path="go/format"/>
    <import path="regexp"/>
    <import path="code.google.com/p/go.net/idna"/>
    <import path="syscall"/>
    <import path="unsafe"/>
    <import path="code.google.com/p/go.net/internal/iana"/>
    <import path="reflect"/>
    <import path="os/exec"/>
    <import path="C"/>
    <import path="unicode/utf8"/>
    <import path="code.google.com/p/go.net/ipv4"/>
    <import path="code.google.com/p/go.net/ipv6"/>
    <import path="code.google.com/p/go.net/html/atom"/>
    <import path="code.google.com/p/go.text/encoding"/>
    <import path="code.google.com/p/go.text/encoding/charmap"/>
    <import path="code.google.com/p/go.text/encoding/japanese"/>
    <import path="code.google.com/p/go.text/encoding/korean"/>
    <import path="code.google.com/p/go.text/encoding/simplifiedchinese"/>
    <import path="code.google.com/p/go.text/encoding/traditionalchinese"/>
    <import path="code.google.com/p/go.text/encoding/unicode"/>
    <import path="code.google.com/p/go.net/html"/>
    <import path="code.google.com/p/go.text/transform"/>
    <import path="math/rand"/>
    <import path="net/textproto"/>
  </imports>
</project>
