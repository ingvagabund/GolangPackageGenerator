<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-hashicorp-hcl-0-0.2.git513e04c.fc24">
  <packages>
    <package importpath="github.com/hashicorp/hcl/json">
      <types/>
      <functions>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="hcl"/>
                <item value="Object"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Lex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonLex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="jsonSymType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="jsonLex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="FLOAT"/>
        <name value="NUMBER"/>
        <name value="COLON"/>
        <name value="COMMA"/>
        <name value="IDENTIFIER"/>
        <name value="EQUAL"/>
        <name value="NEWLINE"/>
        <name value="STRING"/>
        <name value="LEFTBRACE"/>
        <name value="RIGHTBRACE"/>
        <name value="LEFTBRACKET"/>
        <name value="RIGHTBRACKET"/>
        <name value="TRUE"/>
        <name value="FALSE"/>
        <name value="NULL"/>
        <name value="MINUS"/>
        <name value="PERIOD"/>
        <name value="EPLUS"/>
        <name value="EMINUS"/>
      </names>
    </package>
    <package importpath="github.com/hashicorp/hcl">
      <types/>
      <functions>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="hcl"/>
                <item value="Object"/>
              </type>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Decode">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="DecodeObject">
          <recvList/>
          <paramsList>
            <type type="interface"/>
            <type type="pointer">
              <type type="selector">
                <prefix value="hcl"/>
                <item value="Object"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/hashicorp/hcl/hcl">
      <types>
        <type name="ValueType" type="ident">
          <type type="ident" def="byte"/>
        </type>
        <type type="struct" name="Object">
          <field type="ident" def="string" name="Key"/>
          <field type="ident" def="ValueType" name="Type"/>
          <field type="interface" name="Value"/>
          <field type="pointer" name="Next">
            <type type="ident" def="Object"/>
          </field>
        </type>
        <type name="ObjectList" type="slice">
          <elmtype type="pointer">
            <type type="ident" def="Object"/>
          </elmtype>
        </type>
      </types>
      <functions>
        <function name="String">
          <recvList>
            <type type="ident" def="ValueType"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Parse">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="GoString">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="Get">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </resultsList>
        </function>
        <function name="Elem">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="bool"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Object"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Len">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Object"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Flat">
          <recvList>
            <type type="ident" def="ObjectList"/>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Object"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Lex">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hclLex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="hclSymType"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList>
            <type type="pointer">
              <type type="ident" def="hclLex"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
      </functions>
      <names>
        <name value="BOOL"/>
        <name value="FLOAT"/>
        <name value="NUMBER"/>
        <name value="COMMA"/>
        <name value="COMMAEND"/>
        <name value="IDENTIFIER"/>
        <name value="EQUAL"/>
        <name value="NEWLINE"/>
        <name value="STRING"/>
        <name value="MINUS"/>
        <name value="LEFTBRACE"/>
        <name value="RIGHTBRACE"/>
        <name value="LEFTBRACKET"/>
        <name value="RIGHTBRACKET"/>
        <name value="PERIOD"/>
        <name value="EPLUS"/>
        <name value="EMINUS"/>
        <name value="ValueTypeUnknown"/>
        <name value="ValueTypeFloat"/>
        <name value="ValueTypeInt"/>
        <name value="ValueTypeString"/>
        <name value="ValueTypeBool"/>
        <name value="ValueTypeNil"/>
        <name value="ValueTypeList"/>
        <name value="ValueTypeObject"/>
      </names>
    </package>
  </packages>
  <imports>
    <import path="fmt"/>
    <import path="github.com/hashicorp/hcl/hcl"/>
    <import path="github.com/hashicorp/hcl/json"/>
    <import path="unicode"/>
    <import path="errors"/>
    <import path="reflect"/>
    <import path="sort"/>
    <import path="strconv"/>
    <import path="strings"/>
    <import path="sync"/>
    <import path="github.com/hashicorp/go-multierror"/>
    <import path="bytes"/>
    <import path="unicode/utf8"/>
  </imports>
</project>
