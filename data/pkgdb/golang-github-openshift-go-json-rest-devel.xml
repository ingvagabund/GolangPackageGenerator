<?xml version='1.0' encoding='ASCII'?>
<project ipprefix="" commit="commit" nvr="golang-github-openshift-go-json-rest-0-0.4.git7715b15.fc24">
  <packages>
    <package importpath="github.com/openshift/go-json-rest/test">
      <types>
        <type type="struct" name="Recorded">
          <field type="pointer" name="T">
            <type type="selector">
              <prefix value="testing"/>
              <item value="T"/>
            </type>
          </field>
          <field type="pointer" name="Recorder">
            <type type="selector">
              <prefix value="httptest"/>
              <item value="ResponseRecorder"/>
            </type>
          </field>
        </type>
      </types>
      <functions>
        <function name="MakeSimpleRequest">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </resultsList>
        </function>
        <function name="CodeIs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HeaderIs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ContentTypeIsJson">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ContentEncodingIsGzip">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="BodyIs">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecodeJsonPayload">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="httptest"/>
                <item value="ResponseRecorder"/>
              </type>
            </type>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RunRequest">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="selector">
                <prefix value="testing"/>
                <item value="T"/>
              </type>
            </type>
            <type type="selector">
              <prefix value="http"/>
              <item value="Handler"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </resultsList>
        </function>
        <function name="CodeIs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="HeaderIs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="ContentTypeIsJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="ContentEncodingIsGzip">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="BodyIs">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="DecodeJsonPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Recorded"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/openshift/go-json-rest">
      <types>
        <type type="struct" name="ResponseWriter">
          <field type="selector" name="">
            <prefix value="http"/>
            <item value="ResponseWriter"/>
          </field>
          <field type="ident" def="bool" name="isIndented"/>
        </type>
        <type type="struct" name="Request">
          <field type="pointer" name="">
            <type type="selector">
              <prefix value="http"/>
              <item value="Request"/>
            </type>
          </field>
          <field type="map" name="PathParams">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="ResourceHandler">
          <field type="pointer" name="internalRouter">
            <type type="ident" def="router"/>
          </field>
          <field type="pointer" name="statusService">
            <type type="ident" def="statusService"/>
          </field>
          <field type="pointer" name="env">
            <type type="ident" def="env"/>
          </field>
          <field type="ident" def="bool" name="EnableGzip"/>
          <field type="ident" def="bool" name="DisableJsonIndent"/>
          <field type="ident" def="bool" name="EnableStatusService"/>
          <field type="ident" def="bool" name="EnableResponseStackTrace"/>
          <field type="ident" def="bool" name="EnableLogAsJson"/>
          <field type="ident" def="bool" name="EnableRelaxedContentType"/>
          <field type="pointer" name="Logger">
            <type type="selector">
              <prefix value="log"/>
              <item value="Logger"/>
            </type>
          </field>
        </type>
        <type type="struct" name="Route">
          <field type="ident" def="string" name="HttpMethod"/>
          <field type="ident" def="string" name="PathExp"/>
          <field type="func" name="Func">
            <paramsList>
              <type type="pointer">
                <type type="ident" def="ResponseWriter"/>
              </type>
              <type type="pointer">
                <type type="ident" def="Request"/>
              </type>
            </paramsList>
            <resultsList/>
          </field>
        </type>
      </types>
      <functions>
        <function name="WriteJson">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="Error">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ResponseWriter"/>
            </type>
            <type type="ident" def="string"/>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="NotFound">
          <recvList/>
          <paramsList>
            <type type="pointer">
              <type type="ident" def="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="PathParam">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="string"/>
          </resultsList>
        </function>
        <function name="DecodeJsonPayload">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="UriBase">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </resultsList>
        </function>
        <function name="UriFor">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </resultsList>
        </function>
        <function name="UriForWithParams">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Request"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="map">
              <keytype type="ident" def="string"/>
              <valtype type="slice">
                <elmtype type="ident" def="string"/>
              </valtype>
            </type>
          </paramsList>
          <resultsList>
            <type type="selector">
              <prefix value="url"/>
              <item value="URL"/>
            </type>
          </resultsList>
        </function>
        <function name="Flush">
          <recvList>
            <type type="ident" def="flusher"/>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="recorderResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="recorderResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="RouteObjectMethod">
          <recvList/>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="Route"/>
          </resultsList>
        </function>
        <function name="SetRoutes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ellipsis">
              <type type="ident" def="Route"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="ServeHTTP">
          <recvList>
            <type type="pointer">
              <type type="ident" def="ResourceHandler"/>
            </type>
          </recvList>
          <paramsList>
            <type type="selector">
              <prefix value="http"/>
              <item value="ResponseWriter"/>
            </type>
            <type type="pointer">
              <type type="selector">
                <prefix value="http"/>
                <item value="Request"/>
              </type>
            </type>
          </paramsList>
          <resultsList/>
        </function>
        <function name="WriteHeader">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gzipResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="int"/>
          </paramsList>
          <resultsList/>
        </function>
        <function name="Write">
          <recvList>
            <type type="pointer">
              <type type="ident" def="gzipResponseWriter"/>
            </type>
          </recvList>
          <paramsList>
            <type type="slice">
              <elmtype type="ident" def="byte"/>
            </type>
          </paramsList>
          <resultsList>
            <type type="ident" def="int"/>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
      </functions>
      <names/>
    </package>
    <package importpath="github.com/openshift/go-json-rest/trie">
      <types>
        <type type="struct" name="Match">
          <field type="interface" name="Route"/>
          <field type="map" name="Params">
            <keytype type="ident" def="string"/>
            <valtype type="ident" def="string"/>
          </field>
        </type>
        <type type="struct" name="Trie">
          <field type="pointer" name="root">
            <type type="ident" def="node"/>
          </field>
        </type>
      </types>
      <functions>
        <function name="New">
          <recvList/>
          <paramsList/>
          <resultsList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </resultsList>
        </function>
        <function name="AddRoute">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
            <type type="interface"/>
          </paramsList>
          <resultsList>
            <type type="ident" def="error"/>
          </resultsList>
        </function>
        <function name="FindRoutes">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Match"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="FindRoutesAndPathMatched">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Match"/>
              </elmtype>
            </type>
            <type type="ident" def="bool"/>
          </resultsList>
        </function>
        <function name="FindRoutesForPath">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList>
            <type type="ident" def="string"/>
          </paramsList>
          <resultsList>
            <type type="slice">
              <elmtype type="pointer">
                <type type="ident" def="Match"/>
              </elmtype>
            </type>
          </resultsList>
        </function>
        <function name="Compress">
          <recvList>
            <type type="pointer">
              <type type="ident" def="Trie"/>
            </type>
          </recvList>
          <paramsList/>
          <resultsList/>
        </function>
      </functions>
      <names/>
    </package>
  </packages>
  <imports>
    <import path="net/http"/>
    <import path="time"/>
    <import path="fmt"/>
    <import path="os"/>
    <import path="sync"/>
    <import path="errors"/>
    <import path="github.com/openshift/go-json-rest/trie"/>
    <import path="net/url"/>
    <import path="strings"/>
    <import path="encoding/json"/>
    <import path="io/ioutil"/>
    <import path="log"/>
    <import path="mime"/>
    <import path="reflect"/>
    <import path="runtime/debug"/>
    <import path="compress/gzip"/>
    <import path="net/http/httptest"/>
    <import path="testing"/>
  </imports>
</project>
